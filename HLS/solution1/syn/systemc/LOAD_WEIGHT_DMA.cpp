// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LOAD_WEIGHT_DMA.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LOAD_WEIGHT_DMA::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LOAD_WEIGHT_DMA::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> LOAD_WEIGHT_DMA::ap_ST_fsm_state1 = "1";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_ST_fsm_state2 = "10";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_ST_fsm_state3 = "100";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_1 = "1";
const sc_lv<1> LOAD_WEIGHT_DMA::ap_const_lv1_0 = "0";
const sc_lv<69> LOAD_WEIGHT_DMA::ap_const_lv69_0 = "000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_0 = "000";
const sc_lv<67> LOAD_WEIGHT_DMA::ap_const_lv67_0 = "0000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> LOAD_WEIGHT_DMA::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> LOAD_WEIGHT_DMA::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_2 = "10";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_5 = "101";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_4 = "100";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_3 = "11";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_1 = "1";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_6 = "110";
const sc_lv<3> LOAD_WEIGHT_DMA::ap_const_lv3_7 = "111";
const sc_lv<67> LOAD_WEIGHT_DMA::ap_const_lv67_7 = "111";
const sc_lv<2> LOAD_WEIGHT_DMA::ap_const_lv2_0 = "00";
const sc_lv<69> LOAD_WEIGHT_DMA::ap_const_lv69_1 = "1";
const sc_lv<31> LOAD_WEIGHT_DMA::ap_const_lv31_1 = "1";
const sc_lv<8> LOAD_WEIGHT_DMA::ap_const_lv8_0 = "00000000";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_19 = "11001";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_9 = "1001";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_10 = "10000";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_8 = "1000";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_7 = "111";
const sc_lv<1> LOAD_WEIGHT_DMA::ap_const_lv1_1 = "1";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_11 = "10001";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_12 = "10010";
const sc_lv<8> LOAD_WEIGHT_DMA::ap_const_lv8_FF = "11111111";
const sc_lv<9> LOAD_WEIGHT_DMA::ap_const_lv9_1FF = "111111111";
const sc_lv<9> LOAD_WEIGHT_DMA::ap_const_lv9_0 = "000000000";
const sc_lv<8> LOAD_WEIGHT_DMA::ap_const_lv8_7F = "1111111";
const sc_lv<8> LOAD_WEIGHT_DMA::ap_const_lv8_80 = "10000000";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_33 = "110011";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_23 = "100011";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_2A = "101010";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_22 = "100010";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_1A = "11010";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_1B = "11011";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_21 = "100001";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_2B = "101011";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_2C = "101100";
const sc_lv<64> LOAD_WEIGHT_DMA::ap_const_lv64_1 = "1";
const sc_lv<67> LOAD_WEIGHT_DMA::ap_const_lv67_1 = "1";
const sc_lv<8> LOAD_WEIGHT_DMA::ap_const_lv8_B = "1011";
const sc_lv<32> LOAD_WEIGHT_DMA::ap_const_lv32_2 = "10";
const bool LOAD_WEIGHT_DMA::ap_const_boolean_1 = true;

LOAD_WEIGHT_DMA::LOAD_WEIGHT_DMA(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_mac_muladd_5nbkb_U1 = new top_mac_muladd_5nbkb<1,1,5,8,8,8>("top_mac_muladd_5nbkb_U1");
    top_mac_muladd_5nbkb_U1->din0(grp_fu_1935_p0);
    top_mac_muladd_5nbkb_U1->din1(grp_fu_1935_p1);
    top_mac_muladd_5nbkb_U1->din2(grp_fu_1935_p2);
    top_mac_muladd_5nbkb_U1->dout(grp_fu_1935_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range1_all_ones_1_fu_1737_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_8_fu_1727_p4 );

    SC_METHOD(thread_Range1_all_ones_fu_1431_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_1_fu_1421_p4 );

    SC_METHOD(thread_Range1_all_zeros_1_fu_1743_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_8_fu_1727_p4 );

    SC_METHOD(thread_Range1_all_zeros_fu_1437_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_1_fu_1421_p4 );

    SC_METHOD(thread_Range2_all_ones_1_fu_1721_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_7_fu_1711_p4 );

    SC_METHOD(thread_Range2_all_ones_fu_1415_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( p_Result_s_fu_1405_p4 );

    SC_METHOD(thread_WEIGHT1_0_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_0_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_0_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_0_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_0_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_1_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_1_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_1_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_1_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_2_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_2_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_2_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_2_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_3_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_3_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_3_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_1_fu_1559_p3 );

    SC_METHOD(thread_WEIGHT1_3_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( i_mid2_fu_1125_p3 );
    sensitive << ( j_mid2_fu_1160_p3 );

    SC_METHOD(thread_WEIGHT1_4_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_4_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_4_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_4_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_4_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_5_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_5_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_5_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_5_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_6_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_6_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_6_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_6_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_0_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_0_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_1_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_1_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_1_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_1_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_2_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_2_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_2_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_2_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_3_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_3_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_3_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_3_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_4_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_4_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_4_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_4_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_5_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_5_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_5_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_5_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_WEIGHT1_7_6_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_42_cast_fu_1234_p1 );

    SC_METHOD(thread_WEIGHT1_7_6_V_ce0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_WEIGHT1_7_6_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( this_assign_4_1_fu_1865_p3 );

    SC_METHOD(thread_WEIGHT1_7_6_V_we0);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( j_mid2_fu_1160_p3 );
    sensitive << ( tmp_t_mid2_fu_1093_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bound4_fu_1025_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound4_fu_1025_p00 );

    SC_METHOD(thread_bound4_fu_1025_p00);
    sensitive << ( bound_fu_1015_p2 );

    SC_METHOD(thread_bound4_fu_1025_p2);
    sensitive << ( bound4_fu_1025_p0 );

    SC_METHOD(thread_bound_fu_1015_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cast_fu_1011_p1 );

    SC_METHOD(thread_bound_fu_1015_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cast_fu_1011_p1 );

    SC_METHOD(thread_bound_fu_1015_p2);
    sensitive << ( bound_fu_1015_p0 );
    sensitive << ( bound_fu_1015_p1 );

    SC_METHOD(thread_brmerge40_demorgan_i_1_fu_1501_p2);
    sensitive << ( newsignbit_2_fu_1377_p3 );
    sensitive << ( deleted_ones_fu_1463_p3 );

    SC_METHOD(thread_brmerge40_demorgan_i_fu_1807_p2);
    sensitive << ( newsignbit_fu_1683_p3 );
    sensitive << ( deleted_ones_1_fu_1769_p3 );

    SC_METHOD(thread_brmerge_i2_fu_1483_p2);
    sensitive << ( newsignbit_2_fu_1377_p3 );
    sensitive << ( p_not_i1_fu_1477_p2 );

    SC_METHOD(thread_brmerge_i_fu_1789_p2);
    sensitive << ( newsignbit_fu_1683_p3 );
    sensitive << ( p_not_i_fu_1783_p2 );

    SC_METHOD(thread_brmerge_i_i2_fu_1525_p2);
    sensitive << ( underflow_fu_1519_p2 );
    sensitive << ( overflow_fu_1495_p2 );

    SC_METHOD(thread_brmerge_i_i_fu_1831_p2);
    sensitive << ( underflow_2_fu_1825_p2 );
    sensitive << ( overflow_1_fu_1801_p2 );

    SC_METHOD(thread_carry_1_fu_1697_p2);
    sensitive << ( tmp_56_fu_1621_p3 );
    sensitive << ( tmp_37_fu_1691_p2 );

    SC_METHOD(thread_carry_fu_1391_p2);
    sensitive << ( tmp_50_fu_1319_p3 );
    sensitive << ( tmp_30_fu_1385_p2 );

    SC_METHOD(thread_cast_fu_1011_p1);
    sensitive << ( custom_k );

    SC_METHOD(thread_deleted_ones_1_fu_1769_p3);
    sensitive << ( carry_1_fu_1697_p2 );
    sensitive << ( Range1_all_ones_1_fu_1737_p2 );
    sensitive << ( p_41_i_fu_1763_p2 );

    SC_METHOD(thread_deleted_ones_fu_1463_p3);
    sensitive << ( carry_fu_1391_p2 );
    sensitive << ( Range1_all_ones_fu_1431_p2 );
    sensitive << ( p_41_i1_fu_1457_p2 );

    SC_METHOD(thread_deleted_zeros_1_fu_1749_p3);
    sensitive << ( carry_1_fu_1697_p2 );
    sensitive << ( Range1_all_ones_1_fu_1737_p2 );
    sensitive << ( Range1_all_zeros_1_fu_1743_p2 );

    SC_METHOD(thread_deleted_zeros_fu_1443_p3);
    sensitive << ( carry_fu_1391_p2 );
    sensitive << ( Range1_all_ones_fu_1431_p2 );
    sensitive << ( Range1_all_zeros_fu_1437_p2 );

    SC_METHOD(thread_exitcond_flatten1_fu_1113_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( bound_reg_1949 );
    sensitive << ( indvar_flatten_reg_978 );

    SC_METHOD(thread_exitcond_flatten4_fu_1051_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( tmp_reg_1959 );
    sensitive << ( indvar_flatten3_reg_934 );

    SC_METHOD(thread_exitcond_flatten_fu_1068_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( bound4_reg_1954 );
    sensitive << ( indvar_flatten4_reg_956 );

    SC_METHOD(thread_exitcond_flatten_mid_2_fu_1118_p3);
    sensitive << ( exitcond_flatten_mid_reg_1970 );
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( exitcond_flatten1_fu_1113_p2 );

    SC_METHOD(thread_exitcond_flatten_mid_fu_1045_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_1015_p2 );

    SC_METHOD(thread_exitcond_fu_1101_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( custom_k );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( l_reg_1000 );

    SC_METHOD(thread_exitcond_mid1_fu_1106_p3);
    sensitive << ( exitcond_mid_reg_1964 );
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( exitcond_fu_1101_p2 );

    SC_METHOD(thread_exitcond_mid2_fu_1153_p3);
    sensitive << ( exitcond_mid_reg_1964 );
    sensitive << ( exitcond_flatten_mid_2_fu_1118_p3 );
    sensitive << ( exitcond_mid1_fu_1106_p3 );

    SC_METHOD(thread_exitcond_mid_fu_1039_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( custom_k );

    SC_METHOD(thread_grp_fu_1935_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_grp_fu_1935_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( exitcond_mid2_fu_1153_p3 );
    sensitive << ( tmp_43_fu_1194_p1 );
    sensitive << ( tmp_45_fu_1202_p3 );

    SC_METHOD(thread_grp_fu_1935_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( l_mid2_fu_1186_p3 );

    SC_METHOD(thread_i_4_fu_1062_p2);
    sensitive << ( i_reg_945 );

    SC_METHOD(thread_i_mid2_fu_1125_p3);
    sensitive << ( i_reg_945 );
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( i_4_fu_1062_p2 );

    SC_METHOD(thread_indvar_flatten16_op_fu_1921_p2);
    sensitive << ( indvar_flatten4_reg_956 );

    SC_METHOD(thread_indvar_flatten_next3_fu_1927_p3);
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( indvar_flatten16_op_fu_1921_p2 );

    SC_METHOD(thread_indvar_flatten_next4_fu_1056_p2);
    sensitive << ( indvar_flatten3_reg_934 );

    SC_METHOD(thread_indvar_flatten_next_fu_1913_p3);
    sensitive << ( tmp_s_fu_1139_p2 );
    sensitive << ( indvar_flatten_op_fu_1907_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_1907_p2);
    sensitive << ( indvar_flatten_reg_978 );

    SC_METHOD(thread_input_dma_W_TDATA_blk_n);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_input_dma_W_TREADY);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    SC_METHOD(thread_j_3_fu_1133_p2);
    sensitive << ( j_mid_fu_1073_p3 );

    SC_METHOD(thread_j_mid2_fu_1160_p3);
    sensitive << ( j_mid_fu_1073_p3 );
    sensitive << ( exitcond_flatten_mid_2_fu_1118_p3 );
    sensitive << ( j_3_fu_1133_p2 );

    SC_METHOD(thread_j_mid_fu_1073_p3);
    sensitive << ( j_reg_967 );
    sensitive << ( exitcond_flatten_fu_1068_p2 );

    SC_METHOD(thread_l_1_fu_1901_p2);
    sensitive << ( l_mid2_fu_1186_p3 );

    SC_METHOD(thread_l_mid2_fu_1186_p3);
    sensitive << ( l_reg_1000 );
    sensitive << ( tmp_34_fu_1180_p2 );

    SC_METHOD(thread_m_1_fu_1168_p2);
    sensitive << ( m_mid_fu_1145_p3 );

    SC_METHOD(thread_m_mid2_fu_1218_p3);
    sensitive << ( m_mid_fu_1145_p3 );
    sensitive << ( exitcond_mid2_fu_1153_p3 );
    sensitive << ( m_1_fu_1168_p2 );

    SC_METHOD(thread_m_mid_fu_1145_p3);
    sensitive << ( m_reg_989 );
    sensitive << ( tmp_s_fu_1139_p2 );

    SC_METHOD(thread_newsignbit_2_fu_1377_p3);
    sensitive << ( p_Val2_7_fu_1371_p2 );

    SC_METHOD(thread_newsignbit_fu_1683_p3);
    sensitive << ( p_Val2_9_fu_1677_p2 );

    SC_METHOD(thread_overflow_1_fu_1801_p2);
    sensitive << ( brmerge_i_fu_1789_p2 );
    sensitive << ( tmp_39_fu_1795_p2 );

    SC_METHOD(thread_overflow_fu_1495_p2);
    sensitive << ( brmerge_i2_fu_1483_p2 );
    sensitive << ( tmp_32_fu_1489_p2 );

    SC_METHOD(thread_p_38_i1_fu_1471_p2);
    sensitive << ( carry_fu_1391_p2 );
    sensitive << ( Range1_all_ones_fu_1431_p2 );

    SC_METHOD(thread_p_38_i_fu_1777_p2);
    sensitive << ( carry_1_fu_1697_p2 );
    sensitive << ( Range1_all_ones_1_fu_1737_p2 );

    SC_METHOD(thread_p_41_i1_fu_1457_p2);
    sensitive << ( Range2_all_ones_fu_1415_p2 );
    sensitive << ( tmp_31_fu_1451_p2 );

    SC_METHOD(thread_p_41_i_fu_1763_p2);
    sensitive << ( Range2_all_ones_1_fu_1721_p2 );
    sensitive << ( tmp_38_fu_1757_p2 );

    SC_METHOD(thread_p_Result_1_fu_1421_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Result_7_fu_1711_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Result_8_fu_1727_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Result_s_fu_1405_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Val2_11_mux_fu_1849_p3);
    sensitive << ( p_Val2_9_fu_1677_p2 );
    sensitive << ( brmerge_i_i_fu_1831_p2 );

    SC_METHOD(thread_p_Val2_7_fu_1371_p2);
    sensitive << ( tmp_29_fu_1367_p1 );
    sensitive << ( p_Val2_s_50_fu_1301_p4 );

    SC_METHOD(thread_p_Val2_8_51_fu_1551_p3);
    sensitive << ( p_Val2_7_fu_1371_p2 );
    sensitive << ( underflow_fu_1519_p2 );

    SC_METHOD(thread_p_Val2_8_fu_1603_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Val2_8_mux_fu_1543_p3);
    sensitive << ( p_Val2_7_fu_1371_p2 );
    sensitive << ( brmerge_i_i2_fu_1525_p2 );

    SC_METHOD(thread_p_Val2_9_fu_1677_p2);
    sensitive << ( p_Val2_8_fu_1603_p4 );
    sensitive << ( tmp_36_fu_1673_p1 );

    SC_METHOD(thread_p_Val2_s_50_fu_1301_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_p_Val2_s_fu_1857_p3);
    sensitive << ( p_Val2_9_fu_1677_p2 );
    sensitive << ( underflow_2_fu_1825_p2 );

    SC_METHOD(thread_p_not_i1_fu_1477_p2);
    sensitive << ( deleted_zeros_fu_1443_p3 );

    SC_METHOD(thread_p_not_i_fu_1783_p2);
    sensitive << ( deleted_zeros_1_fu_1749_p3 );

    SC_METHOD(thread_qb_assign_1_fu_1667_p2);
    sensitive << ( tmp_35_fu_1661_p2 );
    sensitive << ( signbit_fu_1595_p3 );

    SC_METHOD(thread_qb_assign_fu_1361_p2);
    sensitive << ( tmp_28_fu_1355_p2 );
    sensitive << ( signbit_1_fu_1293_p3 );

    SC_METHOD(thread_signbit_1_fu_1293_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_signbit_fu_1595_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_this_assign_1_fu_1559_p3);
    sensitive << ( underflow_not_fu_1537_p2 );
    sensitive << ( p_Val2_8_mux_fu_1543_p3 );
    sensitive << ( p_Val2_8_51_fu_1551_p3 );

    SC_METHOD(thread_this_assign_4_1_fu_1865_p3);
    sensitive << ( underflow_2_not_fu_1843_p2 );
    sensitive << ( p_Val2_11_mux_fu_1849_p3 );
    sensitive << ( p_Val2_s_fu_1857_p3 );

    SC_METHOD(thread_tmp3_demorgan_fu_1507_p2);
    sensitive << ( p_38_i1_fu_1471_p2 );
    sensitive << ( brmerge40_demorgan_i_1_fu_1501_p2 );

    SC_METHOD(thread_tmp3_fu_1513_p2);
    sensitive << ( tmp3_demorgan_fu_1507_p2 );

    SC_METHOD(thread_tmp4_fu_1531_p2);
    sensitive << ( tmp_32_fu_1489_p2 );
    sensitive << ( brmerge40_demorgan_i_1_fu_1501_p2 );

    SC_METHOD(thread_tmp5_demorgan_fu_1813_p2);
    sensitive << ( p_38_i_fu_1777_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_1807_p2 );

    SC_METHOD(thread_tmp5_fu_1819_p2);
    sensitive << ( tmp5_demorgan_fu_1813_p2 );

    SC_METHOD(thread_tmp6_fu_1837_p2);
    sensitive << ( tmp_39_fu_1795_p2 );
    sensitive << ( brmerge40_demorgan_i_fu_1807_p2 );

    SC_METHOD(thread_tmp_20_fu_1331_p2);
    sensitive << ( tmp_51_fu_1327_p1 );
    sensitive << ( tmp_49_fu_1311_p3 );

    SC_METHOD(thread_tmp_21_fu_1337_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_22_fu_1347_p3);
    sensitive << ( tmp_21_fu_1337_p4 );
    sensitive << ( tmp_20_fu_1331_p2 );

    SC_METHOD(thread_tmp_23_fu_1174_p2);
    sensitive << ( exitcond_flatten_mid_2_fu_1118_p3 );
    sensitive << ( exitcond_mid2_fu_1153_p3 );

    SC_METHOD(thread_tmp_24_fu_1637_p2);
    sensitive << ( tmp_57_fu_1629_p3 );
    sensitive << ( tmp_55_fu_1613_p3 );

    SC_METHOD(thread_tmp_25_fu_1643_p4);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_28_fu_1355_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( tmp_22_fu_1347_p3 );

    SC_METHOD(thread_tmp_29_fu_1367_p1);
    sensitive << ( qb_assign_fu_1361_p2 );

    SC_METHOD(thread_tmp_30_fu_1385_p2);
    sensitive << ( newsignbit_2_fu_1377_p3 );

    SC_METHOD(thread_tmp_31_fu_1451_p2);
    sensitive << ( tmp_53_fu_1397_p3 );

    SC_METHOD(thread_tmp_32_fu_1489_p2);
    sensitive << ( signbit_1_fu_1293_p3 );

    SC_METHOD(thread_tmp_33_fu_1653_p3);
    sensitive << ( tmp_25_fu_1643_p4 );
    sensitive << ( tmp_24_fu_1637_p2 );

    SC_METHOD(thread_tmp_34_fu_1180_p2);
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( tmp_23_fu_1174_p2 );

    SC_METHOD(thread_tmp_35_fu_1661_p2);
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );
    sensitive << ( tmp_33_fu_1653_p3 );

    SC_METHOD(thread_tmp_36_fu_1673_p1);
    sensitive << ( qb_assign_1_fu_1667_p2 );

    SC_METHOD(thread_tmp_37_fu_1691_p2);
    sensitive << ( newsignbit_fu_1683_p3 );

    SC_METHOD(thread_tmp_38_fu_1757_p2);
    sensitive << ( tmp_59_fu_1703_p3 );

    SC_METHOD(thread_tmp_39_fu_1795_p2);
    sensitive << ( signbit_fu_1595_p3 );

    SC_METHOD(thread_tmp_42_cast_fu_1234_p1);
    sensitive << ( grp_fu_1935_p3 );

    SC_METHOD(thread_tmp_43_fu_1194_p1);
    sensitive << ( m_1_fu_1168_p2 );

    SC_METHOD(thread_tmp_44_fu_1198_p1);
    sensitive << ( m_reg_989 );

    SC_METHOD(thread_tmp_45_fu_1202_p3);
    sensitive << ( tmp_s_fu_1139_p2 );
    sensitive << ( tmp_44_fu_1198_p1 );

    SC_METHOD(thread_tmp_49_fu_1311_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_50_fu_1319_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_51_fu_1327_p1);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_53_fu_1397_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_55_fu_1613_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_56_fu_1621_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_57_fu_1629_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_59_fu_1703_p3);
    sensitive << ( input_dma_W_TDATA );

    SC_METHOD(thread_tmp_fu_1031_p3);
    sensitive << ( bound4_fu_1025_p2 );

    SC_METHOD(thread_tmp_s_fu_1139_p2);
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( exitcond_flatten_mid_2_fu_1118_p3 );

    SC_METHOD(thread_tmp_t_fu_1087_p2);
    sensitive << ( i_reg_945 );

    SC_METHOD(thread_tmp_t_mid1_fu_1081_p2);
    sensitive << ( i_reg_945 );

    SC_METHOD(thread_tmp_t_mid2_fu_1093_p3);
    sensitive << ( exitcond_flatten_fu_1068_p2 );
    sensitive << ( tmp_t_mid1_fu_1081_p2 );
    sensitive << ( tmp_t_fu_1087_p2 );

    SC_METHOD(thread_underflow_2_fu_1825_p2);
    sensitive << ( signbit_fu_1595_p3 );
    sensitive << ( tmp5_fu_1819_p2 );

    SC_METHOD(thread_underflow_2_not_fu_1843_p2);
    sensitive << ( p_38_i_fu_1777_p2 );
    sensitive << ( tmp6_fu_1837_p2 );

    SC_METHOD(thread_underflow_fu_1519_p2);
    sensitive << ( signbit_1_fu_1293_p3 );
    sensitive << ( tmp3_fu_1513_p2 );

    SC_METHOD(thread_underflow_not_fu_1537_p2);
    sensitive << ( p_38_i1_fu_1471_p2 );
    sensitive << ( tmp4_fu_1531_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_dma_W_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten4_fu_1051_p2 );

    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LOAD_WEIGHT_DMA_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_dma_W_TDATA, "(port)input_dma_W_TDATA");
    sc_trace(mVcdFile, input_dma_W_TVALID, "(port)input_dma_W_TVALID");
    sc_trace(mVcdFile, input_dma_W_TREADY, "(port)input_dma_W_TREADY");
    sc_trace(mVcdFile, input_dma_W_TLAST, "(port)input_dma_W_TLAST");
    sc_trace(mVcdFile, WEIGHT1_0_0_V_address0, "(port)WEIGHT1_0_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_0_V_ce0, "(port)WEIGHT1_0_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_0_V_we0, "(port)WEIGHT1_0_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_0_V_d0, "(port)WEIGHT1_0_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_1_V_address0, "(port)WEIGHT1_0_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_1_V_ce0, "(port)WEIGHT1_0_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_1_V_we0, "(port)WEIGHT1_0_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_1_V_d0, "(port)WEIGHT1_0_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_2_V_address0, "(port)WEIGHT1_0_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_2_V_ce0, "(port)WEIGHT1_0_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_2_V_we0, "(port)WEIGHT1_0_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_2_V_d0, "(port)WEIGHT1_0_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_3_V_address0, "(port)WEIGHT1_0_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_3_V_ce0, "(port)WEIGHT1_0_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_3_V_we0, "(port)WEIGHT1_0_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_3_V_d0, "(port)WEIGHT1_0_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_4_V_address0, "(port)WEIGHT1_0_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_4_V_ce0, "(port)WEIGHT1_0_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_4_V_we0, "(port)WEIGHT1_0_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_4_V_d0, "(port)WEIGHT1_0_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_5_V_address0, "(port)WEIGHT1_0_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_5_V_ce0, "(port)WEIGHT1_0_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_5_V_we0, "(port)WEIGHT1_0_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_5_V_d0, "(port)WEIGHT1_0_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_0_6_V_address0, "(port)WEIGHT1_0_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_0_6_V_ce0, "(port)WEIGHT1_0_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_0_6_V_we0, "(port)WEIGHT1_0_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_0_6_V_d0, "(port)WEIGHT1_0_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_0_V_address0, "(port)WEIGHT1_1_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_0_V_ce0, "(port)WEIGHT1_1_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_0_V_we0, "(port)WEIGHT1_1_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_0_V_d0, "(port)WEIGHT1_1_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_1_V_address0, "(port)WEIGHT1_1_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_1_V_ce0, "(port)WEIGHT1_1_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_1_V_we0, "(port)WEIGHT1_1_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_1_V_d0, "(port)WEIGHT1_1_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_2_V_address0, "(port)WEIGHT1_1_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_2_V_ce0, "(port)WEIGHT1_1_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_2_V_we0, "(port)WEIGHT1_1_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_2_V_d0, "(port)WEIGHT1_1_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_3_V_address0, "(port)WEIGHT1_1_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_3_V_ce0, "(port)WEIGHT1_1_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_3_V_we0, "(port)WEIGHT1_1_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_3_V_d0, "(port)WEIGHT1_1_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_4_V_address0, "(port)WEIGHT1_1_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_4_V_ce0, "(port)WEIGHT1_1_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_4_V_we0, "(port)WEIGHT1_1_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_4_V_d0, "(port)WEIGHT1_1_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_5_V_address0, "(port)WEIGHT1_1_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_5_V_ce0, "(port)WEIGHT1_1_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_5_V_we0, "(port)WEIGHT1_1_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_5_V_d0, "(port)WEIGHT1_1_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_1_6_V_address0, "(port)WEIGHT1_1_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_1_6_V_ce0, "(port)WEIGHT1_1_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_1_6_V_we0, "(port)WEIGHT1_1_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_1_6_V_d0, "(port)WEIGHT1_1_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_0_V_address0, "(port)WEIGHT1_2_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_0_V_ce0, "(port)WEIGHT1_2_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_0_V_we0, "(port)WEIGHT1_2_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_0_V_d0, "(port)WEIGHT1_2_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_1_V_address0, "(port)WEIGHT1_2_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_1_V_ce0, "(port)WEIGHT1_2_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_1_V_we0, "(port)WEIGHT1_2_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_1_V_d0, "(port)WEIGHT1_2_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_2_V_address0, "(port)WEIGHT1_2_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_2_V_ce0, "(port)WEIGHT1_2_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_2_V_we0, "(port)WEIGHT1_2_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_2_V_d0, "(port)WEIGHT1_2_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_3_V_address0, "(port)WEIGHT1_2_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_3_V_ce0, "(port)WEIGHT1_2_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_3_V_we0, "(port)WEIGHT1_2_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_3_V_d0, "(port)WEIGHT1_2_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_4_V_address0, "(port)WEIGHT1_2_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_4_V_ce0, "(port)WEIGHT1_2_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_4_V_we0, "(port)WEIGHT1_2_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_4_V_d0, "(port)WEIGHT1_2_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_5_V_address0, "(port)WEIGHT1_2_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_5_V_ce0, "(port)WEIGHT1_2_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_5_V_we0, "(port)WEIGHT1_2_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_5_V_d0, "(port)WEIGHT1_2_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_2_6_V_address0, "(port)WEIGHT1_2_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_2_6_V_ce0, "(port)WEIGHT1_2_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_2_6_V_we0, "(port)WEIGHT1_2_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_2_6_V_d0, "(port)WEIGHT1_2_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_0_V_address0, "(port)WEIGHT1_3_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_0_V_ce0, "(port)WEIGHT1_3_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_0_V_we0, "(port)WEIGHT1_3_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_0_V_d0, "(port)WEIGHT1_3_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_1_V_address0, "(port)WEIGHT1_3_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_1_V_ce0, "(port)WEIGHT1_3_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_1_V_we0, "(port)WEIGHT1_3_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_1_V_d0, "(port)WEIGHT1_3_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_2_V_address0, "(port)WEIGHT1_3_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_2_V_ce0, "(port)WEIGHT1_3_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_2_V_we0, "(port)WEIGHT1_3_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_2_V_d0, "(port)WEIGHT1_3_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_3_V_address0, "(port)WEIGHT1_3_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_3_V_ce0, "(port)WEIGHT1_3_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_3_V_we0, "(port)WEIGHT1_3_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_3_V_d0, "(port)WEIGHT1_3_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_4_V_address0, "(port)WEIGHT1_3_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_4_V_ce0, "(port)WEIGHT1_3_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_4_V_we0, "(port)WEIGHT1_3_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_4_V_d0, "(port)WEIGHT1_3_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_5_V_address0, "(port)WEIGHT1_3_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_5_V_ce0, "(port)WEIGHT1_3_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_5_V_we0, "(port)WEIGHT1_3_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_5_V_d0, "(port)WEIGHT1_3_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_3_6_V_address0, "(port)WEIGHT1_3_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_3_6_V_ce0, "(port)WEIGHT1_3_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_3_6_V_we0, "(port)WEIGHT1_3_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_3_6_V_d0, "(port)WEIGHT1_3_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_0_V_address0, "(port)WEIGHT1_4_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_0_V_ce0, "(port)WEIGHT1_4_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_0_V_we0, "(port)WEIGHT1_4_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_0_V_d0, "(port)WEIGHT1_4_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_1_V_address0, "(port)WEIGHT1_4_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_1_V_ce0, "(port)WEIGHT1_4_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_1_V_we0, "(port)WEIGHT1_4_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_1_V_d0, "(port)WEIGHT1_4_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_2_V_address0, "(port)WEIGHT1_4_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_2_V_ce0, "(port)WEIGHT1_4_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_2_V_we0, "(port)WEIGHT1_4_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_2_V_d0, "(port)WEIGHT1_4_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_3_V_address0, "(port)WEIGHT1_4_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_3_V_ce0, "(port)WEIGHT1_4_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_3_V_we0, "(port)WEIGHT1_4_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_3_V_d0, "(port)WEIGHT1_4_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_4_V_address0, "(port)WEIGHT1_4_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_4_V_ce0, "(port)WEIGHT1_4_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_4_V_we0, "(port)WEIGHT1_4_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_4_V_d0, "(port)WEIGHT1_4_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_5_V_address0, "(port)WEIGHT1_4_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_5_V_ce0, "(port)WEIGHT1_4_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_5_V_we0, "(port)WEIGHT1_4_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_5_V_d0, "(port)WEIGHT1_4_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_4_6_V_address0, "(port)WEIGHT1_4_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_4_6_V_ce0, "(port)WEIGHT1_4_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_4_6_V_we0, "(port)WEIGHT1_4_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_4_6_V_d0, "(port)WEIGHT1_4_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_0_V_address0, "(port)WEIGHT1_5_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_0_V_ce0, "(port)WEIGHT1_5_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_0_V_we0, "(port)WEIGHT1_5_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_0_V_d0, "(port)WEIGHT1_5_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_1_V_address0, "(port)WEIGHT1_5_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_1_V_ce0, "(port)WEIGHT1_5_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_1_V_we0, "(port)WEIGHT1_5_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_1_V_d0, "(port)WEIGHT1_5_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_2_V_address0, "(port)WEIGHT1_5_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_2_V_ce0, "(port)WEIGHT1_5_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_2_V_we0, "(port)WEIGHT1_5_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_2_V_d0, "(port)WEIGHT1_5_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_3_V_address0, "(port)WEIGHT1_5_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_3_V_ce0, "(port)WEIGHT1_5_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_3_V_we0, "(port)WEIGHT1_5_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_3_V_d0, "(port)WEIGHT1_5_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_4_V_address0, "(port)WEIGHT1_5_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_4_V_ce0, "(port)WEIGHT1_5_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_4_V_we0, "(port)WEIGHT1_5_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_4_V_d0, "(port)WEIGHT1_5_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_5_V_address0, "(port)WEIGHT1_5_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_5_V_ce0, "(port)WEIGHT1_5_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_5_V_we0, "(port)WEIGHT1_5_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_5_V_d0, "(port)WEIGHT1_5_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_5_6_V_address0, "(port)WEIGHT1_5_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_5_6_V_ce0, "(port)WEIGHT1_5_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_5_6_V_we0, "(port)WEIGHT1_5_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_5_6_V_d0, "(port)WEIGHT1_5_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_0_V_address0, "(port)WEIGHT1_6_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_0_V_ce0, "(port)WEIGHT1_6_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_0_V_we0, "(port)WEIGHT1_6_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_0_V_d0, "(port)WEIGHT1_6_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_1_V_address0, "(port)WEIGHT1_6_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_1_V_ce0, "(port)WEIGHT1_6_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_1_V_we0, "(port)WEIGHT1_6_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_1_V_d0, "(port)WEIGHT1_6_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_2_V_address0, "(port)WEIGHT1_6_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_2_V_ce0, "(port)WEIGHT1_6_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_2_V_we0, "(port)WEIGHT1_6_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_2_V_d0, "(port)WEIGHT1_6_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_3_V_address0, "(port)WEIGHT1_6_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_3_V_ce0, "(port)WEIGHT1_6_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_3_V_we0, "(port)WEIGHT1_6_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_3_V_d0, "(port)WEIGHT1_6_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_4_V_address0, "(port)WEIGHT1_6_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_4_V_ce0, "(port)WEIGHT1_6_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_4_V_we0, "(port)WEIGHT1_6_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_4_V_d0, "(port)WEIGHT1_6_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_5_V_address0, "(port)WEIGHT1_6_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_5_V_ce0, "(port)WEIGHT1_6_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_5_V_we0, "(port)WEIGHT1_6_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_5_V_d0, "(port)WEIGHT1_6_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_6_6_V_address0, "(port)WEIGHT1_6_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_6_6_V_ce0, "(port)WEIGHT1_6_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_6_6_V_we0, "(port)WEIGHT1_6_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_6_6_V_d0, "(port)WEIGHT1_6_6_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_0_V_address0, "(port)WEIGHT1_7_0_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_0_V_ce0, "(port)WEIGHT1_7_0_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_0_V_we0, "(port)WEIGHT1_7_0_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_0_V_d0, "(port)WEIGHT1_7_0_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_1_V_address0, "(port)WEIGHT1_7_1_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_1_V_ce0, "(port)WEIGHT1_7_1_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_1_V_we0, "(port)WEIGHT1_7_1_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_1_V_d0, "(port)WEIGHT1_7_1_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_2_V_address0, "(port)WEIGHT1_7_2_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_2_V_ce0, "(port)WEIGHT1_7_2_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_2_V_we0, "(port)WEIGHT1_7_2_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_2_V_d0, "(port)WEIGHT1_7_2_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_3_V_address0, "(port)WEIGHT1_7_3_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_3_V_ce0, "(port)WEIGHT1_7_3_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_3_V_we0, "(port)WEIGHT1_7_3_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_3_V_d0, "(port)WEIGHT1_7_3_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_4_V_address0, "(port)WEIGHT1_7_4_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_4_V_ce0, "(port)WEIGHT1_7_4_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_4_V_we0, "(port)WEIGHT1_7_4_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_4_V_d0, "(port)WEIGHT1_7_4_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_5_V_address0, "(port)WEIGHT1_7_5_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_5_V_ce0, "(port)WEIGHT1_7_5_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_5_V_we0, "(port)WEIGHT1_7_5_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_5_V_d0, "(port)WEIGHT1_7_5_V_d0");
    sc_trace(mVcdFile, WEIGHT1_7_6_V_address0, "(port)WEIGHT1_7_6_V_address0");
    sc_trace(mVcdFile, WEIGHT1_7_6_V_ce0, "(port)WEIGHT1_7_6_V_ce0");
    sc_trace(mVcdFile, WEIGHT1_7_6_V_we0, "(port)WEIGHT1_7_6_V_we0");
    sc_trace(mVcdFile, WEIGHT1_7_6_V_d0, "(port)WEIGHT1_7_6_V_d0");
    sc_trace(mVcdFile, custom_k, "(port)custom_k");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_dma_W_TDATA_blk_n, "input_dma_W_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten4_fu_1051_p2, "exitcond_flatten4_fu_1051_p2");
    sc_trace(mVcdFile, bound_fu_1015_p2, "bound_fu_1015_p2");
    sc_trace(mVcdFile, bound_reg_1949, "bound_reg_1949");
    sc_trace(mVcdFile, bound4_fu_1025_p2, "bound4_fu_1025_p2");
    sc_trace(mVcdFile, bound4_reg_1954, "bound4_reg_1954");
    sc_trace(mVcdFile, tmp_fu_1031_p3, "tmp_fu_1031_p3");
    sc_trace(mVcdFile, tmp_reg_1959, "tmp_reg_1959");
    sc_trace(mVcdFile, exitcond_mid_fu_1039_p2, "exitcond_mid_fu_1039_p2");
    sc_trace(mVcdFile, exitcond_mid_reg_1964, "exitcond_mid_reg_1964");
    sc_trace(mVcdFile, exitcond_flatten_mid_fu_1045_p2, "exitcond_flatten_mid_fu_1045_p2");
    sc_trace(mVcdFile, exitcond_flatten_mid_reg_1970, "exitcond_flatten_mid_reg_1970");
    sc_trace(mVcdFile, indvar_flatten_next4_fu_1056_p2, "indvar_flatten_next4_fu_1056_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_mid2_fu_1125_p3, "i_mid2_fu_1125_p3");
    sc_trace(mVcdFile, j_mid2_fu_1160_p3, "j_mid2_fu_1160_p3");
    sc_trace(mVcdFile, m_mid2_fu_1218_p3, "m_mid2_fu_1218_p3");
    sc_trace(mVcdFile, l_1_fu_1901_p2, "l_1_fu_1901_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_1913_p3, "indvar_flatten_next_fu_1913_p3");
    sc_trace(mVcdFile, indvar_flatten_next3_fu_1927_p3, "indvar_flatten_next3_fu_1927_p3");
    sc_trace(mVcdFile, indvar_flatten3_reg_934, "indvar_flatten3_reg_934");
    sc_trace(mVcdFile, i_reg_945, "i_reg_945");
    sc_trace(mVcdFile, indvar_flatten4_reg_956, "indvar_flatten4_reg_956");
    sc_trace(mVcdFile, j_reg_967, "j_reg_967");
    sc_trace(mVcdFile, indvar_flatten_reg_978, "indvar_flatten_reg_978");
    sc_trace(mVcdFile, m_reg_989, "m_reg_989");
    sc_trace(mVcdFile, l_reg_1000, "l_reg_1000");
    sc_trace(mVcdFile, tmp_42_cast_fu_1234_p1, "tmp_42_cast_fu_1234_p1");
    sc_trace(mVcdFile, this_assign_1_fu_1559_p3, "this_assign_1_fu_1559_p3");
    sc_trace(mVcdFile, tmp_t_mid2_fu_1093_p3, "tmp_t_mid2_fu_1093_p3");
    sc_trace(mVcdFile, this_assign_4_1_fu_1865_p3, "this_assign_4_1_fu_1865_p3");
    sc_trace(mVcdFile, bound_fu_1015_p0, "bound_fu_1015_p0");
    sc_trace(mVcdFile, cast_fu_1011_p1, "cast_fu_1011_p1");
    sc_trace(mVcdFile, bound_fu_1015_p1, "bound_fu_1015_p1");
    sc_trace(mVcdFile, bound4_fu_1025_p0, "bound4_fu_1025_p0");
    sc_trace(mVcdFile, exitcond_flatten_fu_1068_p2, "exitcond_flatten_fu_1068_p2");
    sc_trace(mVcdFile, tmp_t_mid1_fu_1081_p2, "tmp_t_mid1_fu_1081_p2");
    sc_trace(mVcdFile, tmp_t_fu_1087_p2, "tmp_t_fu_1087_p2");
    sc_trace(mVcdFile, exitcond_fu_1101_p2, "exitcond_fu_1101_p2");
    sc_trace(mVcdFile, exitcond_flatten1_fu_1113_p2, "exitcond_flatten1_fu_1113_p2");
    sc_trace(mVcdFile, i_4_fu_1062_p2, "i_4_fu_1062_p2");
    sc_trace(mVcdFile, j_mid_fu_1073_p3, "j_mid_fu_1073_p3");
    sc_trace(mVcdFile, exitcond_flatten_mid_2_fu_1118_p3, "exitcond_flatten_mid_2_fu_1118_p3");
    sc_trace(mVcdFile, tmp_s_fu_1139_p2, "tmp_s_fu_1139_p2");
    sc_trace(mVcdFile, exitcond_mid1_fu_1106_p3, "exitcond_mid1_fu_1106_p3");
    sc_trace(mVcdFile, j_3_fu_1133_p2, "j_3_fu_1133_p2");
    sc_trace(mVcdFile, m_mid_fu_1145_p3, "m_mid_fu_1145_p3");
    sc_trace(mVcdFile, exitcond_mid2_fu_1153_p3, "exitcond_mid2_fu_1153_p3");
    sc_trace(mVcdFile, tmp_23_fu_1174_p2, "tmp_23_fu_1174_p2");
    sc_trace(mVcdFile, tmp_34_fu_1180_p2, "tmp_34_fu_1180_p2");
    sc_trace(mVcdFile, m_1_fu_1168_p2, "m_1_fu_1168_p2");
    sc_trace(mVcdFile, tmp_44_fu_1198_p1, "tmp_44_fu_1198_p1");
    sc_trace(mVcdFile, tmp_43_fu_1194_p1, "tmp_43_fu_1194_p1");
    sc_trace(mVcdFile, tmp_45_fu_1202_p3, "tmp_45_fu_1202_p3");
    sc_trace(mVcdFile, l_mid2_fu_1186_p3, "l_mid2_fu_1186_p3");
    sc_trace(mVcdFile, grp_fu_1935_p3, "grp_fu_1935_p3");
    sc_trace(mVcdFile, tmp_51_fu_1327_p1, "tmp_51_fu_1327_p1");
    sc_trace(mVcdFile, tmp_49_fu_1311_p3, "tmp_49_fu_1311_p3");
    sc_trace(mVcdFile, tmp_21_fu_1337_p4, "tmp_21_fu_1337_p4");
    sc_trace(mVcdFile, tmp_20_fu_1331_p2, "tmp_20_fu_1331_p2");
    sc_trace(mVcdFile, tmp_22_fu_1347_p3, "tmp_22_fu_1347_p3");
    sc_trace(mVcdFile, tmp_28_fu_1355_p2, "tmp_28_fu_1355_p2");
    sc_trace(mVcdFile, signbit_1_fu_1293_p3, "signbit_1_fu_1293_p3");
    sc_trace(mVcdFile, qb_assign_fu_1361_p2, "qb_assign_fu_1361_p2");
    sc_trace(mVcdFile, tmp_29_fu_1367_p1, "tmp_29_fu_1367_p1");
    sc_trace(mVcdFile, p_Val2_s_50_fu_1301_p4, "p_Val2_s_50_fu_1301_p4");
    sc_trace(mVcdFile, p_Val2_7_fu_1371_p2, "p_Val2_7_fu_1371_p2");
    sc_trace(mVcdFile, newsignbit_2_fu_1377_p3, "newsignbit_2_fu_1377_p3");
    sc_trace(mVcdFile, tmp_50_fu_1319_p3, "tmp_50_fu_1319_p3");
    sc_trace(mVcdFile, tmp_30_fu_1385_p2, "tmp_30_fu_1385_p2");
    sc_trace(mVcdFile, p_Result_s_fu_1405_p4, "p_Result_s_fu_1405_p4");
    sc_trace(mVcdFile, p_Result_1_fu_1421_p4, "p_Result_1_fu_1421_p4");
    sc_trace(mVcdFile, carry_fu_1391_p2, "carry_fu_1391_p2");
    sc_trace(mVcdFile, Range1_all_ones_fu_1431_p2, "Range1_all_ones_fu_1431_p2");
    sc_trace(mVcdFile, Range1_all_zeros_fu_1437_p2, "Range1_all_zeros_fu_1437_p2");
    sc_trace(mVcdFile, tmp_53_fu_1397_p3, "tmp_53_fu_1397_p3");
    sc_trace(mVcdFile, Range2_all_ones_fu_1415_p2, "Range2_all_ones_fu_1415_p2");
    sc_trace(mVcdFile, tmp_31_fu_1451_p2, "tmp_31_fu_1451_p2");
    sc_trace(mVcdFile, p_41_i1_fu_1457_p2, "p_41_i1_fu_1457_p2");
    sc_trace(mVcdFile, deleted_zeros_fu_1443_p3, "deleted_zeros_fu_1443_p3");
    sc_trace(mVcdFile, p_not_i1_fu_1477_p2, "p_not_i1_fu_1477_p2");
    sc_trace(mVcdFile, brmerge_i2_fu_1483_p2, "brmerge_i2_fu_1483_p2");
    sc_trace(mVcdFile, tmp_32_fu_1489_p2, "tmp_32_fu_1489_p2");
    sc_trace(mVcdFile, deleted_ones_fu_1463_p3, "deleted_ones_fu_1463_p3");
    sc_trace(mVcdFile, p_38_i1_fu_1471_p2, "p_38_i1_fu_1471_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_1_fu_1501_p2, "brmerge40_demorgan_i_1_fu_1501_p2");
    sc_trace(mVcdFile, tmp3_demorgan_fu_1507_p2, "tmp3_demorgan_fu_1507_p2");
    sc_trace(mVcdFile, tmp3_fu_1513_p2, "tmp3_fu_1513_p2");
    sc_trace(mVcdFile, underflow_fu_1519_p2, "underflow_fu_1519_p2");
    sc_trace(mVcdFile, overflow_fu_1495_p2, "overflow_fu_1495_p2");
    sc_trace(mVcdFile, tmp4_fu_1531_p2, "tmp4_fu_1531_p2");
    sc_trace(mVcdFile, brmerge_i_i2_fu_1525_p2, "brmerge_i_i2_fu_1525_p2");
    sc_trace(mVcdFile, underflow_not_fu_1537_p2, "underflow_not_fu_1537_p2");
    sc_trace(mVcdFile, p_Val2_8_mux_fu_1543_p3, "p_Val2_8_mux_fu_1543_p3");
    sc_trace(mVcdFile, p_Val2_8_51_fu_1551_p3, "p_Val2_8_51_fu_1551_p3");
    sc_trace(mVcdFile, tmp_57_fu_1629_p3, "tmp_57_fu_1629_p3");
    sc_trace(mVcdFile, tmp_55_fu_1613_p3, "tmp_55_fu_1613_p3");
    sc_trace(mVcdFile, tmp_25_fu_1643_p4, "tmp_25_fu_1643_p4");
    sc_trace(mVcdFile, tmp_24_fu_1637_p2, "tmp_24_fu_1637_p2");
    sc_trace(mVcdFile, tmp_33_fu_1653_p3, "tmp_33_fu_1653_p3");
    sc_trace(mVcdFile, tmp_35_fu_1661_p2, "tmp_35_fu_1661_p2");
    sc_trace(mVcdFile, signbit_fu_1595_p3, "signbit_fu_1595_p3");
    sc_trace(mVcdFile, qb_assign_1_fu_1667_p2, "qb_assign_1_fu_1667_p2");
    sc_trace(mVcdFile, p_Val2_8_fu_1603_p4, "p_Val2_8_fu_1603_p4");
    sc_trace(mVcdFile, tmp_36_fu_1673_p1, "tmp_36_fu_1673_p1");
    sc_trace(mVcdFile, p_Val2_9_fu_1677_p2, "p_Val2_9_fu_1677_p2");
    sc_trace(mVcdFile, newsignbit_fu_1683_p3, "newsignbit_fu_1683_p3");
    sc_trace(mVcdFile, tmp_56_fu_1621_p3, "tmp_56_fu_1621_p3");
    sc_trace(mVcdFile, tmp_37_fu_1691_p2, "tmp_37_fu_1691_p2");
    sc_trace(mVcdFile, p_Result_7_fu_1711_p4, "p_Result_7_fu_1711_p4");
    sc_trace(mVcdFile, p_Result_8_fu_1727_p4, "p_Result_8_fu_1727_p4");
    sc_trace(mVcdFile, carry_1_fu_1697_p2, "carry_1_fu_1697_p2");
    sc_trace(mVcdFile, Range1_all_ones_1_fu_1737_p2, "Range1_all_ones_1_fu_1737_p2");
    sc_trace(mVcdFile, Range1_all_zeros_1_fu_1743_p2, "Range1_all_zeros_1_fu_1743_p2");
    sc_trace(mVcdFile, tmp_59_fu_1703_p3, "tmp_59_fu_1703_p3");
    sc_trace(mVcdFile, Range2_all_ones_1_fu_1721_p2, "Range2_all_ones_1_fu_1721_p2");
    sc_trace(mVcdFile, tmp_38_fu_1757_p2, "tmp_38_fu_1757_p2");
    sc_trace(mVcdFile, p_41_i_fu_1763_p2, "p_41_i_fu_1763_p2");
    sc_trace(mVcdFile, deleted_zeros_1_fu_1749_p3, "deleted_zeros_1_fu_1749_p3");
    sc_trace(mVcdFile, p_not_i_fu_1783_p2, "p_not_i_fu_1783_p2");
    sc_trace(mVcdFile, brmerge_i_fu_1789_p2, "brmerge_i_fu_1789_p2");
    sc_trace(mVcdFile, tmp_39_fu_1795_p2, "tmp_39_fu_1795_p2");
    sc_trace(mVcdFile, deleted_ones_1_fu_1769_p3, "deleted_ones_1_fu_1769_p3");
    sc_trace(mVcdFile, p_38_i_fu_1777_p2, "p_38_i_fu_1777_p2");
    sc_trace(mVcdFile, brmerge40_demorgan_i_fu_1807_p2, "brmerge40_demorgan_i_fu_1807_p2");
    sc_trace(mVcdFile, tmp5_demorgan_fu_1813_p2, "tmp5_demorgan_fu_1813_p2");
    sc_trace(mVcdFile, tmp5_fu_1819_p2, "tmp5_fu_1819_p2");
    sc_trace(mVcdFile, underflow_2_fu_1825_p2, "underflow_2_fu_1825_p2");
    sc_trace(mVcdFile, overflow_1_fu_1801_p2, "overflow_1_fu_1801_p2");
    sc_trace(mVcdFile, tmp6_fu_1837_p2, "tmp6_fu_1837_p2");
    sc_trace(mVcdFile, brmerge_i_i_fu_1831_p2, "brmerge_i_i_fu_1831_p2");
    sc_trace(mVcdFile, underflow_2_not_fu_1843_p2, "underflow_2_not_fu_1843_p2");
    sc_trace(mVcdFile, p_Val2_11_mux_fu_1849_p3, "p_Val2_11_mux_fu_1849_p3");
    sc_trace(mVcdFile, p_Val2_s_fu_1857_p3, "p_Val2_s_fu_1857_p3");
    sc_trace(mVcdFile, indvar_flatten_op_fu_1907_p2, "indvar_flatten_op_fu_1907_p2");
    sc_trace(mVcdFile, indvar_flatten16_op_fu_1921_p2, "indvar_flatten16_op_fu_1921_p2");
    sc_trace(mVcdFile, grp_fu_1935_p0, "grp_fu_1935_p0");
    sc_trace(mVcdFile, grp_fu_1935_p1, "grp_fu_1935_p1");
    sc_trace(mVcdFile, grp_fu_1935_p2, "grp_fu_1935_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, bound4_fu_1025_p00, "bound4_fu_1025_p00");
#endif

    }
}

LOAD_WEIGHT_DMA::~LOAD_WEIGHT_DMA() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete top_mac_muladd_5nbkb_U1;
}

void LOAD_WEIGHT_DMA::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        i_reg_945 = i_mid2_fu_1125_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_945 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        indvar_flatten3_reg_934 = indvar_flatten_next4_fu_1056_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten3_reg_934 = ap_const_lv69_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        indvar_flatten4_reg_956 = indvar_flatten_next3_fu_1927_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten4_reg_956 = ap_const_lv67_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        indvar_flatten_reg_978 = indvar_flatten_next_fu_1913_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_978 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        j_reg_967 = j_mid2_fu_1160_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_967 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        l_reg_1000 = l_1_fu_1901_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        l_reg_1000 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        m_reg_989 = m_mid2_fu_1218_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_reg_989 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound4_reg_1954 = bound4_fu_1025_p2.read();
        bound_reg_1949 = bound_fu_1015_p2.read();
        exitcond_flatten_mid_reg_1970 = exitcond_flatten_mid_fu_1045_p2.read();
        exitcond_mid_reg_1964 = exitcond_mid_fu_1039_p2.read();
        tmp_reg_1959 = tmp_fu_1031_p3.read();
    }
}

void LOAD_WEIGHT_DMA::thread_Range1_all_ones_1_fu_1737_p2() {
    Range1_all_ones_1_fu_1737_p2 = (!p_Result_8_fu_1727_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_8_fu_1727_p4.read() == ap_const_lv9_1FF);
}

void LOAD_WEIGHT_DMA::thread_Range1_all_ones_fu_1431_p2() {
    Range1_all_ones_fu_1431_p2 = (!p_Result_1_fu_1421_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_1_fu_1421_p4.read() == ap_const_lv9_1FF);
}

void LOAD_WEIGHT_DMA::thread_Range1_all_zeros_1_fu_1743_p2() {
    Range1_all_zeros_1_fu_1743_p2 = (!p_Result_8_fu_1727_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_8_fu_1727_p4.read() == ap_const_lv9_0);
}

void LOAD_WEIGHT_DMA::thread_Range1_all_zeros_fu_1437_p2() {
    Range1_all_zeros_fu_1437_p2 = (!p_Result_1_fu_1421_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_1_fu_1421_p4.read() == ap_const_lv9_0);
}

void LOAD_WEIGHT_DMA::thread_Range2_all_ones_1_fu_1721_p2() {
    Range2_all_ones_1_fu_1721_p2 = (!p_Result_7_fu_1711_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_7_fu_1711_p4.read() == ap_const_lv8_FF);
}

void LOAD_WEIGHT_DMA::thread_Range2_all_ones_fu_1415_p2() {
    Range2_all_ones_fu_1415_p2 = (!p_Result_s_fu_1405_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_1405_p4.read() == ap_const_lv8_FF);
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_0_V_address0() {
    WEIGHT1_0_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_0_V_d0() {
    WEIGHT1_0_0_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_1_V_address0() {
    WEIGHT1_0_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_1_V_d0() {
    WEIGHT1_0_1_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_2_V_address0() {
    WEIGHT1_0_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_2_V_d0() {
    WEIGHT1_0_2_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_3_V_address0() {
    WEIGHT1_0_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_3_V_d0() {
    WEIGHT1_0_3_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_4_V_address0() {
    WEIGHT1_0_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_4_V_d0() {
    WEIGHT1_0_4_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_5_V_address0() {
    WEIGHT1_0_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_5_V_d0() {
    WEIGHT1_0_5_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_0_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_6_V_address0() {
    WEIGHT1_0_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_0_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_6_V_d0() {
    WEIGHT1_0_6_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_0_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0)) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0))))) {
        WEIGHT1_0_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_0_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_0_V_address0() {
    WEIGHT1_1_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_0_V_d0() {
    WEIGHT1_1_0_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_1_V_address0() {
    WEIGHT1_1_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_1_V_d0() {
    WEIGHT1_1_1_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_2_V_address0() {
    WEIGHT1_1_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_2_V_d0() {
    WEIGHT1_1_2_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_3_V_address0() {
    WEIGHT1_1_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_3_V_d0() {
    WEIGHT1_1_3_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_4_V_address0() {
    WEIGHT1_1_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_4_V_d0() {
    WEIGHT1_1_4_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_5_V_address0() {
    WEIGHT1_1_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_5_V_d0() {
    WEIGHT1_1_5_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_1_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_6_V_address0() {
    WEIGHT1_1_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_1_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_6_V_d0() {
    WEIGHT1_1_6_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_1_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1)) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1))))) {
        WEIGHT1_1_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_1_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_0_V_address0() {
    WEIGHT1_2_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_0_V_d0() {
    WEIGHT1_2_0_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0))) {
        WEIGHT1_2_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_1_V_address0() {
    WEIGHT1_2_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_1_V_d0() {
    WEIGHT1_2_1_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1))) {
        WEIGHT1_2_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_2_V_address0() {
    WEIGHT1_2_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_2_V_d0() {
    WEIGHT1_2_2_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_2_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_3_V_address0() {
    WEIGHT1_2_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_3_V_d0() {
    WEIGHT1_2_3_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3))) {
        WEIGHT1_2_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_4_V_address0() {
    WEIGHT1_2_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_4_V_d0() {
    WEIGHT1_2_4_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4))) {
        WEIGHT1_2_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_5_V_address0() {
    WEIGHT1_2_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_5_V_d0() {
    WEIGHT1_2_5_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5))) {
        WEIGHT1_2_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_6_V_address0() {
    WEIGHT1_2_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_2_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_6_V_d0() {
    WEIGHT1_2_6_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_2_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6)) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7))))) {
        WEIGHT1_2_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_2_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_0_V_address0() {
    WEIGHT1_3_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_0_V_d0() {
    WEIGHT1_3_0_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_1_V_address0() {
    WEIGHT1_3_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_1_V_d0() {
    WEIGHT1_3_1_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_2_V_address0() {
    WEIGHT1_3_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_2_V_d0() {
    WEIGHT1_3_2_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_3_V_address0() {
    WEIGHT1_3_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_3_V_d0() {
    WEIGHT1_3_3_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_4_V_address0() {
    WEIGHT1_3_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_4_V_d0() {
    WEIGHT1_3_4_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_5_V_address0() {
    WEIGHT1_3_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_5_V_d0() {
    WEIGHT1_3_5_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))) {
        WEIGHT1_3_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_6_V_address0() {
    WEIGHT1_3_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_3_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_6_V_d0() {
    WEIGHT1_3_6_V_d0 = this_assign_1_fu_1559_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_3_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2)) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_0) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_1) && 
           !esl_seteq<1,3,3>(i_mid2_fu_1125_p3.read(), ap_const_lv3_2))))) {
        WEIGHT1_3_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_3_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_0_V_address0() {
    WEIGHT1_4_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_0_V_d0() {
    WEIGHT1_4_0_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_1_V_address0() {
    WEIGHT1_4_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_1_V_d0() {
    WEIGHT1_4_1_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_2_V_address0() {
    WEIGHT1_4_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_2_V_d0() {
    WEIGHT1_4_2_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_3_V_address0() {
    WEIGHT1_4_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_3_V_d0() {
    WEIGHT1_4_3_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_4_V_address0() {
    WEIGHT1_4_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_4_V_d0() {
    WEIGHT1_4_4_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_5_V_address0() {
    WEIGHT1_4_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_5_V_d0() {
    WEIGHT1_4_5_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_4_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_6_V_address0() {
    WEIGHT1_4_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_4_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_6_V_d0() {
    WEIGHT1_4_6_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_4_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read())) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()))))) {
        WEIGHT1_4_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_4_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_0_V_address0() {
    WEIGHT1_5_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_0_V_d0() {
    WEIGHT1_5_0_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_1_V_address0() {
    WEIGHT1_5_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_1_V_d0() {
    WEIGHT1_5_1_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_2_V_address0() {
    WEIGHT1_5_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_2_V_d0() {
    WEIGHT1_5_2_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_3_V_address0() {
    WEIGHT1_5_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_3_V_d0() {
    WEIGHT1_5_3_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_4_V_address0() {
    WEIGHT1_5_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_4_V_d0() {
    WEIGHT1_5_4_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_5_V_address0() {
    WEIGHT1_5_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_5_V_d0() {
    WEIGHT1_5_5_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_5_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_6_V_address0() {
    WEIGHT1_5_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_5_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_6_V_d0() {
    WEIGHT1_5_6_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_5_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read())) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()))))) {
        WEIGHT1_5_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_5_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_0_V_address0() {
    WEIGHT1_6_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_0_V_d0() {
    WEIGHT1_6_0_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_1_V_address0() {
    WEIGHT1_6_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_1_V_d0() {
    WEIGHT1_6_1_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_2_V_address0() {
    WEIGHT1_6_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_2_V_d0() {
    WEIGHT1_6_2_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_3_V_address0() {
    WEIGHT1_6_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_3_V_d0() {
    WEIGHT1_6_3_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_4_V_address0() {
    WEIGHT1_6_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_4_V_d0() {
    WEIGHT1_6_4_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_5_V_address0() {
    WEIGHT1_6_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_5_V_d0() {
    WEIGHT1_6_5_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_6_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_6_V_address0() {
    WEIGHT1_6_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_6_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_6_V_d0() {
    WEIGHT1_6_6_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_6_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read())) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))))) {
        WEIGHT1_6_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_6_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_0_V_address0() {
    WEIGHT1_7_0_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_0_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_0_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_0_V_d0() {
    WEIGHT1_7_0_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_0_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_0_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_1_V_address0() {
    WEIGHT1_7_1_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_1_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_1_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_1_V_d0() {
    WEIGHT1_7_1_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_1_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_1_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_2_V_address0() {
    WEIGHT1_7_2_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_2_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_2_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_2_V_d0() {
    WEIGHT1_7_2_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_2) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_2_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_2_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_3_V_address0() {
    WEIGHT1_7_3_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_3_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_3_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_3_V_d0() {
    WEIGHT1_7_3_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_3) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_3_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_3_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_4_V_address0() {
    WEIGHT1_7_4_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_4_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_4_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_4_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_4_V_d0() {
    WEIGHT1_7_4_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_4) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_4_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_4_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_5_V_address0() {
    WEIGHT1_7_5_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_5_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_5_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_5_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_5_V_d0() {
    WEIGHT1_7_5_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_5_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_5) && 
         !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
         !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))) {
        WEIGHT1_7_5_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_5_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_6_V_address0() {
    WEIGHT1_7_6_V_address0 =  (sc_lv<7>) (tmp_42_cast_fu_1234_p1.read());
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_6_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        WEIGHT1_7_6_V_ce0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_6_V_ce0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_6_V_d0() {
    WEIGHT1_7_6_V_d0 = this_assign_4_1_fu_1865_p3.read();
}

void LOAD_WEIGHT_DMA::thread_WEIGHT1_7_6_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && 
         ((esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_6) && 
           !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
           !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
           !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read())) || 
          (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,3,3>(j_mid2_fu_1160_p3.read(), ap_const_lv3_7) && 
           !esl_seteq<1,3,3>(ap_const_lv3_4, tmp_t_mid2_fu_1093_p3.read()) && 
           !esl_seteq<1,3,3>(ap_const_lv3_5, tmp_t_mid2_fu_1093_p3.read()) && 
           !esl_seteq<1,3,3>(ap_const_lv3_6, tmp_t_mid2_fu_1093_p3.read()))))) {
        WEIGHT1_7_6_V_we0 = ap_const_logic_1;
    } else {
        WEIGHT1_7_6_V_we0 = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void LOAD_WEIGHT_DMA::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void LOAD_WEIGHT_DMA::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void LOAD_WEIGHT_DMA::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read()));
}

void LOAD_WEIGHT_DMA::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_bound4_fu_1025_p0() {
    bound4_fu_1025_p0 =  (sc_lv<64>) (bound4_fu_1025_p00.read());
}

void LOAD_WEIGHT_DMA::thread_bound4_fu_1025_p00() {
    bound4_fu_1025_p00 = esl_zext<67,64>(bound_fu_1015_p2.read());
}

void LOAD_WEIGHT_DMA::thread_bound4_fu_1025_p2() {
    bound4_fu_1025_p2 = (!bound4_fu_1025_p0.read().is_01() || !ap_const_lv67_7.is_01())? sc_lv<67>(): sc_biguint<64>(bound4_fu_1025_p0.read()) * sc_biguint<67>(ap_const_lv67_7);
}

void LOAD_WEIGHT_DMA::thread_bound_fu_1015_p0() {
    bound_fu_1015_p0 =  (sc_lv<32>) (cast_fu_1011_p1.read());
}

void LOAD_WEIGHT_DMA::thread_bound_fu_1015_p1() {
    bound_fu_1015_p1 =  (sc_lv<32>) (cast_fu_1011_p1.read());
}

void LOAD_WEIGHT_DMA::thread_bound_fu_1015_p2() {
    bound_fu_1015_p2 = (!bound_fu_1015_p0.read().is_01() || !bound_fu_1015_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_1015_p0.read()) * sc_biguint<32>(bound_fu_1015_p1.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge40_demorgan_i_1_fu_1501_p2() {
    brmerge40_demorgan_i_1_fu_1501_p2 = (newsignbit_2_fu_1377_p3.read() & deleted_ones_fu_1463_p3.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge40_demorgan_i_fu_1807_p2() {
    brmerge40_demorgan_i_fu_1807_p2 = (newsignbit_fu_1683_p3.read() & deleted_ones_1_fu_1769_p3.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge_i2_fu_1483_p2() {
    brmerge_i2_fu_1483_p2 = (newsignbit_2_fu_1377_p3.read() | p_not_i1_fu_1477_p2.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge_i_fu_1789_p2() {
    brmerge_i_fu_1789_p2 = (newsignbit_fu_1683_p3.read() | p_not_i_fu_1783_p2.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge_i_i2_fu_1525_p2() {
    brmerge_i_i2_fu_1525_p2 = (underflow_fu_1519_p2.read() | overflow_fu_1495_p2.read());
}

void LOAD_WEIGHT_DMA::thread_brmerge_i_i_fu_1831_p2() {
    brmerge_i_i_fu_1831_p2 = (underflow_2_fu_1825_p2.read() | overflow_1_fu_1801_p2.read());
}

void LOAD_WEIGHT_DMA::thread_carry_1_fu_1697_p2() {
    carry_1_fu_1697_p2 = (tmp_56_fu_1621_p3.read() & tmp_37_fu_1691_p2.read());
}

void LOAD_WEIGHT_DMA::thread_carry_fu_1391_p2() {
    carry_fu_1391_p2 = (tmp_50_fu_1319_p3.read() & tmp_30_fu_1385_p2.read());
}

void LOAD_WEIGHT_DMA::thread_cast_fu_1011_p1() {
    cast_fu_1011_p1 = esl_zext<64,32>(custom_k.read());
}

void LOAD_WEIGHT_DMA::thread_deleted_ones_1_fu_1769_p3() {
    deleted_ones_1_fu_1769_p3 = (!carry_1_fu_1697_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_1697_p2.read()[0].to_bool())? p_41_i_fu_1763_p2.read(): Range1_all_ones_1_fu_1737_p2.read());
}

void LOAD_WEIGHT_DMA::thread_deleted_ones_fu_1463_p3() {
    deleted_ones_fu_1463_p3 = (!carry_fu_1391_p2.read()[0].is_01())? sc_lv<1>(): ((carry_fu_1391_p2.read()[0].to_bool())? p_41_i1_fu_1457_p2.read(): Range1_all_ones_fu_1431_p2.read());
}

void LOAD_WEIGHT_DMA::thread_deleted_zeros_1_fu_1749_p3() {
    deleted_zeros_1_fu_1749_p3 = (!carry_1_fu_1697_p2.read()[0].is_01())? sc_lv<1>(): ((carry_1_fu_1697_p2.read()[0].to_bool())? Range1_all_ones_1_fu_1737_p2.read(): Range1_all_zeros_1_fu_1743_p2.read());
}

void LOAD_WEIGHT_DMA::thread_deleted_zeros_fu_1443_p3() {
    deleted_zeros_fu_1443_p3 = (!carry_fu_1391_p2.read()[0].is_01())? sc_lv<1>(): ((carry_fu_1391_p2.read()[0].to_bool())? Range1_all_ones_fu_1431_p2.read(): Range1_all_zeros_fu_1437_p2.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_flatten1_fu_1113_p2() {
    exitcond_flatten1_fu_1113_p2 = (!indvar_flatten_reg_978.read().is_01() || !bound_reg_1949.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_978.read() == bound_reg_1949.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_flatten4_fu_1051_p2() {
    exitcond_flatten4_fu_1051_p2 = (!indvar_flatten3_reg_934.read().is_01() || !tmp_reg_1959.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten3_reg_934.read() == tmp_reg_1959.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_flatten_fu_1068_p2() {
    exitcond_flatten_fu_1068_p2 = (!indvar_flatten4_reg_956.read().is_01() || !bound4_reg_1954.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten4_reg_956.read() == bound4_reg_1954.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_flatten_mid_2_fu_1118_p3() {
    exitcond_flatten_mid_2_fu_1118_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? exitcond_flatten_mid_reg_1970.read(): exitcond_flatten1_fu_1113_p2.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_flatten_mid_fu_1045_p2() {
    exitcond_flatten_mid_fu_1045_p2 = (!bound_fu_1015_p2.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): sc_lv<1>(bound_fu_1015_p2.read() == ap_const_lv64_0);
}

void LOAD_WEIGHT_DMA::thread_exitcond_fu_1101_p2() {
    exitcond_fu_1101_p2 = (!l_reg_1000.read().is_01() || !custom_k.read().is_01())? sc_lv<1>(): sc_lv<1>(l_reg_1000.read() == custom_k.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_mid1_fu_1106_p3() {
    exitcond_mid1_fu_1106_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? exitcond_mid_reg_1964.read(): exitcond_fu_1101_p2.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_mid2_fu_1153_p3() {
    exitcond_mid2_fu_1153_p3 = (!exitcond_flatten_mid_2_fu_1118_p3.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_mid_2_fu_1118_p3.read()[0].to_bool())? exitcond_mid_reg_1964.read(): exitcond_mid1_fu_1106_p3.read());
}

void LOAD_WEIGHT_DMA::thread_exitcond_mid_fu_1039_p2() {
    exitcond_mid_fu_1039_p2 = (!custom_k.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(custom_k.read() == ap_const_lv32_0);
}

void LOAD_WEIGHT_DMA::thread_grp_fu_1935_p0() {
    grp_fu_1935_p0 =  (sc_lv<5>) (ap_const_lv8_B);
}

void LOAD_WEIGHT_DMA::thread_grp_fu_1935_p1() {
    grp_fu_1935_p1 = (!exitcond_mid2_fu_1153_p3.read()[0].is_01())? sc_lv<8>(): ((exitcond_mid2_fu_1153_p3.read()[0].to_bool())? tmp_43_fu_1194_p1.read(): tmp_45_fu_1202_p3.read());
}

void LOAD_WEIGHT_DMA::thread_grp_fu_1935_p2() {
    grp_fu_1935_p2 = l_mid2_fu_1186_p3.read().range(8-1, 0);
}

void LOAD_WEIGHT_DMA::thread_i_4_fu_1062_p2() {
    i_4_fu_1062_p2 = (!ap_const_lv3_1.is_01() || !i_reg_945.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_reg_945.read()));
}

void LOAD_WEIGHT_DMA::thread_i_mid2_fu_1125_p3() {
    i_mid2_fu_1125_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? i_4_fu_1062_p2.read(): i_reg_945.read());
}

void LOAD_WEIGHT_DMA::thread_indvar_flatten16_op_fu_1921_p2() {
    indvar_flatten16_op_fu_1921_p2 = (!indvar_flatten4_reg_956.read().is_01() || !ap_const_lv67_1.is_01())? sc_lv<67>(): (sc_biguint<67>(indvar_flatten4_reg_956.read()) + sc_biguint<67>(ap_const_lv67_1));
}

void LOAD_WEIGHT_DMA::thread_indvar_flatten_next3_fu_1927_p3() {
    indvar_flatten_next3_fu_1927_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<67>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? ap_const_lv67_1: indvar_flatten16_op_fu_1921_p2.read());
}

void LOAD_WEIGHT_DMA::thread_indvar_flatten_next4_fu_1056_p2() {
    indvar_flatten_next4_fu_1056_p2 = (!indvar_flatten3_reg_934.read().is_01() || !ap_const_lv69_1.is_01())? sc_lv<69>(): (sc_biguint<69>(indvar_flatten3_reg_934.read()) + sc_biguint<69>(ap_const_lv69_1));
}

void LOAD_WEIGHT_DMA::thread_indvar_flatten_next_fu_1913_p3() {
    indvar_flatten_next_fu_1913_p3 = (!tmp_s_fu_1139_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_s_fu_1139_p2.read()[0].to_bool())? ap_const_lv64_1: indvar_flatten_op_fu_1907_p2.read());
}

void LOAD_WEIGHT_DMA::thread_indvar_flatten_op_fu_1907_p2() {
    indvar_flatten_op_fu_1907_p2 = (!indvar_flatten_reg_978.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_978.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void LOAD_WEIGHT_DMA::thread_input_dma_W_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0))) {
        input_dma_W_TDATA_blk_n = input_dma_W_TVALID.read();
    } else {
        input_dma_W_TDATA_blk_n = ap_const_logic_1;
    }
}

void LOAD_WEIGHT_DMA::thread_input_dma_W_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
        input_dma_W_TREADY = ap_const_logic_1;
    } else {
        input_dma_W_TREADY = ap_const_logic_0;
    }
}

void LOAD_WEIGHT_DMA::thread_j_3_fu_1133_p2() {
    j_3_fu_1133_p2 = (!ap_const_lv3_1.is_01() || !j_mid_fu_1073_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(j_mid_fu_1073_p3.read()));
}

void LOAD_WEIGHT_DMA::thread_j_mid2_fu_1160_p3() {
    j_mid2_fu_1160_p3 = (!exitcond_flatten_mid_2_fu_1118_p3.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_mid_2_fu_1118_p3.read()[0].to_bool())? j_3_fu_1133_p2.read(): j_mid_fu_1073_p3.read());
}

void LOAD_WEIGHT_DMA::thread_j_mid_fu_1073_p3() {
    j_mid_fu_1073_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? ap_const_lv3_0: j_reg_967.read());
}

void LOAD_WEIGHT_DMA::thread_l_1_fu_1901_p2() {
    l_1_fu_1901_p2 = (!l_mid2_fu_1186_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(l_mid2_fu_1186_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void LOAD_WEIGHT_DMA::thread_l_mid2_fu_1186_p3() {
    l_mid2_fu_1186_p3 = (!tmp_34_fu_1180_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_fu_1180_p2.read()[0].to_bool())? ap_const_lv32_0: l_reg_1000.read());
}

void LOAD_WEIGHT_DMA::thread_m_1_fu_1168_p2() {
    m_1_fu_1168_p2 = (!ap_const_lv31_1.is_01() || !m_mid_fu_1145_p3.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(m_mid_fu_1145_p3.read()));
}

void LOAD_WEIGHT_DMA::thread_m_mid2_fu_1218_p3() {
    m_mid2_fu_1218_p3 = (!exitcond_mid2_fu_1153_p3.read()[0].is_01())? sc_lv<31>(): ((exitcond_mid2_fu_1153_p3.read()[0].to_bool())? m_1_fu_1168_p2.read(): m_mid_fu_1145_p3.read());
}

void LOAD_WEIGHT_DMA::thread_m_mid_fu_1145_p3() {
    m_mid_fu_1145_p3 = (!tmp_s_fu_1139_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_s_fu_1139_p2.read()[0].to_bool())? ap_const_lv31_0: m_reg_989.read());
}

void LOAD_WEIGHT_DMA::thread_newsignbit_2_fu_1377_p3() {
    newsignbit_2_fu_1377_p3 = p_Val2_7_fu_1371_p2.read().range(7, 7);
}

void LOAD_WEIGHT_DMA::thread_newsignbit_fu_1683_p3() {
    newsignbit_fu_1683_p3 = p_Val2_9_fu_1677_p2.read().range(7, 7);
}

void LOAD_WEIGHT_DMA::thread_overflow_1_fu_1801_p2() {
    overflow_1_fu_1801_p2 = (brmerge_i_fu_1789_p2.read() & tmp_39_fu_1795_p2.read());
}

void LOAD_WEIGHT_DMA::thread_overflow_fu_1495_p2() {
    overflow_fu_1495_p2 = (brmerge_i2_fu_1483_p2.read() & tmp_32_fu_1489_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_38_i1_fu_1471_p2() {
    p_38_i1_fu_1471_p2 = (carry_fu_1391_p2.read() & Range1_all_ones_fu_1431_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_38_i_fu_1777_p2() {
    p_38_i_fu_1777_p2 = (carry_1_fu_1697_p2.read() & Range1_all_ones_1_fu_1737_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_41_i1_fu_1457_p2() {
    p_41_i1_fu_1457_p2 = (Range2_all_ones_fu_1415_p2.read() & tmp_31_fu_1451_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_41_i_fu_1763_p2() {
    p_41_i_fu_1763_p2 = (Range2_all_ones_1_fu_1721_p2.read() & tmp_38_fu_1757_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_Result_1_fu_1421_p4() {
    p_Result_1_fu_1421_p4 = input_dma_W_TDATA.read().range(25, 17);
}

void LOAD_WEIGHT_DMA::thread_p_Result_7_fu_1711_p4() {
    p_Result_7_fu_1711_p4 = input_dma_W_TDATA.read().range(51, 44);
}

void LOAD_WEIGHT_DMA::thread_p_Result_8_fu_1727_p4() {
    p_Result_8_fu_1727_p4 = input_dma_W_TDATA.read().range(51, 43);
}

void LOAD_WEIGHT_DMA::thread_p_Result_s_fu_1405_p4() {
    p_Result_s_fu_1405_p4 = input_dma_W_TDATA.read().range(25, 18);
}

void LOAD_WEIGHT_DMA::thread_p_Val2_11_mux_fu_1849_p3() {
    p_Val2_11_mux_fu_1849_p3 = (!brmerge_i_i_fu_1831_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i_fu_1831_p2.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_9_fu_1677_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_Val2_7_fu_1371_p2() {
    p_Val2_7_fu_1371_p2 = (!tmp_29_fu_1367_p1.read().is_01() || !p_Val2_s_50_fu_1301_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_29_fu_1367_p1.read()) + sc_biguint<8>(p_Val2_s_50_fu_1301_p4.read()));
}

void LOAD_WEIGHT_DMA::thread_p_Val2_8_51_fu_1551_p3() {
    p_Val2_8_51_fu_1551_p3 = (!underflow_fu_1519_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_fu_1519_p2.read()[0].to_bool())? ap_const_lv8_80: p_Val2_7_fu_1371_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_Val2_8_fu_1603_p4() {
    p_Val2_8_fu_1603_p4 = input_dma_W_TDATA.read().range(42, 35);
}

void LOAD_WEIGHT_DMA::thread_p_Val2_8_mux_fu_1543_p3() {
    p_Val2_8_mux_fu_1543_p3 = (!brmerge_i_i2_fu_1525_p2.read()[0].is_01())? sc_lv<8>(): ((brmerge_i_i2_fu_1525_p2.read()[0].to_bool())? ap_const_lv8_7F: p_Val2_7_fu_1371_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_Val2_9_fu_1677_p2() {
    p_Val2_9_fu_1677_p2 = (!p_Val2_8_fu_1603_p4.read().is_01() || !tmp_36_fu_1673_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Val2_8_fu_1603_p4.read()) + sc_biguint<8>(tmp_36_fu_1673_p1.read()));
}

void LOAD_WEIGHT_DMA::thread_p_Val2_s_50_fu_1301_p4() {
    p_Val2_s_50_fu_1301_p4 = input_dma_W_TDATA.read().range(16, 9);
}

void LOAD_WEIGHT_DMA::thread_p_Val2_s_fu_1857_p3() {
    p_Val2_s_fu_1857_p3 = (!underflow_2_fu_1825_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_2_fu_1825_p2.read()[0].to_bool())? ap_const_lv8_80: p_Val2_9_fu_1677_p2.read());
}

void LOAD_WEIGHT_DMA::thread_p_not_i1_fu_1477_p2() {
    p_not_i1_fu_1477_p2 = (deleted_zeros_fu_1443_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_p_not_i_fu_1783_p2() {
    p_not_i_fu_1783_p2 = (deleted_zeros_1_fu_1749_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_qb_assign_1_fu_1667_p2() {
    qb_assign_1_fu_1667_p2 = (tmp_35_fu_1661_p2.read() & signbit_fu_1595_p3.read());
}

void LOAD_WEIGHT_DMA::thread_qb_assign_fu_1361_p2() {
    qb_assign_fu_1361_p2 = (tmp_28_fu_1355_p2.read() & signbit_1_fu_1293_p3.read());
}

void LOAD_WEIGHT_DMA::thread_signbit_1_fu_1293_p3() {
    signbit_1_fu_1293_p3 = input_dma_W_TDATA.read().range(25, 25);
}

void LOAD_WEIGHT_DMA::thread_signbit_fu_1595_p3() {
    signbit_fu_1595_p3 = input_dma_W_TDATA.read().range(51, 51);
}

void LOAD_WEIGHT_DMA::thread_this_assign_1_fu_1559_p3() {
    this_assign_1_fu_1559_p3 = (!underflow_not_fu_1537_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_not_fu_1537_p2.read()[0].to_bool())? p_Val2_8_mux_fu_1543_p3.read(): p_Val2_8_51_fu_1551_p3.read());
}

void LOAD_WEIGHT_DMA::thread_this_assign_4_1_fu_1865_p3() {
    this_assign_4_1_fu_1865_p3 = (!underflow_2_not_fu_1843_p2.read()[0].is_01())? sc_lv<8>(): ((underflow_2_not_fu_1843_p2.read()[0].to_bool())? p_Val2_11_mux_fu_1849_p3.read(): p_Val2_s_fu_1857_p3.read());
}

void LOAD_WEIGHT_DMA::thread_tmp3_demorgan_fu_1507_p2() {
    tmp3_demorgan_fu_1507_p2 = (p_38_i1_fu_1471_p2.read() | brmerge40_demorgan_i_1_fu_1501_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp3_fu_1513_p2() {
    tmp3_fu_1513_p2 = (tmp3_demorgan_fu_1507_p2.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp4_fu_1531_p2() {
    tmp4_fu_1531_p2 = (brmerge40_demorgan_i_1_fu_1501_p2.read() | tmp_32_fu_1489_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp5_demorgan_fu_1813_p2() {
    tmp5_demorgan_fu_1813_p2 = (p_38_i_fu_1777_p2.read() | brmerge40_demorgan_i_fu_1807_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp5_fu_1819_p2() {
    tmp5_fu_1819_p2 = (tmp5_demorgan_fu_1813_p2.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp6_fu_1837_p2() {
    tmp6_fu_1837_p2 = (brmerge40_demorgan_i_fu_1807_p2.read() | tmp_39_fu_1795_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_20_fu_1331_p2() {
    tmp_20_fu_1331_p2 = (tmp_51_fu_1327_p1.read() | tmp_49_fu_1311_p3.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_21_fu_1337_p4() {
    tmp_21_fu_1337_p4 = input_dma_W_TDATA.read().range(7, 1);
}

void LOAD_WEIGHT_DMA::thread_tmp_22_fu_1347_p3() {
    tmp_22_fu_1347_p3 = esl_concat<7,1>(tmp_21_fu_1337_p4.read(), tmp_20_fu_1331_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_23_fu_1174_p2() {
    tmp_23_fu_1174_p2 = (exitcond_mid2_fu_1153_p3.read() | exitcond_flatten_mid_2_fu_1118_p3.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_24_fu_1637_p2() {
    tmp_24_fu_1637_p2 = (tmp_57_fu_1629_p3.read() | tmp_55_fu_1613_p3.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_25_fu_1643_p4() {
    tmp_25_fu_1643_p4 = input_dma_W_TDATA.read().range(33, 27);
}

void LOAD_WEIGHT_DMA::thread_tmp_28_fu_1355_p2() {
    tmp_28_fu_1355_p2 = (!tmp_22_fu_1347_p3.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_22_fu_1347_p3.read() != ap_const_lv8_0);
}

void LOAD_WEIGHT_DMA::thread_tmp_29_fu_1367_p1() {
    tmp_29_fu_1367_p1 = esl_zext<8,1>(qb_assign_fu_1361_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_30_fu_1385_p2() {
    tmp_30_fu_1385_p2 = (newsignbit_2_fu_1377_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_31_fu_1451_p2() {
    tmp_31_fu_1451_p2 = (tmp_53_fu_1397_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_32_fu_1489_p2() {
    tmp_32_fu_1489_p2 = (signbit_1_fu_1293_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_33_fu_1653_p3() {
    tmp_33_fu_1653_p3 = esl_concat<7,1>(tmp_25_fu_1643_p4.read(), tmp_24_fu_1637_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_34_fu_1180_p2() {
    tmp_34_fu_1180_p2 = (tmp_23_fu_1174_p2.read() | exitcond_flatten_fu_1068_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_35_fu_1661_p2() {
    tmp_35_fu_1661_p2 = (!tmp_33_fu_1653_p3.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_33_fu_1653_p3.read() != ap_const_lv8_0);
}

void LOAD_WEIGHT_DMA::thread_tmp_36_fu_1673_p1() {
    tmp_36_fu_1673_p1 = esl_zext<8,1>(qb_assign_1_fu_1667_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_37_fu_1691_p2() {
    tmp_37_fu_1691_p2 = (newsignbit_fu_1683_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_38_fu_1757_p2() {
    tmp_38_fu_1757_p2 = (tmp_59_fu_1703_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_39_fu_1795_p2() {
    tmp_39_fu_1795_p2 = (signbit_fu_1595_p3.read() ^ ap_const_lv1_1);
}

void LOAD_WEIGHT_DMA::thread_tmp_42_cast_fu_1234_p1() {
    tmp_42_cast_fu_1234_p1 = esl_sext<64,8>(grp_fu_1935_p3.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_43_fu_1194_p1() {
    tmp_43_fu_1194_p1 = m_1_fu_1168_p2.read().range(8-1, 0);
}

void LOAD_WEIGHT_DMA::thread_tmp_44_fu_1198_p1() {
    tmp_44_fu_1198_p1 = m_reg_989.read().range(8-1, 0);
}

void LOAD_WEIGHT_DMA::thread_tmp_45_fu_1202_p3() {
    tmp_45_fu_1202_p3 = (!tmp_s_fu_1139_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_s_fu_1139_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_44_fu_1198_p1.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_49_fu_1311_p3() {
    tmp_49_fu_1311_p3 = input_dma_W_TDATA.read().range(8, 8);
}

void LOAD_WEIGHT_DMA::thread_tmp_50_fu_1319_p3() {
    tmp_50_fu_1319_p3 = input_dma_W_TDATA.read().range(16, 16);
}

void LOAD_WEIGHT_DMA::thread_tmp_51_fu_1327_p1() {
    tmp_51_fu_1327_p1 = input_dma_W_TDATA.read().range(1-1, 0);
}

void LOAD_WEIGHT_DMA::thread_tmp_53_fu_1397_p3() {
    tmp_53_fu_1397_p3 = input_dma_W_TDATA.read().range(17, 17);
}

void LOAD_WEIGHT_DMA::thread_tmp_55_fu_1613_p3() {
    tmp_55_fu_1613_p3 = input_dma_W_TDATA.read().range(34, 34);
}

void LOAD_WEIGHT_DMA::thread_tmp_56_fu_1621_p3() {
    tmp_56_fu_1621_p3 = input_dma_W_TDATA.read().range(42, 42);
}

void LOAD_WEIGHT_DMA::thread_tmp_57_fu_1629_p3() {
    tmp_57_fu_1629_p3 = input_dma_W_TDATA.read().range(26, 26);
}

void LOAD_WEIGHT_DMA::thread_tmp_59_fu_1703_p3() {
    tmp_59_fu_1703_p3 = input_dma_W_TDATA.read().range(43, 43);
}

void LOAD_WEIGHT_DMA::thread_tmp_fu_1031_p3() {
    tmp_fu_1031_p3 = esl_concat<67,2>(bound4_fu_1025_p2.read(), ap_const_lv2_0);
}

void LOAD_WEIGHT_DMA::thread_tmp_s_fu_1139_p2() {
    tmp_s_fu_1139_p2 = (exitcond_flatten_mid_2_fu_1118_p3.read() | exitcond_flatten_fu_1068_p2.read());
}

void LOAD_WEIGHT_DMA::thread_tmp_t_fu_1087_p2() {
    tmp_t_fu_1087_p2 = (i_reg_945.read() ^ ap_const_lv3_4);
}

void LOAD_WEIGHT_DMA::thread_tmp_t_mid1_fu_1081_p2() {
    tmp_t_mid1_fu_1081_p2 = (!ap_const_lv3_5.is_01() || !i_reg_945.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_5) + sc_biguint<3>(i_reg_945.read()));
}

void LOAD_WEIGHT_DMA::thread_tmp_t_mid2_fu_1093_p3() {
    tmp_t_mid2_fu_1093_p3 = (!exitcond_flatten_fu_1068_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_1068_p2.read()[0].to_bool())? tmp_t_mid1_fu_1081_p2.read(): tmp_t_fu_1087_p2.read());
}

void LOAD_WEIGHT_DMA::thread_underflow_2_fu_1825_p2() {
    underflow_2_fu_1825_p2 = (signbit_fu_1595_p3.read() & tmp5_fu_1819_p2.read());
}

void LOAD_WEIGHT_DMA::thread_underflow_2_not_fu_1843_p2() {
    underflow_2_not_fu_1843_p2 = (tmp6_fu_1837_p2.read() | p_38_i_fu_1777_p2.read());
}

void LOAD_WEIGHT_DMA::thread_underflow_fu_1519_p2() {
    underflow_fu_1519_p2 = (signbit_1_fu_1293_p3.read() & tmp3_fu_1513_p2.read());
}

void LOAD_WEIGHT_DMA::thread_underflow_not_fu_1537_p2() {
    underflow_not_fu_1537_p2 = (tmp4_fu_1531_p2.read() | p_38_i1_fu_1471_p2.read());
}

void LOAD_WEIGHT_DMA::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_dma_W_TVALID.read())) && esl_seteq<1,1,1>(exitcond_flatten4_fu_1051_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

