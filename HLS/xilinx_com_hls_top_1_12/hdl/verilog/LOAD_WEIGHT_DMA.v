// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LOAD_WEIGHT_DMA (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_dma_W_TDATA,
        input_dma_W_TVALID,
        input_dma_W_TREADY,
        input_dma_W_TLAST,
        WEIGHT1_0_0_V_address0,
        WEIGHT1_0_0_V_ce0,
        WEIGHT1_0_0_V_we0,
        WEIGHT1_0_0_V_d0,
        WEIGHT1_0_1_V_address0,
        WEIGHT1_0_1_V_ce0,
        WEIGHT1_0_1_V_we0,
        WEIGHT1_0_1_V_d0,
        WEIGHT1_0_2_V_address0,
        WEIGHT1_0_2_V_ce0,
        WEIGHT1_0_2_V_we0,
        WEIGHT1_0_2_V_d0,
        WEIGHT1_0_3_V_address0,
        WEIGHT1_0_3_V_ce0,
        WEIGHT1_0_3_V_we0,
        WEIGHT1_0_3_V_d0,
        WEIGHT1_0_4_V_address0,
        WEIGHT1_0_4_V_ce0,
        WEIGHT1_0_4_V_we0,
        WEIGHT1_0_4_V_d0,
        WEIGHT1_0_5_V_address0,
        WEIGHT1_0_5_V_ce0,
        WEIGHT1_0_5_V_we0,
        WEIGHT1_0_5_V_d0,
        WEIGHT1_0_6_V_address0,
        WEIGHT1_0_6_V_ce0,
        WEIGHT1_0_6_V_we0,
        WEIGHT1_0_6_V_d0,
        WEIGHT1_1_0_V_address0,
        WEIGHT1_1_0_V_ce0,
        WEIGHT1_1_0_V_we0,
        WEIGHT1_1_0_V_d0,
        WEIGHT1_1_1_V_address0,
        WEIGHT1_1_1_V_ce0,
        WEIGHT1_1_1_V_we0,
        WEIGHT1_1_1_V_d0,
        WEIGHT1_1_2_V_address0,
        WEIGHT1_1_2_V_ce0,
        WEIGHT1_1_2_V_we0,
        WEIGHT1_1_2_V_d0,
        WEIGHT1_1_3_V_address0,
        WEIGHT1_1_3_V_ce0,
        WEIGHT1_1_3_V_we0,
        WEIGHT1_1_3_V_d0,
        WEIGHT1_1_4_V_address0,
        WEIGHT1_1_4_V_ce0,
        WEIGHT1_1_4_V_we0,
        WEIGHT1_1_4_V_d0,
        WEIGHT1_1_5_V_address0,
        WEIGHT1_1_5_V_ce0,
        WEIGHT1_1_5_V_we0,
        WEIGHT1_1_5_V_d0,
        WEIGHT1_1_6_V_address0,
        WEIGHT1_1_6_V_ce0,
        WEIGHT1_1_6_V_we0,
        WEIGHT1_1_6_V_d0,
        WEIGHT1_2_0_V_address0,
        WEIGHT1_2_0_V_ce0,
        WEIGHT1_2_0_V_we0,
        WEIGHT1_2_0_V_d0,
        WEIGHT1_2_1_V_address0,
        WEIGHT1_2_1_V_ce0,
        WEIGHT1_2_1_V_we0,
        WEIGHT1_2_1_V_d0,
        WEIGHT1_2_2_V_address0,
        WEIGHT1_2_2_V_ce0,
        WEIGHT1_2_2_V_we0,
        WEIGHT1_2_2_V_d0,
        WEIGHT1_2_3_V_address0,
        WEIGHT1_2_3_V_ce0,
        WEIGHT1_2_3_V_we0,
        WEIGHT1_2_3_V_d0,
        WEIGHT1_2_4_V_address0,
        WEIGHT1_2_4_V_ce0,
        WEIGHT1_2_4_V_we0,
        WEIGHT1_2_4_V_d0,
        WEIGHT1_2_5_V_address0,
        WEIGHT1_2_5_V_ce0,
        WEIGHT1_2_5_V_we0,
        WEIGHT1_2_5_V_d0,
        WEIGHT1_2_6_V_address0,
        WEIGHT1_2_6_V_ce0,
        WEIGHT1_2_6_V_we0,
        WEIGHT1_2_6_V_d0,
        WEIGHT1_3_0_V_address0,
        WEIGHT1_3_0_V_ce0,
        WEIGHT1_3_0_V_we0,
        WEIGHT1_3_0_V_d0,
        WEIGHT1_3_1_V_address0,
        WEIGHT1_3_1_V_ce0,
        WEIGHT1_3_1_V_we0,
        WEIGHT1_3_1_V_d0,
        WEIGHT1_3_2_V_address0,
        WEIGHT1_3_2_V_ce0,
        WEIGHT1_3_2_V_we0,
        WEIGHT1_3_2_V_d0,
        WEIGHT1_3_3_V_address0,
        WEIGHT1_3_3_V_ce0,
        WEIGHT1_3_3_V_we0,
        WEIGHT1_3_3_V_d0,
        WEIGHT1_3_4_V_address0,
        WEIGHT1_3_4_V_ce0,
        WEIGHT1_3_4_V_we0,
        WEIGHT1_3_4_V_d0,
        WEIGHT1_3_5_V_address0,
        WEIGHT1_3_5_V_ce0,
        WEIGHT1_3_5_V_we0,
        WEIGHT1_3_5_V_d0,
        WEIGHT1_3_6_V_address0,
        WEIGHT1_3_6_V_ce0,
        WEIGHT1_3_6_V_we0,
        WEIGHT1_3_6_V_d0,
        WEIGHT1_4_0_V_address0,
        WEIGHT1_4_0_V_ce0,
        WEIGHT1_4_0_V_we0,
        WEIGHT1_4_0_V_d0,
        WEIGHT1_4_1_V_address0,
        WEIGHT1_4_1_V_ce0,
        WEIGHT1_4_1_V_we0,
        WEIGHT1_4_1_V_d0,
        WEIGHT1_4_2_V_address0,
        WEIGHT1_4_2_V_ce0,
        WEIGHT1_4_2_V_we0,
        WEIGHT1_4_2_V_d0,
        WEIGHT1_4_3_V_address0,
        WEIGHT1_4_3_V_ce0,
        WEIGHT1_4_3_V_we0,
        WEIGHT1_4_3_V_d0,
        WEIGHT1_4_4_V_address0,
        WEIGHT1_4_4_V_ce0,
        WEIGHT1_4_4_V_we0,
        WEIGHT1_4_4_V_d0,
        WEIGHT1_4_5_V_address0,
        WEIGHT1_4_5_V_ce0,
        WEIGHT1_4_5_V_we0,
        WEIGHT1_4_5_V_d0,
        WEIGHT1_4_6_V_address0,
        WEIGHT1_4_6_V_ce0,
        WEIGHT1_4_6_V_we0,
        WEIGHT1_4_6_V_d0,
        WEIGHT1_5_0_V_address0,
        WEIGHT1_5_0_V_ce0,
        WEIGHT1_5_0_V_we0,
        WEIGHT1_5_0_V_d0,
        WEIGHT1_5_1_V_address0,
        WEIGHT1_5_1_V_ce0,
        WEIGHT1_5_1_V_we0,
        WEIGHT1_5_1_V_d0,
        WEIGHT1_5_2_V_address0,
        WEIGHT1_5_2_V_ce0,
        WEIGHT1_5_2_V_we0,
        WEIGHT1_5_2_V_d0,
        WEIGHT1_5_3_V_address0,
        WEIGHT1_5_3_V_ce0,
        WEIGHT1_5_3_V_we0,
        WEIGHT1_5_3_V_d0,
        WEIGHT1_5_4_V_address0,
        WEIGHT1_5_4_V_ce0,
        WEIGHT1_5_4_V_we0,
        WEIGHT1_5_4_V_d0,
        WEIGHT1_5_5_V_address0,
        WEIGHT1_5_5_V_ce0,
        WEIGHT1_5_5_V_we0,
        WEIGHT1_5_5_V_d0,
        WEIGHT1_5_6_V_address0,
        WEIGHT1_5_6_V_ce0,
        WEIGHT1_5_6_V_we0,
        WEIGHT1_5_6_V_d0,
        WEIGHT1_6_0_V_address0,
        WEIGHT1_6_0_V_ce0,
        WEIGHT1_6_0_V_we0,
        WEIGHT1_6_0_V_d0,
        WEIGHT1_6_1_V_address0,
        WEIGHT1_6_1_V_ce0,
        WEIGHT1_6_1_V_we0,
        WEIGHT1_6_1_V_d0,
        WEIGHT1_6_2_V_address0,
        WEIGHT1_6_2_V_ce0,
        WEIGHT1_6_2_V_we0,
        WEIGHT1_6_2_V_d0,
        WEIGHT1_6_3_V_address0,
        WEIGHT1_6_3_V_ce0,
        WEIGHT1_6_3_V_we0,
        WEIGHT1_6_3_V_d0,
        WEIGHT1_6_4_V_address0,
        WEIGHT1_6_4_V_ce0,
        WEIGHT1_6_4_V_we0,
        WEIGHT1_6_4_V_d0,
        WEIGHT1_6_5_V_address0,
        WEIGHT1_6_5_V_ce0,
        WEIGHT1_6_5_V_we0,
        WEIGHT1_6_5_V_d0,
        WEIGHT1_6_6_V_address0,
        WEIGHT1_6_6_V_ce0,
        WEIGHT1_6_6_V_we0,
        WEIGHT1_6_6_V_d0,
        WEIGHT1_7_0_V_address0,
        WEIGHT1_7_0_V_ce0,
        WEIGHT1_7_0_V_we0,
        WEIGHT1_7_0_V_d0,
        WEIGHT1_7_1_V_address0,
        WEIGHT1_7_1_V_ce0,
        WEIGHT1_7_1_V_we0,
        WEIGHT1_7_1_V_d0,
        WEIGHT1_7_2_V_address0,
        WEIGHT1_7_2_V_ce0,
        WEIGHT1_7_2_V_we0,
        WEIGHT1_7_2_V_d0,
        WEIGHT1_7_3_V_address0,
        WEIGHT1_7_3_V_ce0,
        WEIGHT1_7_3_V_we0,
        WEIGHT1_7_3_V_d0,
        WEIGHT1_7_4_V_address0,
        WEIGHT1_7_4_V_ce0,
        WEIGHT1_7_4_V_we0,
        WEIGHT1_7_4_V_d0,
        WEIGHT1_7_5_V_address0,
        WEIGHT1_7_5_V_ce0,
        WEIGHT1_7_5_V_we0,
        WEIGHT1_7_5_V_d0,
        WEIGHT1_7_6_V_address0,
        WEIGHT1_7_6_V_ce0,
        WEIGHT1_7_6_V_we0,
        WEIGHT1_7_6_V_d0,
        custom_k
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [55:0] input_dma_W_TDATA;
input   input_dma_W_TVALID;
output   input_dma_W_TREADY;
input   input_dma_W_TLAST;
output  [6:0] WEIGHT1_0_0_V_address0;
output   WEIGHT1_0_0_V_ce0;
output   WEIGHT1_0_0_V_we0;
output  [7:0] WEIGHT1_0_0_V_d0;
output  [6:0] WEIGHT1_0_1_V_address0;
output   WEIGHT1_0_1_V_ce0;
output   WEIGHT1_0_1_V_we0;
output  [7:0] WEIGHT1_0_1_V_d0;
output  [6:0] WEIGHT1_0_2_V_address0;
output   WEIGHT1_0_2_V_ce0;
output   WEIGHT1_0_2_V_we0;
output  [7:0] WEIGHT1_0_2_V_d0;
output  [6:0] WEIGHT1_0_3_V_address0;
output   WEIGHT1_0_3_V_ce0;
output   WEIGHT1_0_3_V_we0;
output  [7:0] WEIGHT1_0_3_V_d0;
output  [6:0] WEIGHT1_0_4_V_address0;
output   WEIGHT1_0_4_V_ce0;
output   WEIGHT1_0_4_V_we0;
output  [7:0] WEIGHT1_0_4_V_d0;
output  [6:0] WEIGHT1_0_5_V_address0;
output   WEIGHT1_0_5_V_ce0;
output   WEIGHT1_0_5_V_we0;
output  [7:0] WEIGHT1_0_5_V_d0;
output  [6:0] WEIGHT1_0_6_V_address0;
output   WEIGHT1_0_6_V_ce0;
output   WEIGHT1_0_6_V_we0;
output  [7:0] WEIGHT1_0_6_V_d0;
output  [6:0] WEIGHT1_1_0_V_address0;
output   WEIGHT1_1_0_V_ce0;
output   WEIGHT1_1_0_V_we0;
output  [7:0] WEIGHT1_1_0_V_d0;
output  [6:0] WEIGHT1_1_1_V_address0;
output   WEIGHT1_1_1_V_ce0;
output   WEIGHT1_1_1_V_we0;
output  [7:0] WEIGHT1_1_1_V_d0;
output  [6:0] WEIGHT1_1_2_V_address0;
output   WEIGHT1_1_2_V_ce0;
output   WEIGHT1_1_2_V_we0;
output  [7:0] WEIGHT1_1_2_V_d0;
output  [6:0] WEIGHT1_1_3_V_address0;
output   WEIGHT1_1_3_V_ce0;
output   WEIGHT1_1_3_V_we0;
output  [7:0] WEIGHT1_1_3_V_d0;
output  [6:0] WEIGHT1_1_4_V_address0;
output   WEIGHT1_1_4_V_ce0;
output   WEIGHT1_1_4_V_we0;
output  [7:0] WEIGHT1_1_4_V_d0;
output  [6:0] WEIGHT1_1_5_V_address0;
output   WEIGHT1_1_5_V_ce0;
output   WEIGHT1_1_5_V_we0;
output  [7:0] WEIGHT1_1_5_V_d0;
output  [6:0] WEIGHT1_1_6_V_address0;
output   WEIGHT1_1_6_V_ce0;
output   WEIGHT1_1_6_V_we0;
output  [7:0] WEIGHT1_1_6_V_d0;
output  [6:0] WEIGHT1_2_0_V_address0;
output   WEIGHT1_2_0_V_ce0;
output   WEIGHT1_2_0_V_we0;
output  [7:0] WEIGHT1_2_0_V_d0;
output  [6:0] WEIGHT1_2_1_V_address0;
output   WEIGHT1_2_1_V_ce0;
output   WEIGHT1_2_1_V_we0;
output  [7:0] WEIGHT1_2_1_V_d0;
output  [6:0] WEIGHT1_2_2_V_address0;
output   WEIGHT1_2_2_V_ce0;
output   WEIGHT1_2_2_V_we0;
output  [7:0] WEIGHT1_2_2_V_d0;
output  [6:0] WEIGHT1_2_3_V_address0;
output   WEIGHT1_2_3_V_ce0;
output   WEIGHT1_2_3_V_we0;
output  [7:0] WEIGHT1_2_3_V_d0;
output  [6:0] WEIGHT1_2_4_V_address0;
output   WEIGHT1_2_4_V_ce0;
output   WEIGHT1_2_4_V_we0;
output  [7:0] WEIGHT1_2_4_V_d0;
output  [6:0] WEIGHT1_2_5_V_address0;
output   WEIGHT1_2_5_V_ce0;
output   WEIGHT1_2_5_V_we0;
output  [7:0] WEIGHT1_2_5_V_d0;
output  [6:0] WEIGHT1_2_6_V_address0;
output   WEIGHT1_2_6_V_ce0;
output   WEIGHT1_2_6_V_we0;
output  [7:0] WEIGHT1_2_6_V_d0;
output  [6:0] WEIGHT1_3_0_V_address0;
output   WEIGHT1_3_0_V_ce0;
output   WEIGHT1_3_0_V_we0;
output  [7:0] WEIGHT1_3_0_V_d0;
output  [6:0] WEIGHT1_3_1_V_address0;
output   WEIGHT1_3_1_V_ce0;
output   WEIGHT1_3_1_V_we0;
output  [7:0] WEIGHT1_3_1_V_d0;
output  [6:0] WEIGHT1_3_2_V_address0;
output   WEIGHT1_3_2_V_ce0;
output   WEIGHT1_3_2_V_we0;
output  [7:0] WEIGHT1_3_2_V_d0;
output  [6:0] WEIGHT1_3_3_V_address0;
output   WEIGHT1_3_3_V_ce0;
output   WEIGHT1_3_3_V_we0;
output  [7:0] WEIGHT1_3_3_V_d0;
output  [6:0] WEIGHT1_3_4_V_address0;
output   WEIGHT1_3_4_V_ce0;
output   WEIGHT1_3_4_V_we0;
output  [7:0] WEIGHT1_3_4_V_d0;
output  [6:0] WEIGHT1_3_5_V_address0;
output   WEIGHT1_3_5_V_ce0;
output   WEIGHT1_3_5_V_we0;
output  [7:0] WEIGHT1_3_5_V_d0;
output  [6:0] WEIGHT1_3_6_V_address0;
output   WEIGHT1_3_6_V_ce0;
output   WEIGHT1_3_6_V_we0;
output  [7:0] WEIGHT1_3_6_V_d0;
output  [6:0] WEIGHT1_4_0_V_address0;
output   WEIGHT1_4_0_V_ce0;
output   WEIGHT1_4_0_V_we0;
output  [7:0] WEIGHT1_4_0_V_d0;
output  [6:0] WEIGHT1_4_1_V_address0;
output   WEIGHT1_4_1_V_ce0;
output   WEIGHT1_4_1_V_we0;
output  [7:0] WEIGHT1_4_1_V_d0;
output  [6:0] WEIGHT1_4_2_V_address0;
output   WEIGHT1_4_2_V_ce0;
output   WEIGHT1_4_2_V_we0;
output  [7:0] WEIGHT1_4_2_V_d0;
output  [6:0] WEIGHT1_4_3_V_address0;
output   WEIGHT1_4_3_V_ce0;
output   WEIGHT1_4_3_V_we0;
output  [7:0] WEIGHT1_4_3_V_d0;
output  [6:0] WEIGHT1_4_4_V_address0;
output   WEIGHT1_4_4_V_ce0;
output   WEIGHT1_4_4_V_we0;
output  [7:0] WEIGHT1_4_4_V_d0;
output  [6:0] WEIGHT1_4_5_V_address0;
output   WEIGHT1_4_5_V_ce0;
output   WEIGHT1_4_5_V_we0;
output  [7:0] WEIGHT1_4_5_V_d0;
output  [6:0] WEIGHT1_4_6_V_address0;
output   WEIGHT1_4_6_V_ce0;
output   WEIGHT1_4_6_V_we0;
output  [7:0] WEIGHT1_4_6_V_d0;
output  [6:0] WEIGHT1_5_0_V_address0;
output   WEIGHT1_5_0_V_ce0;
output   WEIGHT1_5_0_V_we0;
output  [7:0] WEIGHT1_5_0_V_d0;
output  [6:0] WEIGHT1_5_1_V_address0;
output   WEIGHT1_5_1_V_ce0;
output   WEIGHT1_5_1_V_we0;
output  [7:0] WEIGHT1_5_1_V_d0;
output  [6:0] WEIGHT1_5_2_V_address0;
output   WEIGHT1_5_2_V_ce0;
output   WEIGHT1_5_2_V_we0;
output  [7:0] WEIGHT1_5_2_V_d0;
output  [6:0] WEIGHT1_5_3_V_address0;
output   WEIGHT1_5_3_V_ce0;
output   WEIGHT1_5_3_V_we0;
output  [7:0] WEIGHT1_5_3_V_d0;
output  [6:0] WEIGHT1_5_4_V_address0;
output   WEIGHT1_5_4_V_ce0;
output   WEIGHT1_5_4_V_we0;
output  [7:0] WEIGHT1_5_4_V_d0;
output  [6:0] WEIGHT1_5_5_V_address0;
output   WEIGHT1_5_5_V_ce0;
output   WEIGHT1_5_5_V_we0;
output  [7:0] WEIGHT1_5_5_V_d0;
output  [6:0] WEIGHT1_5_6_V_address0;
output   WEIGHT1_5_6_V_ce0;
output   WEIGHT1_5_6_V_we0;
output  [7:0] WEIGHT1_5_6_V_d0;
output  [6:0] WEIGHT1_6_0_V_address0;
output   WEIGHT1_6_0_V_ce0;
output   WEIGHT1_6_0_V_we0;
output  [7:0] WEIGHT1_6_0_V_d0;
output  [6:0] WEIGHT1_6_1_V_address0;
output   WEIGHT1_6_1_V_ce0;
output   WEIGHT1_6_1_V_we0;
output  [7:0] WEIGHT1_6_1_V_d0;
output  [6:0] WEIGHT1_6_2_V_address0;
output   WEIGHT1_6_2_V_ce0;
output   WEIGHT1_6_2_V_we0;
output  [7:0] WEIGHT1_6_2_V_d0;
output  [6:0] WEIGHT1_6_3_V_address0;
output   WEIGHT1_6_3_V_ce0;
output   WEIGHT1_6_3_V_we0;
output  [7:0] WEIGHT1_6_3_V_d0;
output  [6:0] WEIGHT1_6_4_V_address0;
output   WEIGHT1_6_4_V_ce0;
output   WEIGHT1_6_4_V_we0;
output  [7:0] WEIGHT1_6_4_V_d0;
output  [6:0] WEIGHT1_6_5_V_address0;
output   WEIGHT1_6_5_V_ce0;
output   WEIGHT1_6_5_V_we0;
output  [7:0] WEIGHT1_6_5_V_d0;
output  [6:0] WEIGHT1_6_6_V_address0;
output   WEIGHT1_6_6_V_ce0;
output   WEIGHT1_6_6_V_we0;
output  [7:0] WEIGHT1_6_6_V_d0;
output  [6:0] WEIGHT1_7_0_V_address0;
output   WEIGHT1_7_0_V_ce0;
output   WEIGHT1_7_0_V_we0;
output  [7:0] WEIGHT1_7_0_V_d0;
output  [6:0] WEIGHT1_7_1_V_address0;
output   WEIGHT1_7_1_V_ce0;
output   WEIGHT1_7_1_V_we0;
output  [7:0] WEIGHT1_7_1_V_d0;
output  [6:0] WEIGHT1_7_2_V_address0;
output   WEIGHT1_7_2_V_ce0;
output   WEIGHT1_7_2_V_we0;
output  [7:0] WEIGHT1_7_2_V_d0;
output  [6:0] WEIGHT1_7_3_V_address0;
output   WEIGHT1_7_3_V_ce0;
output   WEIGHT1_7_3_V_we0;
output  [7:0] WEIGHT1_7_3_V_d0;
output  [6:0] WEIGHT1_7_4_V_address0;
output   WEIGHT1_7_4_V_ce0;
output   WEIGHT1_7_4_V_we0;
output  [7:0] WEIGHT1_7_4_V_d0;
output  [6:0] WEIGHT1_7_5_V_address0;
output   WEIGHT1_7_5_V_ce0;
output   WEIGHT1_7_5_V_we0;
output  [7:0] WEIGHT1_7_5_V_d0;
output  [6:0] WEIGHT1_7_6_V_address0;
output   WEIGHT1_7_6_V_ce0;
output   WEIGHT1_7_6_V_we0;
output  [7:0] WEIGHT1_7_6_V_d0;
input  [31:0] custom_k;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_dma_W_TREADY;
reg WEIGHT1_0_0_V_ce0;
reg WEIGHT1_0_0_V_we0;
reg WEIGHT1_0_1_V_ce0;
reg WEIGHT1_0_1_V_we0;
reg WEIGHT1_0_2_V_ce0;
reg WEIGHT1_0_2_V_we0;
reg WEIGHT1_0_3_V_ce0;
reg WEIGHT1_0_3_V_we0;
reg WEIGHT1_0_4_V_ce0;
reg WEIGHT1_0_4_V_we0;
reg WEIGHT1_0_5_V_ce0;
reg WEIGHT1_0_5_V_we0;
reg WEIGHT1_0_6_V_ce0;
reg WEIGHT1_0_6_V_we0;
reg WEIGHT1_1_0_V_ce0;
reg WEIGHT1_1_0_V_we0;
reg WEIGHT1_1_1_V_ce0;
reg WEIGHT1_1_1_V_we0;
reg WEIGHT1_1_2_V_ce0;
reg WEIGHT1_1_2_V_we0;
reg WEIGHT1_1_3_V_ce0;
reg WEIGHT1_1_3_V_we0;
reg WEIGHT1_1_4_V_ce0;
reg WEIGHT1_1_4_V_we0;
reg WEIGHT1_1_5_V_ce0;
reg WEIGHT1_1_5_V_we0;
reg WEIGHT1_1_6_V_ce0;
reg WEIGHT1_1_6_V_we0;
reg WEIGHT1_2_0_V_ce0;
reg WEIGHT1_2_0_V_we0;
reg WEIGHT1_2_1_V_ce0;
reg WEIGHT1_2_1_V_we0;
reg WEIGHT1_2_2_V_ce0;
reg WEIGHT1_2_2_V_we0;
reg WEIGHT1_2_3_V_ce0;
reg WEIGHT1_2_3_V_we0;
reg WEIGHT1_2_4_V_ce0;
reg WEIGHT1_2_4_V_we0;
reg WEIGHT1_2_5_V_ce0;
reg WEIGHT1_2_5_V_we0;
reg WEIGHT1_2_6_V_ce0;
reg WEIGHT1_2_6_V_we0;
reg WEIGHT1_3_0_V_ce0;
reg WEIGHT1_3_0_V_we0;
reg WEIGHT1_3_1_V_ce0;
reg WEIGHT1_3_1_V_we0;
reg WEIGHT1_3_2_V_ce0;
reg WEIGHT1_3_2_V_we0;
reg WEIGHT1_3_3_V_ce0;
reg WEIGHT1_3_3_V_we0;
reg WEIGHT1_3_4_V_ce0;
reg WEIGHT1_3_4_V_we0;
reg WEIGHT1_3_5_V_ce0;
reg WEIGHT1_3_5_V_we0;
reg WEIGHT1_3_6_V_ce0;
reg WEIGHT1_3_6_V_we0;
reg WEIGHT1_4_0_V_ce0;
reg WEIGHT1_4_0_V_we0;
reg WEIGHT1_4_1_V_ce0;
reg WEIGHT1_4_1_V_we0;
reg WEIGHT1_4_2_V_ce0;
reg WEIGHT1_4_2_V_we0;
reg WEIGHT1_4_3_V_ce0;
reg WEIGHT1_4_3_V_we0;
reg WEIGHT1_4_4_V_ce0;
reg WEIGHT1_4_4_V_we0;
reg WEIGHT1_4_5_V_ce0;
reg WEIGHT1_4_5_V_we0;
reg WEIGHT1_4_6_V_ce0;
reg WEIGHT1_4_6_V_we0;
reg WEIGHT1_5_0_V_ce0;
reg WEIGHT1_5_0_V_we0;
reg WEIGHT1_5_1_V_ce0;
reg WEIGHT1_5_1_V_we0;
reg WEIGHT1_5_2_V_ce0;
reg WEIGHT1_5_2_V_we0;
reg WEIGHT1_5_3_V_ce0;
reg WEIGHT1_5_3_V_we0;
reg WEIGHT1_5_4_V_ce0;
reg WEIGHT1_5_4_V_we0;
reg WEIGHT1_5_5_V_ce0;
reg WEIGHT1_5_5_V_we0;
reg WEIGHT1_5_6_V_ce0;
reg WEIGHT1_5_6_V_we0;
reg WEIGHT1_6_0_V_ce0;
reg WEIGHT1_6_0_V_we0;
reg WEIGHT1_6_1_V_ce0;
reg WEIGHT1_6_1_V_we0;
reg WEIGHT1_6_2_V_ce0;
reg WEIGHT1_6_2_V_we0;
reg WEIGHT1_6_3_V_ce0;
reg WEIGHT1_6_3_V_we0;
reg WEIGHT1_6_4_V_ce0;
reg WEIGHT1_6_4_V_we0;
reg WEIGHT1_6_5_V_ce0;
reg WEIGHT1_6_5_V_we0;
reg WEIGHT1_6_6_V_ce0;
reg WEIGHT1_6_6_V_we0;
reg WEIGHT1_7_0_V_ce0;
reg WEIGHT1_7_0_V_we0;
reg WEIGHT1_7_1_V_ce0;
reg WEIGHT1_7_1_V_we0;
reg WEIGHT1_7_2_V_ce0;
reg WEIGHT1_7_2_V_we0;
reg WEIGHT1_7_3_V_ce0;
reg WEIGHT1_7_3_V_we0;
reg WEIGHT1_7_4_V_ce0;
reg WEIGHT1_7_4_V_we0;
reg WEIGHT1_7_5_V_ce0;
reg WEIGHT1_7_5_V_we0;
reg WEIGHT1_7_6_V_ce0;
reg WEIGHT1_7_6_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_dma_W_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_flatten4_fu_1051_p2;
wire   [63:0] bound_fu_1015_p2;
reg   [63:0] bound_reg_1949;
wire   [66:0] bound4_fu_1025_p2;
reg   [66:0] bound4_reg_1954;
wire   [68:0] tmp_fu_1031_p3;
reg   [68:0] tmp_reg_1959;
wire   [0:0] exitcond_mid_fu_1039_p2;
reg   [0:0] exitcond_mid_reg_1964;
wire   [0:0] exitcond_flatten_mid_fu_1045_p2;
reg   [0:0] exitcond_flatten_mid_reg_1970;
wire   [68:0] indvar_flatten_next4_fu_1056_p2;
reg    ap_block_state2;
wire   [2:0] i_mid2_fu_1125_p3;
wire   [2:0] j_mid2_fu_1160_p3;
wire   [30:0] m_mid2_fu_1218_p3;
wire   [31:0] l_1_fu_1901_p2;
wire   [63:0] indvar_flatten_next_fu_1913_p3;
wire   [66:0] indvar_flatten_next3_fu_1927_p3;
reg   [68:0] indvar_flatten3_reg_934;
reg   [2:0] i_reg_945;
reg   [66:0] indvar_flatten4_reg_956;
reg   [2:0] j_reg_967;
reg   [63:0] indvar_flatten_reg_978;
reg   [30:0] m_reg_989;
reg   [31:0] l_reg_1000;
wire  signed [63:0] tmp_42_cast_fu_1234_p1;
wire   [7:0] this_assign_1_fu_1559_p3;
wire   [2:0] tmp_t_mid2_fu_1093_p3;
wire   [7:0] this_assign_4_1_fu_1865_p3;
wire   [31:0] bound_fu_1015_p0;
wire   [63:0] cast_fu_1011_p1;
wire   [31:0] bound_fu_1015_p1;
wire   [63:0] bound4_fu_1025_p0;
wire   [0:0] exitcond_flatten_fu_1068_p2;
wire   [2:0] tmp_t_mid1_fu_1081_p2;
wire   [2:0] tmp_t_fu_1087_p2;
wire   [0:0] exitcond_fu_1101_p2;
wire   [0:0] exitcond_flatten1_fu_1113_p2;
wire   [2:0] i_4_fu_1062_p2;
wire   [2:0] j_mid_fu_1073_p3;
wire   [0:0] exitcond_flatten_mid_2_fu_1118_p3;
wire   [0:0] tmp_s_fu_1139_p2;
wire   [0:0] exitcond_mid1_fu_1106_p3;
wire   [2:0] j_3_fu_1133_p2;
wire   [30:0] m_mid_fu_1145_p3;
wire   [0:0] exitcond_mid2_fu_1153_p3;
wire   [0:0] tmp_23_fu_1174_p2;
wire   [0:0] tmp_34_fu_1180_p2;
wire   [30:0] m_1_fu_1168_p2;
wire   [7:0] tmp_44_fu_1198_p1;
wire   [7:0] tmp_43_fu_1194_p1;
wire   [7:0] tmp_45_fu_1202_p3;
wire   [31:0] l_mid2_fu_1186_p3;
wire  signed [7:0] grp_fu_1935_p3;
wire   [0:0] tmp_51_fu_1327_p1;
wire   [0:0] tmp_49_fu_1311_p3;
wire   [6:0] tmp_21_fu_1337_p4;
wire   [0:0] tmp_20_fu_1331_p2;
wire   [7:0] tmp_22_fu_1347_p3;
wire   [0:0] tmp_28_fu_1355_p2;
wire   [0:0] signbit_1_fu_1293_p3;
wire   [0:0] qb_assign_fu_1361_p2;
wire   [7:0] tmp_29_fu_1367_p1;
wire   [7:0] p_Val2_s_50_fu_1301_p4;
wire   [7:0] p_Val2_7_fu_1371_p2;
wire   [0:0] newsignbit_2_fu_1377_p3;
wire   [0:0] tmp_50_fu_1319_p3;
wire   [0:0] tmp_30_fu_1385_p2;
wire   [7:0] p_Result_s_fu_1405_p4;
wire   [8:0] p_Result_1_fu_1421_p4;
wire   [0:0] carry_fu_1391_p2;
wire   [0:0] Range1_all_ones_fu_1431_p2;
wire   [0:0] Range1_all_zeros_fu_1437_p2;
wire   [0:0] tmp_53_fu_1397_p3;
wire   [0:0] Range2_all_ones_fu_1415_p2;
wire   [0:0] tmp_31_fu_1451_p2;
wire   [0:0] p_41_i1_fu_1457_p2;
wire   [0:0] deleted_zeros_fu_1443_p3;
wire   [0:0] p_not_i1_fu_1477_p2;
wire   [0:0] brmerge_i2_fu_1483_p2;
wire   [0:0] tmp_32_fu_1489_p2;
wire   [0:0] deleted_ones_fu_1463_p3;
wire   [0:0] p_38_i1_fu_1471_p2;
wire   [0:0] brmerge40_demorgan_i_1_fu_1501_p2;
wire   [0:0] tmp3_demorgan_fu_1507_p2;
wire   [0:0] tmp3_fu_1513_p2;
wire   [0:0] underflow_fu_1519_p2;
wire   [0:0] overflow_fu_1495_p2;
wire   [0:0] tmp4_fu_1531_p2;
wire   [0:0] brmerge_i_i2_fu_1525_p2;
wire   [0:0] underflow_not_fu_1537_p2;
wire   [7:0] p_Val2_8_mux_fu_1543_p3;
wire   [7:0] p_Val2_8_51_fu_1551_p3;
wire   [0:0] tmp_57_fu_1629_p3;
wire   [0:0] tmp_55_fu_1613_p3;
wire   [6:0] tmp_25_fu_1643_p4;
wire   [0:0] tmp_24_fu_1637_p2;
wire   [7:0] tmp_33_fu_1653_p3;
wire   [0:0] tmp_35_fu_1661_p2;
wire   [0:0] signbit_fu_1595_p3;
wire   [0:0] qb_assign_1_fu_1667_p2;
wire   [7:0] p_Val2_8_fu_1603_p4;
wire   [7:0] tmp_36_fu_1673_p1;
wire   [7:0] p_Val2_9_fu_1677_p2;
wire   [0:0] newsignbit_fu_1683_p3;
wire   [0:0] tmp_56_fu_1621_p3;
wire   [0:0] tmp_37_fu_1691_p2;
wire   [7:0] p_Result_7_fu_1711_p4;
wire   [8:0] p_Result_8_fu_1727_p4;
wire   [0:0] carry_1_fu_1697_p2;
wire   [0:0] Range1_all_ones_1_fu_1737_p2;
wire   [0:0] Range1_all_zeros_1_fu_1743_p2;
wire   [0:0] tmp_59_fu_1703_p3;
wire   [0:0] Range2_all_ones_1_fu_1721_p2;
wire   [0:0] tmp_38_fu_1757_p2;
wire   [0:0] p_41_i_fu_1763_p2;
wire   [0:0] deleted_zeros_1_fu_1749_p3;
wire   [0:0] p_not_i_fu_1783_p2;
wire   [0:0] brmerge_i_fu_1789_p2;
wire   [0:0] tmp_39_fu_1795_p2;
wire   [0:0] deleted_ones_1_fu_1769_p3;
wire   [0:0] p_38_i_fu_1777_p2;
wire   [0:0] brmerge40_demorgan_i_fu_1807_p2;
wire   [0:0] tmp5_demorgan_fu_1813_p2;
wire   [0:0] tmp5_fu_1819_p2;
wire   [0:0] underflow_2_fu_1825_p2;
wire   [0:0] overflow_1_fu_1801_p2;
wire   [0:0] tmp6_fu_1837_p2;
wire   [0:0] brmerge_i_i_fu_1831_p2;
wire   [0:0] underflow_2_not_fu_1843_p2;
wire   [7:0] p_Val2_11_mux_fu_1849_p3;
wire   [7:0] p_Val2_s_fu_1857_p3;
wire   [63:0] indvar_flatten_op_fu_1907_p2;
wire   [66:0] indvar_flatten16_op_fu_1921_p2;
wire   [4:0] grp_fu_1935_p0;
wire  signed [7:0] grp_fu_1935_p1;
wire   [7:0] grp_fu_1935_p2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
wire   [66:0] bound4_fu_1025_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

top_mac_muladd_5nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
top_mac_muladd_5nbkb_U1(
    .din0(grp_fu_1935_p0),
    .din1(grp_fu_1935_p1),
    .din2(grp_fu_1935_p2),
    .dout(grp_fu_1935_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_945 <= i_mid2_fu_1125_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_945 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten3_reg_934 <= indvar_flatten_next4_fu_1056_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten3_reg_934 <= 69'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten4_reg_956 <= indvar_flatten_next3_fu_1927_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_956 <= 67'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_978 <= indvar_flatten_next_fu_1913_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_978 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_967 <= j_mid2_fu_1160_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_967 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        l_reg_1000 <= l_1_fu_1901_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l_reg_1000 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_reg_989 <= m_mid2_fu_1218_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_reg_989 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bound4_reg_1954 <= bound4_fu_1025_p2;
        bound_reg_1949 <= bound_fu_1015_p2;
        exitcond_flatten_mid_reg_1970 <= exitcond_flatten_mid_fu_1045_p2;
        exitcond_mid_reg_1964 <= exitcond_mid_fu_1039_p2;
        tmp_reg_1959[68 : 2] <= tmp_fu_1031_p3[68 : 2];
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd0) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd1) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd2) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd3) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd4) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd5) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1160_p3 == 3'd7) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((j_mid2_fu_1160_p3 == 3'd6) & (i_mid2_fu_1125_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_0_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd0) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd1) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd2) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd3) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd4) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd5) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1160_p3 == 3'd7) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((j_mid2_fu_1160_p3 == 3'd6) & (i_mid2_fu_1125_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_1_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd0) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd1) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd2) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd3) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd4) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd5) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1160_p3 == 3'd7) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((j_mid2_fu_1160_p3 == 3'd6) & (i_mid2_fu_1125_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_2_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd3) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd4) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd5) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & (j_mid2_fu_1160_p3 == 3'd7) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | (~(i_mid2_fu_1125_p3 == 3'd0) & ~(i_mid2_fu_1125_p3 == 3'd1) & ~(i_mid2_fu_1125_p3 == 3'd2) & (j_mid2_fu_1160_p3 == 3'd6) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_3_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd3) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd4) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd5) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd7) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((tmp_t_mid2_fu_1093_p3 == 3'd4) & (j_mid2_fu_1160_p3 == 3'd6) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_4_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd3) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd4) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd5) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd7) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((tmp_t_mid2_fu_1093_p3 == 3'd5) & (j_mid2_fu_1160_p3 == 3'd6) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_5_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd3) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd4) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd5) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd7) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | ((tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd6) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_6_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd0) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd1) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd2) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd3) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd4) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & ~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1160_p3 == 3'd5) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd7) & (exitcond_flatten4_fu_1051_p2 == 1'd0)) | (~(tmp_t_mid2_fu_1093_p3 == 3'd4) & ~(tmp_t_mid2_fu_1093_p3 == 3'd5) & ~(tmp_t_mid2_fu_1093_p3 == 3'd6) & (j_mid2_fu_1160_p3 == 3'd6) & (exitcond_flatten4_fu_1051_p2 == 1'd0))))) begin
        WEIGHT1_7_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_W_TDATA_blk_n = input_dma_W_TVALID;
    end else begin
        input_dma_W_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_W_TREADY = 1'b1;
    end else begin
        input_dma_W_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_1737_p2 = ((p_Result_8_fu_1727_p4 == 9'd511) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1431_p2 = ((p_Result_1_fu_1421_p4 == 9'd511) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_1743_p2 = ((p_Result_8_fu_1727_p4 == 9'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1437_p2 = ((p_Result_1_fu_1421_p4 == 9'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_1721_p2 = ((p_Result_7_fu_1711_p4 == 8'd255) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_1415_p2 = ((p_Result_s_fu_1405_p4 == 8'd255) ? 1'b1 : 1'b0);

assign WEIGHT1_0_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_0_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_1_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_2_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_3_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_4_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_5_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_0_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_0_6_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_0_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_1_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_2_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_3_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_4_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_5_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_1_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_1_6_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_0_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_1_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_2_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_3_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_4_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_5_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_2_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_2_6_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_0_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_1_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_2_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_3_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_4_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_5_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_3_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_3_6_V_d0 = this_assign_1_fu_1559_p3;

assign WEIGHT1_4_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_0_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_1_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_2_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_3_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_4_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_5_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_4_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_4_6_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_0_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_1_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_2_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_3_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_4_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_5_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_5_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_5_6_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_0_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_1_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_2_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_3_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_4_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_5_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_6_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_6_6_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_0_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_0_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_1_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_1_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_2_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_2_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_3_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_3_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_4_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_4_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_5_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_5_V_d0 = this_assign_4_1_fu_1865_p3;

assign WEIGHT1_7_6_V_address0 = tmp_42_cast_fu_1234_p1;

assign WEIGHT1_7_6_V_d0 = this_assign_4_1_fu_1865_p3;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state2 = ((exitcond_flatten4_fu_1051_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0));
end

assign bound4_fu_1025_p0 = bound4_fu_1025_p00;

assign bound4_fu_1025_p00 = bound_fu_1015_p2;

assign bound4_fu_1025_p2 = (bound4_fu_1025_p0 * $signed('h7));

assign bound_fu_1015_p0 = cast_fu_1011_p1;

assign bound_fu_1015_p1 = cast_fu_1011_p1;

assign bound_fu_1015_p2 = (bound_fu_1015_p0 * bound_fu_1015_p1);

assign brmerge40_demorgan_i_1_fu_1501_p2 = (newsignbit_2_fu_1377_p3 & deleted_ones_fu_1463_p3);

assign brmerge40_demorgan_i_fu_1807_p2 = (newsignbit_fu_1683_p3 & deleted_ones_1_fu_1769_p3);

assign brmerge_i2_fu_1483_p2 = (p_not_i1_fu_1477_p2 | newsignbit_2_fu_1377_p3);

assign brmerge_i_fu_1789_p2 = (p_not_i_fu_1783_p2 | newsignbit_fu_1683_p3);

assign brmerge_i_i2_fu_1525_p2 = (underflow_fu_1519_p2 | overflow_fu_1495_p2);

assign brmerge_i_i_fu_1831_p2 = (underflow_2_fu_1825_p2 | overflow_1_fu_1801_p2);

assign carry_1_fu_1697_p2 = (tmp_56_fu_1621_p3 & tmp_37_fu_1691_p2);

assign carry_fu_1391_p2 = (tmp_50_fu_1319_p3 & tmp_30_fu_1385_p2);

assign cast_fu_1011_p1 = custom_k;

assign deleted_ones_1_fu_1769_p3 = ((carry_1_fu_1697_p2[0:0] === 1'b1) ? p_41_i_fu_1763_p2 : Range1_all_ones_1_fu_1737_p2);

assign deleted_ones_fu_1463_p3 = ((carry_fu_1391_p2[0:0] === 1'b1) ? p_41_i1_fu_1457_p2 : Range1_all_ones_fu_1431_p2);

assign deleted_zeros_1_fu_1749_p3 = ((carry_1_fu_1697_p2[0:0] === 1'b1) ? Range1_all_ones_1_fu_1737_p2 : Range1_all_zeros_1_fu_1743_p2);

assign deleted_zeros_fu_1443_p3 = ((carry_fu_1391_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1431_p2 : Range1_all_zeros_fu_1437_p2);

assign exitcond_flatten1_fu_1113_p2 = ((indvar_flatten_reg_978 == bound_reg_1949) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_1051_p2 = ((indvar_flatten3_reg_934 == tmp_reg_1959) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1068_p2 = ((indvar_flatten4_reg_956 == bound4_reg_1954) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_2_fu_1118_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? exitcond_flatten_mid_reg_1970 : exitcond_flatten1_fu_1113_p2);

assign exitcond_flatten_mid_fu_1045_p2 = ((bound_fu_1015_p2 == 64'd0) ? 1'b1 : 1'b0);

assign exitcond_fu_1101_p2 = ((l_reg_1000 == custom_k) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_1106_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? exitcond_mid_reg_1964 : exitcond_fu_1101_p2);

assign exitcond_mid2_fu_1153_p3 = ((exitcond_flatten_mid_2_fu_1118_p3[0:0] === 1'b1) ? exitcond_mid_reg_1964 : exitcond_mid1_fu_1106_p3);

assign exitcond_mid_fu_1039_p2 = ((custom_k == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1935_p0 = 8'd11;

assign grp_fu_1935_p1 = ((exitcond_mid2_fu_1153_p3[0:0] === 1'b1) ? tmp_43_fu_1194_p1 : tmp_45_fu_1202_p3);

assign grp_fu_1935_p2 = l_mid2_fu_1186_p3[7:0];

assign i_4_fu_1062_p2 = (3'd1 + i_reg_945);

assign i_mid2_fu_1125_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? i_4_fu_1062_p2 : i_reg_945);

assign indvar_flatten16_op_fu_1921_p2 = (indvar_flatten4_reg_956 + 67'd1);

assign indvar_flatten_next3_fu_1927_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? 67'd1 : indvar_flatten16_op_fu_1921_p2);

assign indvar_flatten_next4_fu_1056_p2 = (indvar_flatten3_reg_934 + 69'd1);

assign indvar_flatten_next_fu_1913_p3 = ((tmp_s_fu_1139_p2[0:0] === 1'b1) ? 64'd1 : indvar_flatten_op_fu_1907_p2);

assign indvar_flatten_op_fu_1907_p2 = (indvar_flatten_reg_978 + 64'd1);

assign j_3_fu_1133_p2 = (3'd1 + j_mid_fu_1073_p3);

assign j_mid2_fu_1160_p3 = ((exitcond_flatten_mid_2_fu_1118_p3[0:0] === 1'b1) ? j_3_fu_1133_p2 : j_mid_fu_1073_p3);

assign j_mid_fu_1073_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? 3'd0 : j_reg_967);

assign l_1_fu_1901_p2 = (l_mid2_fu_1186_p3 + 32'd1);

assign l_mid2_fu_1186_p3 = ((tmp_34_fu_1180_p2[0:0] === 1'b1) ? 32'd0 : l_reg_1000);

assign m_1_fu_1168_p2 = (31'd1 + m_mid_fu_1145_p3);

assign m_mid2_fu_1218_p3 = ((exitcond_mid2_fu_1153_p3[0:0] === 1'b1) ? m_1_fu_1168_p2 : m_mid_fu_1145_p3);

assign m_mid_fu_1145_p3 = ((tmp_s_fu_1139_p2[0:0] === 1'b1) ? 31'd0 : m_reg_989);

assign newsignbit_2_fu_1377_p3 = p_Val2_7_fu_1371_p2[32'd7];

assign newsignbit_fu_1683_p3 = p_Val2_9_fu_1677_p2[32'd7];

assign overflow_1_fu_1801_p2 = (tmp_39_fu_1795_p2 & brmerge_i_fu_1789_p2);

assign overflow_fu_1495_p2 = (tmp_32_fu_1489_p2 & brmerge_i2_fu_1483_p2);

assign p_38_i1_fu_1471_p2 = (carry_fu_1391_p2 & Range1_all_ones_fu_1431_p2);

assign p_38_i_fu_1777_p2 = (carry_1_fu_1697_p2 & Range1_all_ones_1_fu_1737_p2);

assign p_41_i1_fu_1457_p2 = (tmp_31_fu_1451_p2 & Range2_all_ones_fu_1415_p2);

assign p_41_i_fu_1763_p2 = (tmp_38_fu_1757_p2 & Range2_all_ones_1_fu_1721_p2);

assign p_Result_1_fu_1421_p4 = {{input_dma_W_TDATA[25:17]}};

assign p_Result_7_fu_1711_p4 = {{input_dma_W_TDATA[51:44]}};

assign p_Result_8_fu_1727_p4 = {{input_dma_W_TDATA[51:43]}};

assign p_Result_s_fu_1405_p4 = {{input_dma_W_TDATA[25:18]}};

assign p_Val2_11_mux_fu_1849_p3 = ((brmerge_i_i_fu_1831_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_9_fu_1677_p2);

assign p_Val2_7_fu_1371_p2 = (tmp_29_fu_1367_p1 + p_Val2_s_50_fu_1301_p4);

assign p_Val2_8_51_fu_1551_p3 = ((underflow_fu_1519_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_7_fu_1371_p2);

assign p_Val2_8_fu_1603_p4 = {{input_dma_W_TDATA[42:35]}};

assign p_Val2_8_mux_fu_1543_p3 = ((brmerge_i_i2_fu_1525_p2[0:0] === 1'b1) ? 8'd127 : p_Val2_7_fu_1371_p2);

assign p_Val2_9_fu_1677_p2 = (p_Val2_8_fu_1603_p4 + tmp_36_fu_1673_p1);

assign p_Val2_s_50_fu_1301_p4 = {{input_dma_W_TDATA[16:9]}};

assign p_Val2_s_fu_1857_p3 = ((underflow_2_fu_1825_p2[0:0] === 1'b1) ? 8'd128 : p_Val2_9_fu_1677_p2);

assign p_not_i1_fu_1477_p2 = (deleted_zeros_fu_1443_p3 ^ 1'd1);

assign p_not_i_fu_1783_p2 = (deleted_zeros_1_fu_1749_p3 ^ 1'd1);

assign qb_assign_1_fu_1667_p2 = (tmp_35_fu_1661_p2 & signbit_fu_1595_p3);

assign qb_assign_fu_1361_p2 = (tmp_28_fu_1355_p2 & signbit_1_fu_1293_p3);

assign signbit_1_fu_1293_p3 = input_dma_W_TDATA[32'd25];

assign signbit_fu_1595_p3 = input_dma_W_TDATA[32'd51];

assign this_assign_1_fu_1559_p3 = ((underflow_not_fu_1537_p2[0:0] === 1'b1) ? p_Val2_8_mux_fu_1543_p3 : p_Val2_8_51_fu_1551_p3);

assign this_assign_4_1_fu_1865_p3 = ((underflow_2_not_fu_1843_p2[0:0] === 1'b1) ? p_Val2_11_mux_fu_1849_p3 : p_Val2_s_fu_1857_p3);

assign tmp3_demorgan_fu_1507_p2 = (p_38_i1_fu_1471_p2 | brmerge40_demorgan_i_1_fu_1501_p2);

assign tmp3_fu_1513_p2 = (tmp3_demorgan_fu_1507_p2 ^ 1'd1);

assign tmp4_fu_1531_p2 = (tmp_32_fu_1489_p2 | brmerge40_demorgan_i_1_fu_1501_p2);

assign tmp5_demorgan_fu_1813_p2 = (p_38_i_fu_1777_p2 | brmerge40_demorgan_i_fu_1807_p2);

assign tmp5_fu_1819_p2 = (tmp5_demorgan_fu_1813_p2 ^ 1'd1);

assign tmp6_fu_1837_p2 = (tmp_39_fu_1795_p2 | brmerge40_demorgan_i_fu_1807_p2);

assign tmp_20_fu_1331_p2 = (tmp_51_fu_1327_p1 | tmp_49_fu_1311_p3);

assign tmp_21_fu_1337_p4 = {{input_dma_W_TDATA[7:1]}};

assign tmp_22_fu_1347_p3 = {{tmp_21_fu_1337_p4}, {tmp_20_fu_1331_p2}};

assign tmp_23_fu_1174_p2 = (exitcond_mid2_fu_1153_p3 | exitcond_flatten_mid_2_fu_1118_p3);

assign tmp_24_fu_1637_p2 = (tmp_57_fu_1629_p3 | tmp_55_fu_1613_p3);

assign tmp_25_fu_1643_p4 = {{input_dma_W_TDATA[33:27]}};

assign tmp_28_fu_1355_p2 = ((tmp_22_fu_1347_p3 != 8'd0) ? 1'b1 : 1'b0);

assign tmp_29_fu_1367_p1 = qb_assign_fu_1361_p2;

assign tmp_30_fu_1385_p2 = (newsignbit_2_fu_1377_p3 ^ 1'd1);

assign tmp_31_fu_1451_p2 = (tmp_53_fu_1397_p3 ^ 1'd1);

assign tmp_32_fu_1489_p2 = (signbit_1_fu_1293_p3 ^ 1'd1);

assign tmp_33_fu_1653_p3 = {{tmp_25_fu_1643_p4}, {tmp_24_fu_1637_p2}};

assign tmp_34_fu_1180_p2 = (tmp_23_fu_1174_p2 | exitcond_flatten_fu_1068_p2);

assign tmp_35_fu_1661_p2 = ((tmp_33_fu_1653_p3 != 8'd0) ? 1'b1 : 1'b0);

assign tmp_36_fu_1673_p1 = qb_assign_1_fu_1667_p2;

assign tmp_37_fu_1691_p2 = (newsignbit_fu_1683_p3 ^ 1'd1);

assign tmp_38_fu_1757_p2 = (tmp_59_fu_1703_p3 ^ 1'd1);

assign tmp_39_fu_1795_p2 = (signbit_fu_1595_p3 ^ 1'd1);

assign tmp_42_cast_fu_1234_p1 = grp_fu_1935_p3;

assign tmp_43_fu_1194_p1 = m_1_fu_1168_p2[7:0];

assign tmp_44_fu_1198_p1 = m_reg_989[7:0];

assign tmp_45_fu_1202_p3 = ((tmp_s_fu_1139_p2[0:0] === 1'b1) ? 8'd0 : tmp_44_fu_1198_p1);

assign tmp_49_fu_1311_p3 = input_dma_W_TDATA[32'd8];

assign tmp_50_fu_1319_p3 = input_dma_W_TDATA[32'd16];

assign tmp_51_fu_1327_p1 = input_dma_W_TDATA[0:0];

assign tmp_53_fu_1397_p3 = input_dma_W_TDATA[32'd17];

assign tmp_55_fu_1613_p3 = input_dma_W_TDATA[32'd34];

assign tmp_56_fu_1621_p3 = input_dma_W_TDATA[32'd42];

assign tmp_57_fu_1629_p3 = input_dma_W_TDATA[32'd26];

assign tmp_59_fu_1703_p3 = input_dma_W_TDATA[32'd43];

assign tmp_fu_1031_p3 = {{bound4_fu_1025_p2}, {2'd0}};

assign tmp_s_fu_1139_p2 = (exitcond_flatten_mid_2_fu_1118_p3 | exitcond_flatten_fu_1068_p2);

assign tmp_t_fu_1087_p2 = (i_reg_945 ^ 3'd4);

assign tmp_t_mid1_fu_1081_p2 = ($signed(3'd5) + $signed(i_reg_945));

assign tmp_t_mid2_fu_1093_p3 = ((exitcond_flatten_fu_1068_p2[0:0] === 1'b1) ? tmp_t_mid1_fu_1081_p2 : tmp_t_fu_1087_p2);

assign underflow_2_fu_1825_p2 = (tmp5_fu_1819_p2 & signbit_fu_1595_p3);

assign underflow_2_not_fu_1843_p2 = (tmp6_fu_1837_p2 | p_38_i_fu_1777_p2);

assign underflow_fu_1519_p2 = (tmp3_fu_1513_p2 & signbit_1_fu_1293_p3);

assign underflow_not_fu_1537_p2 = (tmp4_fu_1531_p2 | p_38_i1_fu_1471_p2);

always @ (posedge ap_clk) begin
    tmp_reg_1959[1:0] <= 2'b00;
end

endmodule //LOAD_WEIGHT_DMA
