-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LOAD_WEIGHT_DMA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_dma_W_TDATA : IN STD_LOGIC_VECTOR (55 downto 0);
    input_dma_W_TVALID : IN STD_LOGIC;
    input_dma_W_TREADY : OUT STD_LOGIC;
    input_dma_W_TLAST : IN STD_LOGIC;
    WEIGHT1_0_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_0_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_0_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_0_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_0_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_1_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_1_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_1_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_1_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_2_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_2_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_2_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_2_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_3_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_3_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_3_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_3_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_4_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_4_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_4_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_4_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_5_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_5_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_5_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_5_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_6_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_6_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_6_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_6_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_0_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_0_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_0_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_1_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_1_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_2_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_2_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_3_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_3_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_4_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_4_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_5_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_5_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    WEIGHT1_7_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    WEIGHT1_7_6_V_ce0 : OUT STD_LOGIC;
    WEIGHT1_7_6_V_we0 : OUT STD_LOGIC;
    WEIGHT1_7_6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    custom_k : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of LOAD_WEIGHT_DMA is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv69_0 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv67_0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv67_7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv69_1 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv67_1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_dma_W_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_flatten4_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound_fu_1015_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_1949 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound4_fu_1025_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal bound4_reg_1954 : STD_LOGIC_VECTOR (66 downto 0);
    signal tmp_fu_1031_p3 : STD_LOGIC_VECTOR (68 downto 0);
    signal tmp_reg_1959 : STD_LOGIC_VECTOR (68 downto 0);
    signal exitcond_mid_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_reg_1964 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_reg_1970 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next4_fu_1056_p2 : STD_LOGIC_VECTOR (68 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal i_mid2_fu_1125_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_fu_1160_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_mid2_fu_1218_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal l_1_fu_1901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next_fu_1913_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_next3_fu_1927_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal indvar_flatten3_reg_934 : STD_LOGIC_VECTOR (68 downto 0);
    signal i_reg_945 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten4_reg_956 : STD_LOGIC_VECTOR (66 downto 0);
    signal j_reg_967 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_978 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_reg_989 : STD_LOGIC_VECTOR (30 downto 0);
    signal l_reg_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_cast_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal this_assign_1_fu_1559_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_t_mid2_fu_1093_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal this_assign_4_1_fu_1865_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_fu_1015_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cast_fu_1011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_1015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound4_fu_1025_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_flatten_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_t_mid1_fu_1081_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_t_fu_1087_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_1062_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid_fu_1073_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten_mid_2_fu_1118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid1_fu_1106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_1133_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_mid_fu_1145_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal exitcond_mid2_fu_1153_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_1_fu_1168_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_44_fu_1198_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_1194_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_1202_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_mid2_fu_1186_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1935_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_1327_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1311_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1337_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_fu_1293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1367_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_50_fu_1301_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_fu_1371_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_2_fu_1377_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1319_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1405_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_1421_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal carry_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i1_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i1_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i2_fu_1483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i1_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i2_fu_1525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_mux_fu_1543_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_51_fu_1551_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_1629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1643_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_24_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_fu_1595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_fu_1603_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_1673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_fu_1677_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_fu_1683_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_1711_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_1727_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal carry_1_fu_1697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1703_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_fu_1763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_1749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_1769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_1819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_1825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_1801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_1831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_not_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_mux_fu_1849_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1857_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_op_fu_1907_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten16_op_fu_1921_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal grp_fu_1935_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1935_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1935_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal bound4_fu_1025_p00 : STD_LOGIC_VECTOR (66 downto 0);

    component top_mac_muladd_5nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    top_mac_muladd_5nbkb_U1 : component top_mac_muladd_5nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_1935_p0,
        din1 => grp_fu_1935_p1,
        din2 => grp_fu_1935_p2,
        dout => grp_fu_1935_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_reg_945_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_945 <= i_mid2_fu_1125_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_945 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_934_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten3_reg_934 <= indvar_flatten_next4_fu_1056_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten3_reg_934 <= ap_const_lv69_0;
            end if; 
        end if;
    end process;

    indvar_flatten4_reg_956_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten4_reg_956 <= indvar_flatten_next3_fu_1927_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten4_reg_956 <= ap_const_lv67_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_978_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_978 <= indvar_flatten_next_fu_1913_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_978 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    j_reg_967_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_967 <= j_mid2_fu_1160_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_967 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    l_reg_1000_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                l_reg_1000 <= l_1_fu_1901_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                l_reg_1000 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    m_reg_989_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                m_reg_989 <= m_mid2_fu_1218_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_reg_989 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bound4_reg_1954 <= bound4_fu_1025_p2;
                bound_reg_1949 <= bound_fu_1015_p2;
                exitcond_flatten_mid_reg_1970 <= exitcond_flatten_mid_fu_1045_p2;
                exitcond_mid_reg_1964 <= exitcond_mid_fu_1039_p2;
                    tmp_reg_1959(68 downto 2) <= tmp_fu_1031_p3(68 downto 2);
            end if;
        end if;
    end process;
    tmp_reg_1959(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Range1_all_ones_1_fu_1737_p2 <= "1" when (p_Result_8_fu_1727_p4 = ap_const_lv9_1FF) else "0";
    Range1_all_ones_fu_1431_p2 <= "1" when (p_Result_1_fu_1421_p4 = ap_const_lv9_1FF) else "0";
    Range1_all_zeros_1_fu_1743_p2 <= "1" when (p_Result_8_fu_1727_p4 = ap_const_lv9_0) else "0";
    Range1_all_zeros_fu_1437_p2 <= "1" when (p_Result_1_fu_1421_p4 = ap_const_lv9_0) else "0";
    Range2_all_ones_1_fu_1721_p2 <= "1" when (p_Result_7_fu_1711_p4 = ap_const_lv8_FF) else "0";
    Range2_all_ones_fu_1415_p2 <= "1" when (p_Result_s_fu_1405_p4 = ap_const_lv8_FF) else "0";
    WEIGHT1_0_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_0_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_1_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_2_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_3_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_4_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_5_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_0_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_0_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_0_6_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_0_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((j_mid2_fu_1160_p3 = ap_const_lv3_7) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((j_mid2_fu_1160_p3 = ap_const_lv3_6) and (i_mid2_fu_1125_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_0_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_0_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_0_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_1_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_2_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_3_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_4_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_5_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_1_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_1_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_1_6_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_1_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((j_mid2_fu_1160_p3 = ap_const_lv3_7) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((j_mid2_fu_1160_p3 = ap_const_lv3_6) and (i_mid2_fu_1125_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_1_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_1_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_0_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_1_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_2_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_3_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_4_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_5_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_2_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_2_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_2_6_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_2_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((j_mid2_fu_1160_p3 = ap_const_lv3_7) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((j_mid2_fu_1160_p3 = ap_const_lv3_6) and (i_mid2_fu_1125_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_2_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_2_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_0_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_1_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_2_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_3_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_4_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_5_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_3_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_3_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_3_6_V_d0 <= this_assign_1_fu_1559_p3;

    WEIGHT1_3_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, i_mid2_fu_1125_p3, j_mid2_fu_1160_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and (j_mid2_fu_1160_p3 = ap_const_lv3_7) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or (not((i_mid2_fu_1125_p3 = ap_const_lv3_0)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_1)) and not((i_mid2_fu_1125_p3 = ap_const_lv3_2)) and (j_mid2_fu_1160_p3 = ap_const_lv3_6) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_3_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_3_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_0_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_1_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_2_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_3_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_4_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_5_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_4_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_4_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_4_6_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_4_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_7) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4) and (j_mid2_fu_1160_p3 = ap_const_lv3_6) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_4_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_4_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_0_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_1_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_2_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_3_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_4_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_5_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_5_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_5_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_5_6_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_5_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_7) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5) and (j_mid2_fu_1160_p3 = ap_const_lv3_6) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_5_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_5_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_0_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_1_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_2_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_3_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_4_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_5_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_6_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_6_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_6_6_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_6_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_7) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or ((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6) and (j_mid2_fu_1160_p3 = ap_const_lv3_6) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_6_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_6_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_0_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_0_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_0_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_0_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_0_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_0) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_0_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_1_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_1_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_1_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_1_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_1_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_1) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_1_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_2_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_2_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_2_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_2_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_2_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_2) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_2_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_3_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_3_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_3_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_3_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_3_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_3) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_3_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_4_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_4_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_4_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_4_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_4_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_4) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_4_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_5_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_5_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_5_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_5_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_5_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (j_mid2_fu_1160_p3 = ap_const_lv3_5) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_5_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_6_V_address0 <= tmp_42_cast_fu_1234_p1(7 - 1 downto 0);

    WEIGHT1_7_6_V_ce0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            WEIGHT1_7_6_V_ce0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    WEIGHT1_7_6_V_d0 <= this_assign_4_1_fu_1865_p3;

    WEIGHT1_7_6_V_we0_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2, j_mid2_fu_1160_p3, tmp_t_mid2_fu_1093_p3)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and (j_mid2_fu_1160_p3 = ap_const_lv3_7) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0)) or (not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_4)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_5)) and not((tmp_t_mid2_fu_1093_p3 = ap_const_lv3_6)) and (j_mid2_fu_1160_p3 = ap_const_lv3_6) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0))))) then 
            WEIGHT1_7_6_V_we0 <= ap_const_logic_1;
        else 
            WEIGHT1_7_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state2_assign_proc : process(input_dma_W_TVALID, exitcond_flatten4_fu_1051_p2)
    begin
                ap_block_state2 <= ((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound4_fu_1025_p0 <= bound4_fu_1025_p00(64 - 1 downto 0);
    bound4_fu_1025_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_1015_p2),67));
    bound4_fu_1025_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound4_fu_1025_p0) * unsigned(ap_const_lv67_7), 67));
    bound_fu_1015_p0 <= cast_fu_1011_p1(32 - 1 downto 0);
    bound_fu_1015_p1 <= cast_fu_1011_p1(32 - 1 downto 0);
    bound_fu_1015_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_1015_p0) * unsigned(bound_fu_1015_p1), 64));
    brmerge40_demorgan_i_1_fu_1501_p2 <= (newsignbit_2_fu_1377_p3 and deleted_ones_fu_1463_p3);
    brmerge40_demorgan_i_fu_1807_p2 <= (newsignbit_fu_1683_p3 and deleted_ones_1_fu_1769_p3);
    brmerge_i2_fu_1483_p2 <= (p_not_i1_fu_1477_p2 or newsignbit_2_fu_1377_p3);
    brmerge_i_fu_1789_p2 <= (p_not_i_fu_1783_p2 or newsignbit_fu_1683_p3);
    brmerge_i_i2_fu_1525_p2 <= (underflow_fu_1519_p2 or overflow_fu_1495_p2);
    brmerge_i_i_fu_1831_p2 <= (underflow_2_fu_1825_p2 or overflow_1_fu_1801_p2);
    carry_1_fu_1697_p2 <= (tmp_56_fu_1621_p3 and tmp_37_fu_1691_p2);
    carry_fu_1391_p2 <= (tmp_50_fu_1319_p3 and tmp_30_fu_1385_p2);
    cast_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(custom_k),64));
    deleted_ones_1_fu_1769_p3 <= 
        p_41_i_fu_1763_p2 when (carry_1_fu_1697_p2(0) = '1') else 
        Range1_all_ones_1_fu_1737_p2;
    deleted_ones_fu_1463_p3 <= 
        p_41_i1_fu_1457_p2 when (carry_fu_1391_p2(0) = '1') else 
        Range1_all_ones_fu_1431_p2;
    deleted_zeros_1_fu_1749_p3 <= 
        Range1_all_ones_1_fu_1737_p2 when (carry_1_fu_1697_p2(0) = '1') else 
        Range1_all_zeros_1_fu_1743_p2;
    deleted_zeros_fu_1443_p3 <= 
        Range1_all_ones_fu_1431_p2 when (carry_fu_1391_p2(0) = '1') else 
        Range1_all_zeros_fu_1437_p2;
    exitcond_flatten1_fu_1113_p2 <= "1" when (indvar_flatten_reg_978 = bound_reg_1949) else "0";
    exitcond_flatten4_fu_1051_p2 <= "1" when (indvar_flatten3_reg_934 = tmp_reg_1959) else "0";
    exitcond_flatten_fu_1068_p2 <= "1" when (indvar_flatten4_reg_956 = bound4_reg_1954) else "0";
    exitcond_flatten_mid_2_fu_1118_p3 <= 
        exitcond_flatten_mid_reg_1970 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        exitcond_flatten1_fu_1113_p2;
    exitcond_flatten_mid_fu_1045_p2 <= "1" when (bound_fu_1015_p2 = ap_const_lv64_0) else "0";
    exitcond_fu_1101_p2 <= "1" when (l_reg_1000 = custom_k) else "0";
    exitcond_mid1_fu_1106_p3 <= 
        exitcond_mid_reg_1964 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        exitcond_fu_1101_p2;
    exitcond_mid2_fu_1153_p3 <= 
        exitcond_mid_reg_1964 when (exitcond_flatten_mid_2_fu_1118_p3(0) = '1') else 
        exitcond_mid1_fu_1106_p3;
    exitcond_mid_fu_1039_p2 <= "1" when (custom_k = ap_const_lv32_0) else "0";
    grp_fu_1935_p0 <= ap_const_lv8_B(5 - 1 downto 0);
    grp_fu_1935_p1 <= 
        tmp_43_fu_1194_p1 when (exitcond_mid2_fu_1153_p3(0) = '1') else 
        tmp_45_fu_1202_p3;
    grp_fu_1935_p2 <= l_mid2_fu_1186_p3(8 - 1 downto 0);
    i_4_fu_1062_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i_reg_945));
    i_mid2_fu_1125_p3 <= 
        i_4_fu_1062_p2 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        i_reg_945;
    indvar_flatten16_op_fu_1921_p2 <= std_logic_vector(unsigned(indvar_flatten4_reg_956) + unsigned(ap_const_lv67_1));
    indvar_flatten_next3_fu_1927_p3 <= 
        ap_const_lv67_1 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        indvar_flatten16_op_fu_1921_p2;
    indvar_flatten_next4_fu_1056_p2 <= std_logic_vector(unsigned(indvar_flatten3_reg_934) + unsigned(ap_const_lv69_1));
    indvar_flatten_next_fu_1913_p3 <= 
        ap_const_lv64_1 when (tmp_s_fu_1139_p2(0) = '1') else 
        indvar_flatten_op_fu_1907_p2;
    indvar_flatten_op_fu_1907_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_978) + unsigned(ap_const_lv64_1));

    input_dma_W_TDATA_blk_n_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if (((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_dma_W_TDATA_blk_n <= input_dma_W_TVALID;
        else 
            input_dma_W_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_dma_W_TREADY_assign_proc : process(input_dma_W_TVALID, ap_CS_fsm_state2, exitcond_flatten4_fu_1051_p2)
    begin
        if ((not(((exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (input_dma_W_TVALID = ap_const_logic_0))) and (exitcond_flatten4_fu_1051_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_dma_W_TREADY <= ap_const_logic_1;
        else 
            input_dma_W_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    j_3_fu_1133_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j_mid_fu_1073_p3));
    j_mid2_fu_1160_p3 <= 
        j_3_fu_1133_p2 when (exitcond_flatten_mid_2_fu_1118_p3(0) = '1') else 
        j_mid_fu_1073_p3;
    j_mid_fu_1073_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        j_reg_967;
    l_1_fu_1901_p2 <= std_logic_vector(unsigned(l_mid2_fu_1186_p3) + unsigned(ap_const_lv32_1));
    l_mid2_fu_1186_p3 <= 
        ap_const_lv32_0 when (tmp_34_fu_1180_p2(0) = '1') else 
        l_reg_1000;
    m_1_fu_1168_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(m_mid_fu_1145_p3));
    m_mid2_fu_1218_p3 <= 
        m_1_fu_1168_p2 when (exitcond_mid2_fu_1153_p3(0) = '1') else 
        m_mid_fu_1145_p3;
    m_mid_fu_1145_p3 <= 
        ap_const_lv31_0 when (tmp_s_fu_1139_p2(0) = '1') else 
        m_reg_989;
    newsignbit_2_fu_1377_p3 <= p_Val2_7_fu_1371_p2(7 downto 7);
    newsignbit_fu_1683_p3 <= p_Val2_9_fu_1677_p2(7 downto 7);
    overflow_1_fu_1801_p2 <= (tmp_39_fu_1795_p2 and brmerge_i_fu_1789_p2);
    overflow_fu_1495_p2 <= (tmp_32_fu_1489_p2 and brmerge_i2_fu_1483_p2);
    p_38_i1_fu_1471_p2 <= (carry_fu_1391_p2 and Range1_all_ones_fu_1431_p2);
    p_38_i_fu_1777_p2 <= (carry_1_fu_1697_p2 and Range1_all_ones_1_fu_1737_p2);
    p_41_i1_fu_1457_p2 <= (tmp_31_fu_1451_p2 and Range2_all_ones_fu_1415_p2);
    p_41_i_fu_1763_p2 <= (tmp_38_fu_1757_p2 and Range2_all_ones_1_fu_1721_p2);
    p_Result_1_fu_1421_p4 <= input_dma_W_TDATA(25 downto 17);
    p_Result_7_fu_1711_p4 <= input_dma_W_TDATA(51 downto 44);
    p_Result_8_fu_1727_p4 <= input_dma_W_TDATA(51 downto 43);
    p_Result_s_fu_1405_p4 <= input_dma_W_TDATA(25 downto 18);
    p_Val2_11_mux_fu_1849_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i_fu_1831_p2(0) = '1') else 
        p_Val2_9_fu_1677_p2;
    p_Val2_7_fu_1371_p2 <= std_logic_vector(unsigned(tmp_29_fu_1367_p1) + unsigned(p_Val2_s_50_fu_1301_p4));
    p_Val2_8_51_fu_1551_p3 <= 
        ap_const_lv8_80 when (underflow_fu_1519_p2(0) = '1') else 
        p_Val2_7_fu_1371_p2;
    p_Val2_8_fu_1603_p4 <= input_dma_W_TDATA(42 downto 35);
    p_Val2_8_mux_fu_1543_p3 <= 
        ap_const_lv8_7F when (brmerge_i_i2_fu_1525_p2(0) = '1') else 
        p_Val2_7_fu_1371_p2;
    p_Val2_9_fu_1677_p2 <= std_logic_vector(unsigned(p_Val2_8_fu_1603_p4) + unsigned(tmp_36_fu_1673_p1));
    p_Val2_s_50_fu_1301_p4 <= input_dma_W_TDATA(16 downto 9);
    p_Val2_s_fu_1857_p3 <= 
        ap_const_lv8_80 when (underflow_2_fu_1825_p2(0) = '1') else 
        p_Val2_9_fu_1677_p2;
    p_not_i1_fu_1477_p2 <= (deleted_zeros_fu_1443_p3 xor ap_const_lv1_1);
    p_not_i_fu_1783_p2 <= (deleted_zeros_1_fu_1749_p3 xor ap_const_lv1_1);
    qb_assign_1_fu_1667_p2 <= (tmp_35_fu_1661_p2 and signbit_fu_1595_p3);
    qb_assign_fu_1361_p2 <= (tmp_28_fu_1355_p2 and signbit_1_fu_1293_p3);
    signbit_1_fu_1293_p3 <= input_dma_W_TDATA(25 downto 25);
    signbit_fu_1595_p3 <= input_dma_W_TDATA(51 downto 51);
    this_assign_1_fu_1559_p3 <= 
        p_Val2_8_mux_fu_1543_p3 when (underflow_not_fu_1537_p2(0) = '1') else 
        p_Val2_8_51_fu_1551_p3;
    this_assign_4_1_fu_1865_p3 <= 
        p_Val2_11_mux_fu_1849_p3 when (underflow_2_not_fu_1843_p2(0) = '1') else 
        p_Val2_s_fu_1857_p3;
    tmp3_demorgan_fu_1507_p2 <= (p_38_i1_fu_1471_p2 or brmerge40_demorgan_i_1_fu_1501_p2);
    tmp3_fu_1513_p2 <= (tmp3_demorgan_fu_1507_p2 xor ap_const_lv1_1);
    tmp4_fu_1531_p2 <= (tmp_32_fu_1489_p2 or brmerge40_demorgan_i_1_fu_1501_p2);
    tmp5_demorgan_fu_1813_p2 <= (p_38_i_fu_1777_p2 or brmerge40_demorgan_i_fu_1807_p2);
    tmp5_fu_1819_p2 <= (tmp5_demorgan_fu_1813_p2 xor ap_const_lv1_1);
    tmp6_fu_1837_p2 <= (tmp_39_fu_1795_p2 or brmerge40_demorgan_i_fu_1807_p2);
    tmp_20_fu_1331_p2 <= (tmp_51_fu_1327_p1 or tmp_49_fu_1311_p3);
    tmp_21_fu_1337_p4 <= input_dma_W_TDATA(7 downto 1);
    tmp_22_fu_1347_p3 <= (tmp_21_fu_1337_p4 & tmp_20_fu_1331_p2);
    tmp_23_fu_1174_p2 <= (exitcond_mid2_fu_1153_p3 or exitcond_flatten_mid_2_fu_1118_p3);
    tmp_24_fu_1637_p2 <= (tmp_57_fu_1629_p3 or tmp_55_fu_1613_p3);
    tmp_25_fu_1643_p4 <= input_dma_W_TDATA(33 downto 27);
    tmp_28_fu_1355_p2 <= "0" when (tmp_22_fu_1347_p3 = ap_const_lv8_0) else "1";
    tmp_29_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_fu_1361_p2),8));
    tmp_30_fu_1385_p2 <= (newsignbit_2_fu_1377_p3 xor ap_const_lv1_1);
    tmp_31_fu_1451_p2 <= (tmp_53_fu_1397_p3 xor ap_const_lv1_1);
    tmp_32_fu_1489_p2 <= (signbit_1_fu_1293_p3 xor ap_const_lv1_1);
    tmp_33_fu_1653_p3 <= (tmp_25_fu_1643_p4 & tmp_24_fu_1637_p2);
    tmp_34_fu_1180_p2 <= (tmp_23_fu_1174_p2 or exitcond_flatten_fu_1068_p2);
    tmp_35_fu_1661_p2 <= "0" when (tmp_33_fu_1653_p3 = ap_const_lv8_0) else "1";
    tmp_36_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_1_fu_1667_p2),8));
    tmp_37_fu_1691_p2 <= (newsignbit_fu_1683_p3 xor ap_const_lv1_1);
    tmp_38_fu_1757_p2 <= (tmp_59_fu_1703_p3 xor ap_const_lv1_1);
    tmp_39_fu_1795_p2 <= (signbit_fu_1595_p3 xor ap_const_lv1_1);
        tmp_42_cast_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1935_p3),64));

    tmp_43_fu_1194_p1 <= m_1_fu_1168_p2(8 - 1 downto 0);
    tmp_44_fu_1198_p1 <= m_reg_989(8 - 1 downto 0);
    tmp_45_fu_1202_p3 <= 
        ap_const_lv8_0 when (tmp_s_fu_1139_p2(0) = '1') else 
        tmp_44_fu_1198_p1;
    tmp_49_fu_1311_p3 <= input_dma_W_TDATA(8 downto 8);
    tmp_50_fu_1319_p3 <= input_dma_W_TDATA(16 downto 16);
    tmp_51_fu_1327_p1 <= input_dma_W_TDATA(1 - 1 downto 0);
    tmp_53_fu_1397_p3 <= input_dma_W_TDATA(17 downto 17);
    tmp_55_fu_1613_p3 <= input_dma_W_TDATA(34 downto 34);
    tmp_56_fu_1621_p3 <= input_dma_W_TDATA(42 downto 42);
    tmp_57_fu_1629_p3 <= input_dma_W_TDATA(26 downto 26);
    tmp_59_fu_1703_p3 <= input_dma_W_TDATA(43 downto 43);
    tmp_fu_1031_p3 <= (bound4_fu_1025_p2 & ap_const_lv2_0);
    tmp_s_fu_1139_p2 <= (exitcond_flatten_mid_2_fu_1118_p3 or exitcond_flatten_fu_1068_p2);
    tmp_t_fu_1087_p2 <= (i_reg_945 xor ap_const_lv3_4);
    tmp_t_mid1_fu_1081_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(i_reg_945));
    tmp_t_mid2_fu_1093_p3 <= 
        tmp_t_mid1_fu_1081_p2 when (exitcond_flatten_fu_1068_p2(0) = '1') else 
        tmp_t_fu_1087_p2;
    underflow_2_fu_1825_p2 <= (tmp5_fu_1819_p2 and signbit_fu_1595_p3);
    underflow_2_not_fu_1843_p2 <= (tmp6_fu_1837_p2 or p_38_i_fu_1777_p2);
    underflow_fu_1519_p2 <= (tmp3_fu_1513_p2 and signbit_1_fu_1293_p3);
    underflow_not_fu_1537_p2 <= (tmp4_fu_1531_p2 or p_38_i1_fu_1471_p2);
end behav;
