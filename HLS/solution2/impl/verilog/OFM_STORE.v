// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module OFM_STORE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_dma_O_TDATA,
        output_dma_O_TVALID,
        output_dma_O_TREADY,
        output_dma_O_TLAST,
        input_dma_B_TDATA,
        input_dma_B_TVALID,
        input_dma_B_TREADY,
        input_dma_B_TLAST,
        OFM_0_address0,
        OFM_0_ce0,
        OFM_0_q0,
        OFM_0_address1,
        OFM_0_ce1,
        OFM_0_we1,
        OFM_0_d1,
        OFM_1_address0,
        OFM_1_ce0,
        OFM_1_q0,
        OFM_1_address1,
        OFM_1_ce1,
        OFM_1_we1,
        OFM_1_d1,
        OFM_2_address0,
        OFM_2_ce0,
        OFM_2_q0,
        OFM_2_address1,
        OFM_2_ce1,
        OFM_2_we1,
        OFM_2_d1,
        OFM_3_address0,
        OFM_3_ce0,
        OFM_3_q0,
        OFM_3_address1,
        OFM_3_ce1,
        OFM_3_we1,
        OFM_3_d1,
        OFM_4_address0,
        OFM_4_ce0,
        OFM_4_q0,
        OFM_4_address1,
        OFM_4_ce1,
        OFM_4_we1,
        OFM_4_d1,
        OFM_5_address0,
        OFM_5_ce0,
        OFM_5_q0,
        OFM_5_address1,
        OFM_5_ce1,
        OFM_5_we1,
        OFM_5_d1,
        OFM_6_address0,
        OFM_6_ce0,
        OFM_6_q0,
        OFM_6_address1,
        OFM_6_ce1,
        OFM_6_we1,
        OFM_6_d1,
        OFM_7_address0,
        OFM_7_ce0,
        OFM_7_q0,
        OFM_7_address1,
        OFM_7_ce1,
        OFM_7_we1,
        OFM_7_d1,
        OFM_8_address0,
        OFM_8_ce0,
        OFM_8_q0,
        OFM_8_address1,
        OFM_8_ce1,
        OFM_8_we1,
        OFM_8_d1,
        OFM_9_address0,
        OFM_9_ce0,
        OFM_9_q0,
        OFM_9_address1,
        OFM_9_ce1,
        OFM_9_we1,
        OFM_9_d1,
        OFM_10_address0,
        OFM_10_ce0,
        OFM_10_q0,
        OFM_10_address1,
        OFM_10_ce1,
        OFM_10_we1,
        OFM_10_d1,
        OFM_11_address0,
        OFM_11_ce0,
        OFM_11_q0,
        OFM_11_address1,
        OFM_11_ce1,
        OFM_11_we1,
        OFM_11_d1,
        OFM_12_address0,
        OFM_12_ce0,
        OFM_12_q0,
        OFM_12_address1,
        OFM_12_ce1,
        OFM_12_we1,
        OFM_12_d1,
        OFM_13_address0,
        OFM_13_ce0,
        OFM_13_q0,
        OFM_13_address1,
        OFM_13_ce1,
        OFM_13_we1,
        OFM_13_d1,
        OFM_14_address0,
        OFM_14_ce0,
        OFM_14_q0,
        OFM_14_address1,
        OFM_14_ce1,
        OFM_14_we1,
        OFM_14_d1,
        OFM_15_address0,
        OFM_15_ce0,
        OFM_15_q0,
        OFM_15_address1,
        OFM_15_ce1,
        OFM_15_we1,
        OFM_15_d1,
        OFM_16_address0,
        OFM_16_ce0,
        OFM_16_q0,
        OFM_16_address1,
        OFM_16_ce1,
        OFM_16_we1,
        OFM_16_d1,
        OFM_17_address0,
        OFM_17_ce0,
        OFM_17_q0,
        OFM_17_address1,
        OFM_17_ce1,
        OFM_17_we1,
        OFM_17_d1,
        OFM_18_address0,
        OFM_18_ce0,
        OFM_18_q0,
        OFM_18_address1,
        OFM_18_ce1,
        OFM_18_we1,
        OFM_18_d1,
        OFM_19_address0,
        OFM_19_ce0,
        OFM_19_q0,
        OFM_19_address1,
        OFM_19_ce1,
        OFM_19_we1,
        OFM_19_d1,
        OFM_20_address0,
        OFM_20_ce0,
        OFM_20_q0,
        OFM_20_address1,
        OFM_20_ce1,
        OFM_20_we1,
        OFM_20_d1,
        OFM_21_address0,
        OFM_21_ce0,
        OFM_21_q0,
        OFM_21_address1,
        OFM_21_ce1,
        OFM_21_we1,
        OFM_21_d1,
        OFM_22_address0,
        OFM_22_ce0,
        OFM_22_q0,
        OFM_22_address1,
        OFM_22_ce1,
        OFM_22_we1,
        OFM_22_d1,
        OFM_23_address0,
        OFM_23_ce0,
        OFM_23_q0,
        OFM_23_address1,
        OFM_23_ce1,
        OFM_23_we1,
        OFM_23_d1,
        OFM_24_address0,
        OFM_24_ce0,
        OFM_24_q0,
        OFM_24_address1,
        OFM_24_ce1,
        OFM_24_we1,
        OFM_24_d1,
        OFM_25_address0,
        OFM_25_ce0,
        OFM_25_q0,
        OFM_25_address1,
        OFM_25_ce1,
        OFM_25_we1,
        OFM_25_d1,
        OFM_26_address0,
        OFM_26_ce0,
        OFM_26_q0,
        OFM_26_address1,
        OFM_26_ce1,
        OFM_26_we1,
        OFM_26_d1,
        OFM_27_address0,
        OFM_27_ce0,
        OFM_27_q0,
        OFM_27_address1,
        OFM_27_ce1,
        OFM_27_we1,
        OFM_27_d1,
        OFM_28_address0,
        OFM_28_ce0,
        OFM_28_q0,
        OFM_28_address1,
        OFM_28_ce1,
        OFM_28_we1,
        OFM_28_d1,
        OFM_29_address0,
        OFM_29_ce0,
        OFM_29_q0,
        OFM_29_address1,
        OFM_29_ce1,
        OFM_29_we1,
        OFM_29_d1,
        OFM_30_address0,
        OFM_30_ce0,
        OFM_30_q0,
        OFM_30_address1,
        OFM_30_ce1,
        OFM_30_we1,
        OFM_30_d1,
        OFM_31_address0,
        OFM_31_ce0,
        OFM_31_q0,
        OFM_31_address1,
        OFM_31_ce1,
        OFM_31_we1,
        OFM_31_d1,
        OFM_32_address0,
        OFM_32_ce0,
        OFM_32_q0,
        OFM_32_address1,
        OFM_32_ce1,
        OFM_32_we1,
        OFM_32_d1,
        OFM_33_address0,
        OFM_33_ce0,
        OFM_33_q0,
        OFM_33_address1,
        OFM_33_ce1,
        OFM_33_we1,
        OFM_33_d1,
        OFM_34_address0,
        OFM_34_ce0,
        OFM_34_q0,
        OFM_34_address1,
        OFM_34_ce1,
        OFM_34_we1,
        OFM_34_d1,
        OFM_35_address0,
        OFM_35_ce0,
        OFM_35_q0,
        OFM_35_address1,
        OFM_35_ce1,
        OFM_35_we1,
        OFM_35_d1,
        OFM_36_address0,
        OFM_36_ce0,
        OFM_36_q0,
        OFM_36_address1,
        OFM_36_ce1,
        OFM_36_we1,
        OFM_36_d1,
        OFM_37_address0,
        OFM_37_ce0,
        OFM_37_q0,
        OFM_37_address1,
        OFM_37_ce1,
        OFM_37_we1,
        OFM_37_d1,
        OFM_38_address0,
        OFM_38_ce0,
        OFM_38_q0,
        OFM_38_address1,
        OFM_38_ce1,
        OFM_38_we1,
        OFM_38_d1,
        OFM_39_address0,
        OFM_39_ce0,
        OFM_39_q0,
        OFM_39_address1,
        OFM_39_ce1,
        OFM_39_we1,
        OFM_39_d1,
        OFM_40_address0,
        OFM_40_ce0,
        OFM_40_q0,
        OFM_40_address1,
        OFM_40_ce1,
        OFM_40_we1,
        OFM_40_d1,
        OFM_41_address0,
        OFM_41_ce0,
        OFM_41_q0,
        OFM_41_address1,
        OFM_41_ce1,
        OFM_41_we1,
        OFM_41_d1,
        OFM_42_address0,
        OFM_42_ce0,
        OFM_42_q0,
        OFM_42_address1,
        OFM_42_ce1,
        OFM_42_we1,
        OFM_42_d1,
        OFM_43_address0,
        OFM_43_ce0,
        OFM_43_q0,
        OFM_43_address1,
        OFM_43_ce1,
        OFM_43_we1,
        OFM_43_d1,
        OFM_44_address0,
        OFM_44_ce0,
        OFM_44_q0,
        OFM_44_address1,
        OFM_44_ce1,
        OFM_44_we1,
        OFM_44_d1,
        OFM_45_address0,
        OFM_45_ce0,
        OFM_45_q0,
        OFM_45_address1,
        OFM_45_ce1,
        OFM_45_we1,
        OFM_45_d1,
        OFM_46_address0,
        OFM_46_ce0,
        OFM_46_q0,
        OFM_46_address1,
        OFM_46_ce1,
        OFM_46_we1,
        OFM_46_d1,
        OFM_47_address0,
        OFM_47_ce0,
        OFM_47_q0,
        OFM_47_address1,
        OFM_47_ce1,
        OFM_47_we1,
        OFM_47_d1,
        OFM_48_address0,
        OFM_48_ce0,
        OFM_48_q0,
        OFM_48_address1,
        OFM_48_ce1,
        OFM_48_we1,
        OFM_48_d1,
        OFM_49_address0,
        OFM_49_ce0,
        OFM_49_q0,
        OFM_49_address1,
        OFM_49_ce1,
        OFM_49_we1,
        OFM_49_d1,
        OFM_50_address0,
        OFM_50_ce0,
        OFM_50_q0,
        OFM_50_address1,
        OFM_50_ce1,
        OFM_50_we1,
        OFM_50_d1,
        OFM_51_address0,
        OFM_51_ce0,
        OFM_51_q0,
        OFM_51_address1,
        OFM_51_ce1,
        OFM_51_we1,
        OFM_51_d1,
        OFM_52_address0,
        OFM_52_ce0,
        OFM_52_q0,
        OFM_52_address1,
        OFM_52_ce1,
        OFM_52_we1,
        OFM_52_d1,
        OFM_53_address0,
        OFM_53_ce0,
        OFM_53_q0,
        OFM_53_address1,
        OFM_53_ce1,
        OFM_53_we1,
        OFM_53_d1,
        OFM_54_address0,
        OFM_54_ce0,
        OFM_54_q0,
        OFM_54_address1,
        OFM_54_ce1,
        OFM_54_we1,
        OFM_54_d1,
        OFM_55_address0,
        OFM_55_ce0,
        OFM_55_q0,
        OFM_55_address1,
        OFM_55_ce1,
        OFM_55_we1,
        OFM_55_d1,
        OFM_56_address0,
        OFM_56_ce0,
        OFM_56_q0,
        OFM_56_address1,
        OFM_56_ce1,
        OFM_56_we1,
        OFM_56_d1,
        OFM_57_address0,
        OFM_57_ce0,
        OFM_57_q0,
        OFM_57_address1,
        OFM_57_ce1,
        OFM_57_we1,
        OFM_57_d1,
        OFM_58_address0,
        OFM_58_ce0,
        OFM_58_q0,
        OFM_58_address1,
        OFM_58_ce1,
        OFM_58_we1,
        OFM_58_d1,
        OFM_59_address0,
        OFM_59_ce0,
        OFM_59_q0,
        OFM_59_address1,
        OFM_59_ce1,
        OFM_59_we1,
        OFM_59_d1,
        OFM_60_address0,
        OFM_60_ce0,
        OFM_60_q0,
        OFM_60_address1,
        OFM_60_ce1,
        OFM_60_we1,
        OFM_60_d1,
        OFM_61_address0,
        OFM_61_ce0,
        OFM_61_q0,
        OFM_61_address1,
        OFM_61_ce1,
        OFM_61_we1,
        OFM_61_d1,
        OFM_62_address0,
        OFM_62_ce0,
        OFM_62_q0,
        OFM_62_address1,
        OFM_62_ce1,
        OFM_62_we1,
        OFM_62_d1,
        OFM_63_address0,
        OFM_63_ce0,
        OFM_63_q0,
        OFM_63_address1,
        OFM_63_ce1,
        OFM_63_we1,
        OFM_63_d1,
        BIAS_address0,
        BIAS_ce0,
        BIAS_we0,
        BIAS_d0,
        BIAS_q0,
        custom_Tr,
        custom_Tc
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_pp1_stage0 = 7'd8;
parameter    ap_ST_fsm_state10 = 7'd16;
parameter    ap_ST_fsm_state11 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] output_dma_O_TDATA;
output   output_dma_O_TVALID;
input   output_dma_O_TREADY;
output   output_dma_O_TLAST;
input  [31:0] input_dma_B_TDATA;
input   input_dma_B_TVALID;
output   input_dma_B_TREADY;
input   input_dma_B_TLAST;
output  [7:0] OFM_0_address0;
output   OFM_0_ce0;
input  [31:0] OFM_0_q0;
output  [7:0] OFM_0_address1;
output   OFM_0_ce1;
output   OFM_0_we1;
output  [31:0] OFM_0_d1;
output  [7:0] OFM_1_address0;
output   OFM_1_ce0;
input  [31:0] OFM_1_q0;
output  [7:0] OFM_1_address1;
output   OFM_1_ce1;
output   OFM_1_we1;
output  [31:0] OFM_1_d1;
output  [7:0] OFM_2_address0;
output   OFM_2_ce0;
input  [31:0] OFM_2_q0;
output  [7:0] OFM_2_address1;
output   OFM_2_ce1;
output   OFM_2_we1;
output  [31:0] OFM_2_d1;
output  [7:0] OFM_3_address0;
output   OFM_3_ce0;
input  [31:0] OFM_3_q0;
output  [7:0] OFM_3_address1;
output   OFM_3_ce1;
output   OFM_3_we1;
output  [31:0] OFM_3_d1;
output  [7:0] OFM_4_address0;
output   OFM_4_ce0;
input  [31:0] OFM_4_q0;
output  [7:0] OFM_4_address1;
output   OFM_4_ce1;
output   OFM_4_we1;
output  [31:0] OFM_4_d1;
output  [7:0] OFM_5_address0;
output   OFM_5_ce0;
input  [31:0] OFM_5_q0;
output  [7:0] OFM_5_address1;
output   OFM_5_ce1;
output   OFM_5_we1;
output  [31:0] OFM_5_d1;
output  [7:0] OFM_6_address0;
output   OFM_6_ce0;
input  [31:0] OFM_6_q0;
output  [7:0] OFM_6_address1;
output   OFM_6_ce1;
output   OFM_6_we1;
output  [31:0] OFM_6_d1;
output  [7:0] OFM_7_address0;
output   OFM_7_ce0;
input  [31:0] OFM_7_q0;
output  [7:0] OFM_7_address1;
output   OFM_7_ce1;
output   OFM_7_we1;
output  [31:0] OFM_7_d1;
output  [7:0] OFM_8_address0;
output   OFM_8_ce0;
input  [31:0] OFM_8_q0;
output  [7:0] OFM_8_address1;
output   OFM_8_ce1;
output   OFM_8_we1;
output  [31:0] OFM_8_d1;
output  [7:0] OFM_9_address0;
output   OFM_9_ce0;
input  [31:0] OFM_9_q0;
output  [7:0] OFM_9_address1;
output   OFM_9_ce1;
output   OFM_9_we1;
output  [31:0] OFM_9_d1;
output  [7:0] OFM_10_address0;
output   OFM_10_ce0;
input  [31:0] OFM_10_q0;
output  [7:0] OFM_10_address1;
output   OFM_10_ce1;
output   OFM_10_we1;
output  [31:0] OFM_10_d1;
output  [7:0] OFM_11_address0;
output   OFM_11_ce0;
input  [31:0] OFM_11_q0;
output  [7:0] OFM_11_address1;
output   OFM_11_ce1;
output   OFM_11_we1;
output  [31:0] OFM_11_d1;
output  [7:0] OFM_12_address0;
output   OFM_12_ce0;
input  [31:0] OFM_12_q0;
output  [7:0] OFM_12_address1;
output   OFM_12_ce1;
output   OFM_12_we1;
output  [31:0] OFM_12_d1;
output  [7:0] OFM_13_address0;
output   OFM_13_ce0;
input  [31:0] OFM_13_q0;
output  [7:0] OFM_13_address1;
output   OFM_13_ce1;
output   OFM_13_we1;
output  [31:0] OFM_13_d1;
output  [7:0] OFM_14_address0;
output   OFM_14_ce0;
input  [31:0] OFM_14_q0;
output  [7:0] OFM_14_address1;
output   OFM_14_ce1;
output   OFM_14_we1;
output  [31:0] OFM_14_d1;
output  [7:0] OFM_15_address0;
output   OFM_15_ce0;
input  [31:0] OFM_15_q0;
output  [7:0] OFM_15_address1;
output   OFM_15_ce1;
output   OFM_15_we1;
output  [31:0] OFM_15_d1;
output  [7:0] OFM_16_address0;
output   OFM_16_ce0;
input  [31:0] OFM_16_q0;
output  [7:0] OFM_16_address1;
output   OFM_16_ce1;
output   OFM_16_we1;
output  [31:0] OFM_16_d1;
output  [7:0] OFM_17_address0;
output   OFM_17_ce0;
input  [31:0] OFM_17_q0;
output  [7:0] OFM_17_address1;
output   OFM_17_ce1;
output   OFM_17_we1;
output  [31:0] OFM_17_d1;
output  [7:0] OFM_18_address0;
output   OFM_18_ce0;
input  [31:0] OFM_18_q0;
output  [7:0] OFM_18_address1;
output   OFM_18_ce1;
output   OFM_18_we1;
output  [31:0] OFM_18_d1;
output  [7:0] OFM_19_address0;
output   OFM_19_ce0;
input  [31:0] OFM_19_q0;
output  [7:0] OFM_19_address1;
output   OFM_19_ce1;
output   OFM_19_we1;
output  [31:0] OFM_19_d1;
output  [7:0] OFM_20_address0;
output   OFM_20_ce0;
input  [31:0] OFM_20_q0;
output  [7:0] OFM_20_address1;
output   OFM_20_ce1;
output   OFM_20_we1;
output  [31:0] OFM_20_d1;
output  [7:0] OFM_21_address0;
output   OFM_21_ce0;
input  [31:0] OFM_21_q0;
output  [7:0] OFM_21_address1;
output   OFM_21_ce1;
output   OFM_21_we1;
output  [31:0] OFM_21_d1;
output  [7:0] OFM_22_address0;
output   OFM_22_ce0;
input  [31:0] OFM_22_q0;
output  [7:0] OFM_22_address1;
output   OFM_22_ce1;
output   OFM_22_we1;
output  [31:0] OFM_22_d1;
output  [7:0] OFM_23_address0;
output   OFM_23_ce0;
input  [31:0] OFM_23_q0;
output  [7:0] OFM_23_address1;
output   OFM_23_ce1;
output   OFM_23_we1;
output  [31:0] OFM_23_d1;
output  [7:0] OFM_24_address0;
output   OFM_24_ce0;
input  [31:0] OFM_24_q0;
output  [7:0] OFM_24_address1;
output   OFM_24_ce1;
output   OFM_24_we1;
output  [31:0] OFM_24_d1;
output  [7:0] OFM_25_address0;
output   OFM_25_ce0;
input  [31:0] OFM_25_q0;
output  [7:0] OFM_25_address1;
output   OFM_25_ce1;
output   OFM_25_we1;
output  [31:0] OFM_25_d1;
output  [7:0] OFM_26_address0;
output   OFM_26_ce0;
input  [31:0] OFM_26_q0;
output  [7:0] OFM_26_address1;
output   OFM_26_ce1;
output   OFM_26_we1;
output  [31:0] OFM_26_d1;
output  [7:0] OFM_27_address0;
output   OFM_27_ce0;
input  [31:0] OFM_27_q0;
output  [7:0] OFM_27_address1;
output   OFM_27_ce1;
output   OFM_27_we1;
output  [31:0] OFM_27_d1;
output  [7:0] OFM_28_address0;
output   OFM_28_ce0;
input  [31:0] OFM_28_q0;
output  [7:0] OFM_28_address1;
output   OFM_28_ce1;
output   OFM_28_we1;
output  [31:0] OFM_28_d1;
output  [7:0] OFM_29_address0;
output   OFM_29_ce0;
input  [31:0] OFM_29_q0;
output  [7:0] OFM_29_address1;
output   OFM_29_ce1;
output   OFM_29_we1;
output  [31:0] OFM_29_d1;
output  [7:0] OFM_30_address0;
output   OFM_30_ce0;
input  [31:0] OFM_30_q0;
output  [7:0] OFM_30_address1;
output   OFM_30_ce1;
output   OFM_30_we1;
output  [31:0] OFM_30_d1;
output  [7:0] OFM_31_address0;
output   OFM_31_ce0;
input  [31:0] OFM_31_q0;
output  [7:0] OFM_31_address1;
output   OFM_31_ce1;
output   OFM_31_we1;
output  [31:0] OFM_31_d1;
output  [7:0] OFM_32_address0;
output   OFM_32_ce0;
input  [31:0] OFM_32_q0;
output  [7:0] OFM_32_address1;
output   OFM_32_ce1;
output   OFM_32_we1;
output  [31:0] OFM_32_d1;
output  [7:0] OFM_33_address0;
output   OFM_33_ce0;
input  [31:0] OFM_33_q0;
output  [7:0] OFM_33_address1;
output   OFM_33_ce1;
output   OFM_33_we1;
output  [31:0] OFM_33_d1;
output  [7:0] OFM_34_address0;
output   OFM_34_ce0;
input  [31:0] OFM_34_q0;
output  [7:0] OFM_34_address1;
output   OFM_34_ce1;
output   OFM_34_we1;
output  [31:0] OFM_34_d1;
output  [7:0] OFM_35_address0;
output   OFM_35_ce0;
input  [31:0] OFM_35_q0;
output  [7:0] OFM_35_address1;
output   OFM_35_ce1;
output   OFM_35_we1;
output  [31:0] OFM_35_d1;
output  [7:0] OFM_36_address0;
output   OFM_36_ce0;
input  [31:0] OFM_36_q0;
output  [7:0] OFM_36_address1;
output   OFM_36_ce1;
output   OFM_36_we1;
output  [31:0] OFM_36_d1;
output  [7:0] OFM_37_address0;
output   OFM_37_ce0;
input  [31:0] OFM_37_q0;
output  [7:0] OFM_37_address1;
output   OFM_37_ce1;
output   OFM_37_we1;
output  [31:0] OFM_37_d1;
output  [7:0] OFM_38_address0;
output   OFM_38_ce0;
input  [31:0] OFM_38_q0;
output  [7:0] OFM_38_address1;
output   OFM_38_ce1;
output   OFM_38_we1;
output  [31:0] OFM_38_d1;
output  [7:0] OFM_39_address0;
output   OFM_39_ce0;
input  [31:0] OFM_39_q0;
output  [7:0] OFM_39_address1;
output   OFM_39_ce1;
output   OFM_39_we1;
output  [31:0] OFM_39_d1;
output  [7:0] OFM_40_address0;
output   OFM_40_ce0;
input  [31:0] OFM_40_q0;
output  [7:0] OFM_40_address1;
output   OFM_40_ce1;
output   OFM_40_we1;
output  [31:0] OFM_40_d1;
output  [7:0] OFM_41_address0;
output   OFM_41_ce0;
input  [31:0] OFM_41_q0;
output  [7:0] OFM_41_address1;
output   OFM_41_ce1;
output   OFM_41_we1;
output  [31:0] OFM_41_d1;
output  [7:0] OFM_42_address0;
output   OFM_42_ce0;
input  [31:0] OFM_42_q0;
output  [7:0] OFM_42_address1;
output   OFM_42_ce1;
output   OFM_42_we1;
output  [31:0] OFM_42_d1;
output  [7:0] OFM_43_address0;
output   OFM_43_ce0;
input  [31:0] OFM_43_q0;
output  [7:0] OFM_43_address1;
output   OFM_43_ce1;
output   OFM_43_we1;
output  [31:0] OFM_43_d1;
output  [7:0] OFM_44_address0;
output   OFM_44_ce0;
input  [31:0] OFM_44_q0;
output  [7:0] OFM_44_address1;
output   OFM_44_ce1;
output   OFM_44_we1;
output  [31:0] OFM_44_d1;
output  [7:0] OFM_45_address0;
output   OFM_45_ce0;
input  [31:0] OFM_45_q0;
output  [7:0] OFM_45_address1;
output   OFM_45_ce1;
output   OFM_45_we1;
output  [31:0] OFM_45_d1;
output  [7:0] OFM_46_address0;
output   OFM_46_ce0;
input  [31:0] OFM_46_q0;
output  [7:0] OFM_46_address1;
output   OFM_46_ce1;
output   OFM_46_we1;
output  [31:0] OFM_46_d1;
output  [7:0] OFM_47_address0;
output   OFM_47_ce0;
input  [31:0] OFM_47_q0;
output  [7:0] OFM_47_address1;
output   OFM_47_ce1;
output   OFM_47_we1;
output  [31:0] OFM_47_d1;
output  [7:0] OFM_48_address0;
output   OFM_48_ce0;
input  [31:0] OFM_48_q0;
output  [7:0] OFM_48_address1;
output   OFM_48_ce1;
output   OFM_48_we1;
output  [31:0] OFM_48_d1;
output  [7:0] OFM_49_address0;
output   OFM_49_ce0;
input  [31:0] OFM_49_q0;
output  [7:0] OFM_49_address1;
output   OFM_49_ce1;
output   OFM_49_we1;
output  [31:0] OFM_49_d1;
output  [7:0] OFM_50_address0;
output   OFM_50_ce0;
input  [31:0] OFM_50_q0;
output  [7:0] OFM_50_address1;
output   OFM_50_ce1;
output   OFM_50_we1;
output  [31:0] OFM_50_d1;
output  [7:0] OFM_51_address0;
output   OFM_51_ce0;
input  [31:0] OFM_51_q0;
output  [7:0] OFM_51_address1;
output   OFM_51_ce1;
output   OFM_51_we1;
output  [31:0] OFM_51_d1;
output  [7:0] OFM_52_address0;
output   OFM_52_ce0;
input  [31:0] OFM_52_q0;
output  [7:0] OFM_52_address1;
output   OFM_52_ce1;
output   OFM_52_we1;
output  [31:0] OFM_52_d1;
output  [7:0] OFM_53_address0;
output   OFM_53_ce0;
input  [31:0] OFM_53_q0;
output  [7:0] OFM_53_address1;
output   OFM_53_ce1;
output   OFM_53_we1;
output  [31:0] OFM_53_d1;
output  [7:0] OFM_54_address0;
output   OFM_54_ce0;
input  [31:0] OFM_54_q0;
output  [7:0] OFM_54_address1;
output   OFM_54_ce1;
output   OFM_54_we1;
output  [31:0] OFM_54_d1;
output  [7:0] OFM_55_address0;
output   OFM_55_ce0;
input  [31:0] OFM_55_q0;
output  [7:0] OFM_55_address1;
output   OFM_55_ce1;
output   OFM_55_we1;
output  [31:0] OFM_55_d1;
output  [7:0] OFM_56_address0;
output   OFM_56_ce0;
input  [31:0] OFM_56_q0;
output  [7:0] OFM_56_address1;
output   OFM_56_ce1;
output   OFM_56_we1;
output  [31:0] OFM_56_d1;
output  [7:0] OFM_57_address0;
output   OFM_57_ce0;
input  [31:0] OFM_57_q0;
output  [7:0] OFM_57_address1;
output   OFM_57_ce1;
output   OFM_57_we1;
output  [31:0] OFM_57_d1;
output  [7:0] OFM_58_address0;
output   OFM_58_ce0;
input  [31:0] OFM_58_q0;
output  [7:0] OFM_58_address1;
output   OFM_58_ce1;
output   OFM_58_we1;
output  [31:0] OFM_58_d1;
output  [7:0] OFM_59_address0;
output   OFM_59_ce0;
input  [31:0] OFM_59_q0;
output  [7:0] OFM_59_address1;
output   OFM_59_ce1;
output   OFM_59_we1;
output  [31:0] OFM_59_d1;
output  [7:0] OFM_60_address0;
output   OFM_60_ce0;
input  [31:0] OFM_60_q0;
output  [7:0] OFM_60_address1;
output   OFM_60_ce1;
output   OFM_60_we1;
output  [31:0] OFM_60_d1;
output  [7:0] OFM_61_address0;
output   OFM_61_ce0;
input  [31:0] OFM_61_q0;
output  [7:0] OFM_61_address1;
output   OFM_61_ce1;
output   OFM_61_we1;
output  [31:0] OFM_61_d1;
output  [7:0] OFM_62_address0;
output   OFM_62_ce0;
input  [31:0] OFM_62_q0;
output  [7:0] OFM_62_address1;
output   OFM_62_ce1;
output   OFM_62_we1;
output  [31:0] OFM_62_d1;
output  [7:0] OFM_63_address0;
output   OFM_63_ce0;
input  [31:0] OFM_63_q0;
output  [7:0] OFM_63_address1;
output   OFM_63_ce1;
output   OFM_63_we1;
output  [31:0] OFM_63_d1;
output  [5:0] BIAS_address0;
output   BIAS_ce0;
output   BIAS_we0;
output  [31:0] BIAS_d0;
input  [31:0] BIAS_q0;
input  [31:0] custom_Tr;
input  [31:0] custom_Tc;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_dma_O_TVALID;
reg input_dma_B_TREADY;
reg OFM_0_ce0;
reg OFM_0_ce1;
reg OFM_0_we1;
reg OFM_1_ce0;
reg OFM_1_ce1;
reg OFM_1_we1;
reg OFM_2_ce0;
reg OFM_2_ce1;
reg OFM_2_we1;
reg OFM_3_ce0;
reg OFM_3_ce1;
reg OFM_3_we1;
reg OFM_4_ce0;
reg OFM_4_ce1;
reg OFM_4_we1;
reg OFM_5_ce0;
reg OFM_5_ce1;
reg OFM_5_we1;
reg OFM_6_ce0;
reg OFM_6_ce1;
reg OFM_6_we1;
reg OFM_7_ce0;
reg OFM_7_ce1;
reg OFM_7_we1;
reg OFM_8_ce0;
reg OFM_8_ce1;
reg OFM_8_we1;
reg OFM_9_ce0;
reg OFM_9_ce1;
reg OFM_9_we1;
reg OFM_10_ce0;
reg OFM_10_ce1;
reg OFM_10_we1;
reg OFM_11_ce0;
reg OFM_11_ce1;
reg OFM_11_we1;
reg OFM_12_ce0;
reg OFM_12_ce1;
reg OFM_12_we1;
reg OFM_13_ce0;
reg OFM_13_ce1;
reg OFM_13_we1;
reg OFM_14_ce0;
reg OFM_14_ce1;
reg OFM_14_we1;
reg OFM_15_ce0;
reg OFM_15_ce1;
reg OFM_15_we1;
reg OFM_16_ce0;
reg OFM_16_ce1;
reg OFM_16_we1;
reg OFM_17_ce0;
reg OFM_17_ce1;
reg OFM_17_we1;
reg OFM_18_ce0;
reg OFM_18_ce1;
reg OFM_18_we1;
reg OFM_19_ce0;
reg OFM_19_ce1;
reg OFM_19_we1;
reg OFM_20_ce0;
reg OFM_20_ce1;
reg OFM_20_we1;
reg OFM_21_ce0;
reg OFM_21_ce1;
reg OFM_21_we1;
reg OFM_22_ce0;
reg OFM_22_ce1;
reg OFM_22_we1;
reg OFM_23_ce0;
reg OFM_23_ce1;
reg OFM_23_we1;
reg OFM_24_ce0;
reg OFM_24_ce1;
reg OFM_24_we1;
reg OFM_25_ce0;
reg OFM_25_ce1;
reg OFM_25_we1;
reg OFM_26_ce0;
reg OFM_26_ce1;
reg OFM_26_we1;
reg OFM_27_ce0;
reg OFM_27_ce1;
reg OFM_27_we1;
reg OFM_28_ce0;
reg OFM_28_ce1;
reg OFM_28_we1;
reg OFM_29_ce0;
reg OFM_29_ce1;
reg OFM_29_we1;
reg OFM_30_ce0;
reg OFM_30_ce1;
reg OFM_30_we1;
reg OFM_31_ce0;
reg OFM_31_ce1;
reg OFM_31_we1;
reg OFM_32_ce0;
reg OFM_32_ce1;
reg OFM_32_we1;
reg OFM_33_ce0;
reg OFM_33_ce1;
reg OFM_33_we1;
reg OFM_34_ce0;
reg OFM_34_ce1;
reg OFM_34_we1;
reg OFM_35_ce0;
reg OFM_35_ce1;
reg OFM_35_we1;
reg OFM_36_ce0;
reg OFM_36_ce1;
reg OFM_36_we1;
reg OFM_37_ce0;
reg OFM_37_ce1;
reg OFM_37_we1;
reg OFM_38_ce0;
reg OFM_38_ce1;
reg OFM_38_we1;
reg OFM_39_ce0;
reg OFM_39_ce1;
reg OFM_39_we1;
reg OFM_40_ce0;
reg OFM_40_ce1;
reg OFM_40_we1;
reg OFM_41_ce0;
reg OFM_41_ce1;
reg OFM_41_we1;
reg OFM_42_ce0;
reg OFM_42_ce1;
reg OFM_42_we1;
reg OFM_43_ce0;
reg OFM_43_ce1;
reg OFM_43_we1;
reg OFM_44_ce0;
reg OFM_44_ce1;
reg OFM_44_we1;
reg OFM_45_ce0;
reg OFM_45_ce1;
reg OFM_45_we1;
reg OFM_46_ce0;
reg OFM_46_ce1;
reg OFM_46_we1;
reg OFM_47_ce0;
reg OFM_47_ce1;
reg OFM_47_we1;
reg OFM_48_ce0;
reg OFM_48_ce1;
reg OFM_48_we1;
reg OFM_49_ce0;
reg OFM_49_ce1;
reg OFM_49_we1;
reg OFM_50_ce0;
reg OFM_50_ce1;
reg OFM_50_we1;
reg OFM_51_ce0;
reg OFM_51_ce1;
reg OFM_51_we1;
reg OFM_52_ce0;
reg OFM_52_ce1;
reg OFM_52_we1;
reg OFM_53_ce0;
reg OFM_53_ce1;
reg OFM_53_we1;
reg OFM_54_ce0;
reg OFM_54_ce1;
reg OFM_54_we1;
reg OFM_55_ce0;
reg OFM_55_ce1;
reg OFM_55_we1;
reg OFM_56_ce0;
reg OFM_56_ce1;
reg OFM_56_we1;
reg OFM_57_ce0;
reg OFM_57_ce1;
reg OFM_57_we1;
reg OFM_58_ce0;
reg OFM_58_ce1;
reg OFM_58_we1;
reg OFM_59_ce0;
reg OFM_59_ce1;
reg OFM_59_we1;
reg OFM_60_ce0;
reg OFM_60_ce1;
reg OFM_60_we1;
reg OFM_61_ce0;
reg OFM_61_ce1;
reg OFM_61_we1;
reg OFM_62_ce0;
reg OFM_62_ce1;
reg OFM_62_we1;
reg OFM_63_ce0;
reg OFM_63_ce1;
reg OFM_63_we1;
reg[5:0] BIAS_address0;
reg BIAS_ce0;
reg BIAS_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    output_dma_O_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten1_reg_2879;
reg   [0:0] exitcond_flatten1_reg_2879_pp1_iter4_reg;
reg    input_dma_B_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond4_fu_2306_p2;
reg   [68:0] indvar_flatten1_reg_2066;
reg   [5:0] i1_reg_2077;
reg   [63:0] indvar_flatten_reg_2088;
reg   [30:0] j_reg_2099;
reg   [30:0] k_reg_2110;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_state7_pp1_stage0_iter3;
wire    ap_block_state8_pp1_stage0_iter4;
wire    ap_block_state9_pp1_stage0_iter5;
reg    ap_sig_ioackin_output_dma_O_TREADY;
reg    ap_block_state9_io;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] i_1_fu_2312_p2;
reg    ap_block_state2;
wire   [31:0] tmp_fu_2328_p2;
reg   [31:0] tmp_reg_2847;
wire    ap_CS_fsm_state3;
wire   [31:0] tmp_2_fu_2333_p2;
reg   [31:0] tmp_2_reg_2853;
wire   [63:0] bound_fu_2344_p2;
reg   [63:0] bound_reg_2858;
wire   [68:0] tmp_1_fu_2350_p3;
reg   [68:0] tmp_1_reg_2864;
wire   [0:0] tmp_5_mid_fu_2358_p2;
reg   [0:0] tmp_5_mid_reg_2869;
wire   [0:0] tmp_12_mid_fu_2364_p2;
reg   [0:0] tmp_12_mid_reg_2874;
wire   [0:0] exitcond_flatten1_fu_2387_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] exitcond_flatten1_reg_2879_pp1_iter1_reg;
reg   [0:0] exitcond_flatten1_reg_2879_pp1_iter2_reg;
reg   [0:0] exitcond_flatten1_reg_2879_pp1_iter3_reg;
wire   [68:0] indvar_flatten_next2_fu_2392_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] tmp_7_mid2_v_fu_2445_p3;
reg   [5:0] tmp_7_mid2_v_reg_2888;
wire   [5:0] tmp_8_t_mid2_fu_2465_p3;
reg   [5:0] tmp_8_t_mid2_reg_2894;
wire   [30:0] j_mid2_fu_2546_p3;
wire   [0:0] tmp_last_fu_2565_p2;
reg   [0:0] tmp_last_reg_2903;
reg   [0:0] tmp_last_reg_2903_pp1_iter1_reg;
reg   [0:0] tmp_last_reg_2903_pp1_iter2_reg;
reg   [0:0] tmp_last_reg_2903_pp1_iter3_reg;
reg   [0:0] tmp_last_reg_2903_pp1_iter4_reg;
wire   [30:0] k_1_fu_2642_p2;
wire   [63:0] indvar_flatten_next_fu_2654_p3;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire   [63:0] indvar_flatten_next1_fu_2697_p2;
wire    ap_CS_fsm_state11;
wire   [30:0] tmp_3_mid2_v_fu_2717_p3;
wire   [0:0] exitcond_flatten2_fu_2692_p2;
wire   [30:0] k_2_fu_2800_p2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg   [6:0] i_reg_2055;
reg   [5:0] ap_phi_mux_i1_phi_fu_2081_p4;
wire   [31:0] ap_phi_reg_pp1_iter0_OFM_load_phi_reg_2121;
reg   [31:0] ap_phi_reg_pp1_iter1_OFM_load_phi_reg_2121;
reg   [31:0] ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121;
wire   [31:0] ap_phi_reg_pp1_iter0_OFM_load_1_phi_reg_2191;
reg   [31:0] ap_phi_reg_pp1_iter1_OFM_load_1_phi_reg_2191;
reg   [31:0] ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191;
reg   [63:0] indvar_flatten2_reg_2261;
wire    ap_CS_fsm_state10;
reg   [30:0] j2_reg_2272;
reg   [30:0] k3_reg_2283;
wire   [63:0] tmp_4_fu_2323_p1;
wire  signed [63:0] tmp_15_cast_fu_2575_p1;
wire   [63:0] tmp_7_mid2_fu_2662_p1;
wire  signed [63:0] tmp_18_cast_fu_2733_p1;
wire    ap_block_pp1_stage0_01001;
reg    ap_reg_ioackin_output_dma_O_TREADY;
wire   [31:0] bound_fu_2344_p0;
wire   [31:0] bound_fu_2344_p1;
wire   [31:0] tmp_3_fu_2369_p1;
wire   [31:0] k_cast_fu_2378_p1;
wire   [0:0] exitcond_flatten_fu_2404_p2;
wire   [5:0] i_2_fu_2398_p2;
wire   [0:0] tmp_6_mid1_fu_2425_p2;
wire   [0:0] tmp_s_fu_2431_p2;
wire   [5:0] tmp_8_t_mid1_fu_2453_p2;
wire   [5:0] tmp_8_t_fu_2459_p2;
wire   [0:0] tmp_5_fu_2373_p2;
wire   [0:0] tmp_7_fu_2382_p2;
wire   [30:0] j_mid_fu_2409_p3;
wire   [0:0] tmp_12_mid1_fu_2480_p3;
wire   [30:0] k_mid_fu_2417_p3;
wire   [30:0] j_2_fu_2487_p2;
wire   [31:0] p_mid1_fu_2501_p1;
wire   [0:0] tmp_5_mid3_fu_2473_p3;
wire   [0:0] tmp_5_mid1_fu_2505_p2;
wire   [8:0] tmp_6_fu_2518_p1;
wire   [8:0] tmp_13_fu_2522_p3;
wire   [8:0] tmp_14_fu_2530_p1;
wire   [30:0] k_mid2_fu_2493_p3;
wire   [31:0] k_cast_mid2_cast_fu_2542_p1;
wire   [0:0] tmp_12_fu_2554_p2;
wire   [0:0] tmp_6_mid2_fu_2437_p3;
wire   [0:0] tmp1_fu_2559_p2;
wire   [0:0] tmp_5_mid2_fu_2510_p3;
wire  signed [8:0] grp_fu_2806_p3;
wire   [63:0] indvar_flatten_op_fu_2648_p2;
wire   [31:0] grp_fu_2294_p2;
wire   [31:0] grp_fu_2300_p2;
wire   [31:0] output_dma_O_data_da_3_fu_2670_p1;
wire   [31:0] output_dma_O_data_da_2_fu_2666_p1;
wire   [31:0] k3_cast_fu_2683_p1;
wire   [0:0] tmp_11_fu_2687_p2;
wire   [30:0] j_1_fu_2703_p2;
wire   [30:0] k3_mid2_fu_2709_p3;
wire  signed [8:0] grp_fu_2815_p3;
wire   [4:0] grp_fu_2806_p0;
wire  signed [8:0] grp_fu_2806_p1;
wire   [8:0] grp_fu_2806_p2;
wire   [4:0] grp_fu_2815_p0;
wire  signed [8:0] grp_fu_2815_p1;
wire   [8:0] grp_fu_2815_p2;
reg    grp_fu_2294_ce;
reg    grp_fu_2300_ce;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [63:0] bound_fu_2344_p00;
wire   [63:0] bound_fu_2344_p10;
reg    ap_condition_1388;
reg    ap_condition_949;
reg    ap_condition_1167;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_reg_ioackin_output_dma_O_TREADY = 1'b0;
end

top_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fadd_32ns_32ndEe_U1967(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121),
    .din1(BIAS_q0),
    .ce(grp_fu_2294_ce),
    .dout(grp_fu_2294_p2)
);

top_fadd_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fadd_32ns_32ndEe_U1968(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191),
    .din1(BIAS_q0),
    .ce(grp_fu_2300_ce),
    .dout(grp_fu_2300_p2)
);

top_mac_muladd_5ncud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
top_mac_muladd_5ncud_U1969(
    .din0(grp_fu_2806_p0),
    .din1(grp_fu_2806_p1),
    .din2(grp_fu_2806_p2),
    .dout(grp_fu_2806_p3)
);

top_mac_muladd_5ncud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
top_mac_muladd_5ncud_U1970(
    .din0(grp_fu_2815_p0),
    .din1(grp_fu_2815_p1),
    .din2(grp_fu_2815_p2),
    .dout(grp_fu_2815_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_output_dma_O_TREADY <= 1'b0;
    end else begin
        if (((exitcond_flatten1_reg_2879_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
            if ((1'b0 == ap_block_pp1_stage0_11001)) begin
                ap_reg_ioackin_output_dma_O_TREADY <= 1'b0;
            end else if (((output_dma_O_TREADY == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
                ap_reg_ioackin_output_dma_O_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_949)) begin
        if ((1'b1 == ap_condition_1388)) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_63_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd62) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_62_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd61) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_61_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd60) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_60_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd59) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_59_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd58) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_58_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd57) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_57_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd56) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_56_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd55) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_55_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd54) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_54_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd53) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_53_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd52) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_52_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd51) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_51_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd50) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_50_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd49) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_49_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd48) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_48_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd47) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_47_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd46) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_46_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd45) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_45_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd44) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_44_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd43) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_43_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd42) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_42_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd41) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_41_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd40) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_40_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd39) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_39_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd38) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_38_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd37) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_37_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd36) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_36_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd35) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_35_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd34) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_34_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd33) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_33_q0;
        end else if (((tmp_8_t_mid2_reg_2894 == 6'd32) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= OFM_32_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_OFM_load_1_phi_reg_2191 <= ap_phi_reg_pp1_iter1_OFM_load_1_phi_reg_2191;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_949)) begin
        if ((1'b1 == ap_condition_1167)) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_31_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd30) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_30_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd29) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_29_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd28) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_28_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd27) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_27_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd26) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_26_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd25) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_25_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd24) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_24_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd23) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_23_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd22) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_22_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd21) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_21_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd20) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_20_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd19) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_19_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd18) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_18_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd17) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_17_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd16) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_16_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd15) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_15_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd14) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_14_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd13) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_13_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd12) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_12_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd11) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_11_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd10) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_10_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd9) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_9_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd8) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_8_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd7) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_7_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd6) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_6_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd5) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_5_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd4) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_4_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd3) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_3_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd2) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_2_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd1) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_1_q0;
        end else if (((tmp_7_mid2_v_reg_2888 == 6'd0) & (exitcond_flatten1_reg_2879 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= OFM_0_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_OFM_load_phi_reg_2121 <= ap_phi_reg_pp1_iter1_OFM_load_phi_reg_2121;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_2879 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_reg_2077 <= tmp_7_mid2_v_reg_2888;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_reg_2077 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (exitcond4_fu_2306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_2055 <= i_1_fu_2312_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_2055 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten1_reg_2066 <= indvar_flatten_next2_fu_2392_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten1_reg_2066 <= 69'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten2_reg_2261 <= 64'd0;
    end else if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        indvar_flatten2_reg_2261 <= indvar_flatten_next1_fu_2697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_2088 <= indvar_flatten_next_fu_2654_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_2088 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j2_reg_2272 <= 31'd0;
    end else if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        j2_reg_2272 <= tmp_3_mid2_v_fu_2717_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_reg_2099 <= j_mid2_fu_2546_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_2099 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k3_reg_2283 <= 31'd0;
    end else if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        k3_reg_2283 <= k_2_fu_2800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        k_reg_2110 <= k_1_fu_2642_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_2110 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_OFM_load_1_phi_reg_2191 <= ap_phi_reg_pp1_iter0_OFM_load_1_phi_reg_2191;
        ap_phi_reg_pp1_iter1_OFM_load_phi_reg_2121 <= ap_phi_reg_pp1_iter0_OFM_load_phi_reg_2121;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_2858 <= bound_fu_2344_p2;
        tmp_12_mid_reg_2874 <= tmp_12_mid_fu_2364_p2;
        tmp_1_reg_2864[68 : 5] <= tmp_1_fu_2350_p3[68 : 5];
        tmp_2_reg_2853 <= tmp_2_fu_2333_p2;
        tmp_5_mid_reg_2869 <= tmp_5_mid_fu_2358_p2;
        tmp_reg_2847 <= tmp_fu_2328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten1_reg_2879 <= exitcond_flatten1_fu_2387_p2;
        exitcond_flatten1_reg_2879_pp1_iter1_reg <= exitcond_flatten1_reg_2879;
        tmp_last_reg_2903_pp1_iter1_reg <= tmp_last_reg_2903;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_flatten1_reg_2879_pp1_iter2_reg <= exitcond_flatten1_reg_2879_pp1_iter1_reg;
        exitcond_flatten1_reg_2879_pp1_iter3_reg <= exitcond_flatten1_reg_2879_pp1_iter2_reg;
        exitcond_flatten1_reg_2879_pp1_iter4_reg <= exitcond_flatten1_reg_2879_pp1_iter3_reg;
        tmp_last_reg_2903_pp1_iter2_reg <= tmp_last_reg_2903_pp1_iter1_reg;
        tmp_last_reg_2903_pp1_iter3_reg <= tmp_last_reg_2903_pp1_iter2_reg;
        tmp_last_reg_2903_pp1_iter4_reg <= tmp_last_reg_2903_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_7_mid2_v_reg_2888 <= tmp_7_mid2_v_fu_2445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_2387_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_8_t_mid2_reg_2894 <= tmp_8_t_mid2_fu_2465_p3;
        tmp_last_reg_2903 <= tmp_last_fu_2565_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        BIAS_address0 = tmp_7_mid2_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        BIAS_address0 = tmp_4_fu_2323_p1;
    end else begin
        BIAS_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        BIAS_ce0 = 1'b1;
    end else begin
        BIAS_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (exitcond4_fu_2306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        BIAS_we0 = 1'b1;
    end else begin
        BIAS_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_0_ce0 = 1'b1;
    end else begin
        OFM_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_0_ce1 = 1'b1;
    end else begin
        OFM_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_0_we1 = 1'b1;
    end else begin
        OFM_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_10_ce0 = 1'b1;
    end else begin
        OFM_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_10_ce1 = 1'b1;
    end else begin
        OFM_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_10_we1 = 1'b1;
    end else begin
        OFM_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_11_ce0 = 1'b1;
    end else begin
        OFM_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_11_ce1 = 1'b1;
    end else begin
        OFM_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_11_we1 = 1'b1;
    end else begin
        OFM_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_12_ce0 = 1'b1;
    end else begin
        OFM_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_12_ce1 = 1'b1;
    end else begin
        OFM_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_12_we1 = 1'b1;
    end else begin
        OFM_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_13_ce0 = 1'b1;
    end else begin
        OFM_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_13_ce1 = 1'b1;
    end else begin
        OFM_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_13_we1 = 1'b1;
    end else begin
        OFM_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_14_ce0 = 1'b1;
    end else begin
        OFM_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_14_ce1 = 1'b1;
    end else begin
        OFM_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_14_we1 = 1'b1;
    end else begin
        OFM_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_15_ce0 = 1'b1;
    end else begin
        OFM_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_15_ce1 = 1'b1;
    end else begin
        OFM_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_15_we1 = 1'b1;
    end else begin
        OFM_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_16_ce0 = 1'b1;
    end else begin
        OFM_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_16_ce1 = 1'b1;
    end else begin
        OFM_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_16_we1 = 1'b1;
    end else begin
        OFM_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_17_ce0 = 1'b1;
    end else begin
        OFM_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_17_ce1 = 1'b1;
    end else begin
        OFM_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_17_we1 = 1'b1;
    end else begin
        OFM_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_18_ce0 = 1'b1;
    end else begin
        OFM_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_18_ce1 = 1'b1;
    end else begin
        OFM_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_18_we1 = 1'b1;
    end else begin
        OFM_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_19_ce0 = 1'b1;
    end else begin
        OFM_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_19_ce1 = 1'b1;
    end else begin
        OFM_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_19_we1 = 1'b1;
    end else begin
        OFM_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_1_ce0 = 1'b1;
    end else begin
        OFM_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_1_ce1 = 1'b1;
    end else begin
        OFM_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_1_we1 = 1'b1;
    end else begin
        OFM_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_20_ce0 = 1'b1;
    end else begin
        OFM_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_20_ce1 = 1'b1;
    end else begin
        OFM_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_20_we1 = 1'b1;
    end else begin
        OFM_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_21_ce0 = 1'b1;
    end else begin
        OFM_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_21_ce1 = 1'b1;
    end else begin
        OFM_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_21_we1 = 1'b1;
    end else begin
        OFM_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_22_ce0 = 1'b1;
    end else begin
        OFM_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_22_ce1 = 1'b1;
    end else begin
        OFM_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_22_we1 = 1'b1;
    end else begin
        OFM_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_23_ce0 = 1'b1;
    end else begin
        OFM_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_23_ce1 = 1'b1;
    end else begin
        OFM_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_23_we1 = 1'b1;
    end else begin
        OFM_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_24_ce0 = 1'b1;
    end else begin
        OFM_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_24_ce1 = 1'b1;
    end else begin
        OFM_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_24_we1 = 1'b1;
    end else begin
        OFM_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_25_ce0 = 1'b1;
    end else begin
        OFM_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_25_ce1 = 1'b1;
    end else begin
        OFM_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_25_we1 = 1'b1;
    end else begin
        OFM_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_26_ce0 = 1'b1;
    end else begin
        OFM_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_26_ce1 = 1'b1;
    end else begin
        OFM_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_26_we1 = 1'b1;
    end else begin
        OFM_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_27_ce0 = 1'b1;
    end else begin
        OFM_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_27_ce1 = 1'b1;
    end else begin
        OFM_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_27_we1 = 1'b1;
    end else begin
        OFM_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_28_ce0 = 1'b1;
    end else begin
        OFM_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_28_ce1 = 1'b1;
    end else begin
        OFM_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_28_we1 = 1'b1;
    end else begin
        OFM_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_29_ce0 = 1'b1;
    end else begin
        OFM_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_29_ce1 = 1'b1;
    end else begin
        OFM_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_29_we1 = 1'b1;
    end else begin
        OFM_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_2_ce0 = 1'b1;
    end else begin
        OFM_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_2_ce1 = 1'b1;
    end else begin
        OFM_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_2_we1 = 1'b1;
    end else begin
        OFM_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_30_ce0 = 1'b1;
    end else begin
        OFM_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_30_ce1 = 1'b1;
    end else begin
        OFM_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_30_we1 = 1'b1;
    end else begin
        OFM_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_31_ce0 = 1'b1;
    end else begin
        OFM_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_31_ce1 = 1'b1;
    end else begin
        OFM_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_31_we1 = 1'b1;
    end else begin
        OFM_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_32_ce0 = 1'b1;
    end else begin
        OFM_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_32_ce1 = 1'b1;
    end else begin
        OFM_32_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_32_we1 = 1'b1;
    end else begin
        OFM_32_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_33_ce0 = 1'b1;
    end else begin
        OFM_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_33_ce1 = 1'b1;
    end else begin
        OFM_33_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_33_we1 = 1'b1;
    end else begin
        OFM_33_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_34_ce0 = 1'b1;
    end else begin
        OFM_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_34_ce1 = 1'b1;
    end else begin
        OFM_34_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_34_we1 = 1'b1;
    end else begin
        OFM_34_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_35_ce0 = 1'b1;
    end else begin
        OFM_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_35_ce1 = 1'b1;
    end else begin
        OFM_35_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_35_we1 = 1'b1;
    end else begin
        OFM_35_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_36_ce0 = 1'b1;
    end else begin
        OFM_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_36_ce1 = 1'b1;
    end else begin
        OFM_36_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_36_we1 = 1'b1;
    end else begin
        OFM_36_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_37_ce0 = 1'b1;
    end else begin
        OFM_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_37_ce1 = 1'b1;
    end else begin
        OFM_37_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_37_we1 = 1'b1;
    end else begin
        OFM_37_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_38_ce0 = 1'b1;
    end else begin
        OFM_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_38_ce1 = 1'b1;
    end else begin
        OFM_38_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_38_we1 = 1'b1;
    end else begin
        OFM_38_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_39_ce0 = 1'b1;
    end else begin
        OFM_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_39_ce1 = 1'b1;
    end else begin
        OFM_39_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_39_we1 = 1'b1;
    end else begin
        OFM_39_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_3_ce0 = 1'b1;
    end else begin
        OFM_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_3_ce1 = 1'b1;
    end else begin
        OFM_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_3_we1 = 1'b1;
    end else begin
        OFM_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_40_ce0 = 1'b1;
    end else begin
        OFM_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_40_ce1 = 1'b1;
    end else begin
        OFM_40_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_40_we1 = 1'b1;
    end else begin
        OFM_40_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_41_ce0 = 1'b1;
    end else begin
        OFM_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_41_ce1 = 1'b1;
    end else begin
        OFM_41_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_41_we1 = 1'b1;
    end else begin
        OFM_41_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_42_ce0 = 1'b1;
    end else begin
        OFM_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_42_ce1 = 1'b1;
    end else begin
        OFM_42_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_42_we1 = 1'b1;
    end else begin
        OFM_42_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_43_ce0 = 1'b1;
    end else begin
        OFM_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_43_ce1 = 1'b1;
    end else begin
        OFM_43_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_43_we1 = 1'b1;
    end else begin
        OFM_43_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_44_ce0 = 1'b1;
    end else begin
        OFM_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_44_ce1 = 1'b1;
    end else begin
        OFM_44_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_44_we1 = 1'b1;
    end else begin
        OFM_44_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_45_ce0 = 1'b1;
    end else begin
        OFM_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_45_ce1 = 1'b1;
    end else begin
        OFM_45_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_45_we1 = 1'b1;
    end else begin
        OFM_45_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_46_ce0 = 1'b1;
    end else begin
        OFM_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_46_ce1 = 1'b1;
    end else begin
        OFM_46_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_46_we1 = 1'b1;
    end else begin
        OFM_46_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_47_ce0 = 1'b1;
    end else begin
        OFM_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_47_ce1 = 1'b1;
    end else begin
        OFM_47_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_47_we1 = 1'b1;
    end else begin
        OFM_47_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_48_ce0 = 1'b1;
    end else begin
        OFM_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_48_ce1 = 1'b1;
    end else begin
        OFM_48_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_48_we1 = 1'b1;
    end else begin
        OFM_48_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_49_ce0 = 1'b1;
    end else begin
        OFM_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_49_ce1 = 1'b1;
    end else begin
        OFM_49_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_49_we1 = 1'b1;
    end else begin
        OFM_49_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_4_ce0 = 1'b1;
    end else begin
        OFM_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_4_ce1 = 1'b1;
    end else begin
        OFM_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_4_we1 = 1'b1;
    end else begin
        OFM_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_50_ce0 = 1'b1;
    end else begin
        OFM_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_50_ce1 = 1'b1;
    end else begin
        OFM_50_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_50_we1 = 1'b1;
    end else begin
        OFM_50_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_51_ce0 = 1'b1;
    end else begin
        OFM_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_51_ce1 = 1'b1;
    end else begin
        OFM_51_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_51_we1 = 1'b1;
    end else begin
        OFM_51_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_52_ce0 = 1'b1;
    end else begin
        OFM_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_52_ce1 = 1'b1;
    end else begin
        OFM_52_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_52_we1 = 1'b1;
    end else begin
        OFM_52_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_53_ce0 = 1'b1;
    end else begin
        OFM_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_53_ce1 = 1'b1;
    end else begin
        OFM_53_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_53_we1 = 1'b1;
    end else begin
        OFM_53_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_54_ce0 = 1'b1;
    end else begin
        OFM_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_54_ce1 = 1'b1;
    end else begin
        OFM_54_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_54_we1 = 1'b1;
    end else begin
        OFM_54_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_55_ce0 = 1'b1;
    end else begin
        OFM_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_55_ce1 = 1'b1;
    end else begin
        OFM_55_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_55_we1 = 1'b1;
    end else begin
        OFM_55_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_56_ce0 = 1'b1;
    end else begin
        OFM_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_56_ce1 = 1'b1;
    end else begin
        OFM_56_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_56_we1 = 1'b1;
    end else begin
        OFM_56_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_57_ce0 = 1'b1;
    end else begin
        OFM_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_57_ce1 = 1'b1;
    end else begin
        OFM_57_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_57_we1 = 1'b1;
    end else begin
        OFM_57_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_58_ce0 = 1'b1;
    end else begin
        OFM_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_58_ce1 = 1'b1;
    end else begin
        OFM_58_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_58_we1 = 1'b1;
    end else begin
        OFM_58_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_59_ce0 = 1'b1;
    end else begin
        OFM_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_59_ce1 = 1'b1;
    end else begin
        OFM_59_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_59_we1 = 1'b1;
    end else begin
        OFM_59_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_5_ce0 = 1'b1;
    end else begin
        OFM_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_5_ce1 = 1'b1;
    end else begin
        OFM_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_5_we1 = 1'b1;
    end else begin
        OFM_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_60_ce0 = 1'b1;
    end else begin
        OFM_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_60_ce1 = 1'b1;
    end else begin
        OFM_60_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_60_we1 = 1'b1;
    end else begin
        OFM_60_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_61_ce0 = 1'b1;
    end else begin
        OFM_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_61_ce1 = 1'b1;
    end else begin
        OFM_61_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_61_we1 = 1'b1;
    end else begin
        OFM_61_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_62_ce0 = 1'b1;
    end else begin
        OFM_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_62_ce1 = 1'b1;
    end else begin
        OFM_62_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_62_we1 = 1'b1;
    end else begin
        OFM_62_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_63_ce0 = 1'b1;
    end else begin
        OFM_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_63_ce1 = 1'b1;
    end else begin
        OFM_63_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_63_we1 = 1'b1;
    end else begin
        OFM_63_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_6_ce0 = 1'b1;
    end else begin
        OFM_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_6_ce1 = 1'b1;
    end else begin
        OFM_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_6_we1 = 1'b1;
    end else begin
        OFM_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_7_ce0 = 1'b1;
    end else begin
        OFM_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_7_ce1 = 1'b1;
    end else begin
        OFM_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_7_we1 = 1'b1;
    end else begin
        OFM_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_8_ce0 = 1'b1;
    end else begin
        OFM_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_8_ce1 = 1'b1;
    end else begin
        OFM_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_8_we1 = 1'b1;
    end else begin
        OFM_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        OFM_9_ce0 = 1'b1;
    end else begin
        OFM_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OFM_9_ce1 = 1'b1;
    end else begin
        OFM_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        OFM_9_we1 = 1'b1;
    end else begin
        OFM_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_2387_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_2879 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i1_phi_fu_2081_p4 = tmp_7_mid2_v_reg_2888;
    end else begin
        ap_phi_mux_i1_phi_fu_2081_p4 = i1_reg_2077;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_output_dma_O_TREADY == 1'b0)) begin
        ap_sig_ioackin_output_dma_O_TREADY = output_dma_O_TREADY;
    end else begin
        ap_sig_ioackin_output_dma_O_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2294_ce = 1'b1;
    end else begin
        grp_fu_2294_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2300_ce = 1'b1;
    end else begin
        grp_fu_2300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_2306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_B_TDATA_blk_n = input_dma_B_TVALID;
    end else begin
        input_dma_B_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (exitcond4_fu_2306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_B_TREADY = 1'b1;
    end else begin
        input_dma_B_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_2879_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        output_dma_O_TDATA_blk_n = output_dma_O_TREADY;
    end else begin
        output_dma_O_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_2879_pp1_iter4_reg == 1'd0) & (ap_reg_ioackin_output_dma_O_TREADY == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        output_dma_O_TVALID = 1'b1;
    end else begin
        output_dma_O_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (exitcond4_fu_2306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0)) & (exitcond4_fu_2306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten1_fu_2387_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten1_fu_2387_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((exitcond_flatten2_fu_2692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign BIAS_d0 = input_dma_B_TDATA;

assign OFM_0_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_0_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_0_d1 = 32'd0;

assign OFM_10_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_10_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_10_d1 = 32'd0;

assign OFM_11_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_11_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_11_d1 = 32'd0;

assign OFM_12_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_12_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_12_d1 = 32'd0;

assign OFM_13_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_13_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_13_d1 = 32'd0;

assign OFM_14_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_14_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_14_d1 = 32'd0;

assign OFM_15_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_15_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_15_d1 = 32'd0;

assign OFM_16_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_16_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_16_d1 = 32'd0;

assign OFM_17_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_17_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_17_d1 = 32'd0;

assign OFM_18_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_18_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_18_d1 = 32'd0;

assign OFM_19_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_19_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_19_d1 = 32'd0;

assign OFM_1_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_1_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_1_d1 = 32'd0;

assign OFM_20_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_20_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_20_d1 = 32'd0;

assign OFM_21_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_21_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_21_d1 = 32'd0;

assign OFM_22_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_22_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_22_d1 = 32'd0;

assign OFM_23_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_23_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_23_d1 = 32'd0;

assign OFM_24_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_24_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_24_d1 = 32'd0;

assign OFM_25_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_25_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_25_d1 = 32'd0;

assign OFM_26_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_26_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_26_d1 = 32'd0;

assign OFM_27_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_27_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_27_d1 = 32'd0;

assign OFM_28_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_28_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_28_d1 = 32'd0;

assign OFM_29_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_29_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_29_d1 = 32'd0;

assign OFM_2_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_2_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_2_d1 = 32'd0;

assign OFM_30_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_30_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_30_d1 = 32'd0;

assign OFM_31_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_31_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_31_d1 = 32'd0;

assign OFM_32_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_32_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_32_d1 = 32'd0;

assign OFM_33_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_33_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_33_d1 = 32'd0;

assign OFM_34_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_34_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_34_d1 = 32'd0;

assign OFM_35_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_35_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_35_d1 = 32'd0;

assign OFM_36_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_36_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_36_d1 = 32'd0;

assign OFM_37_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_37_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_37_d1 = 32'd0;

assign OFM_38_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_38_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_38_d1 = 32'd0;

assign OFM_39_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_39_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_39_d1 = 32'd0;

assign OFM_3_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_3_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_3_d1 = 32'd0;

assign OFM_40_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_40_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_40_d1 = 32'd0;

assign OFM_41_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_41_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_41_d1 = 32'd0;

assign OFM_42_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_42_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_42_d1 = 32'd0;

assign OFM_43_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_43_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_43_d1 = 32'd0;

assign OFM_44_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_44_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_44_d1 = 32'd0;

assign OFM_45_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_45_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_45_d1 = 32'd0;

assign OFM_46_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_46_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_46_d1 = 32'd0;

assign OFM_47_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_47_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_47_d1 = 32'd0;

assign OFM_48_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_48_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_48_d1 = 32'd0;

assign OFM_49_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_49_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_49_d1 = 32'd0;

assign OFM_4_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_4_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_4_d1 = 32'd0;

assign OFM_50_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_50_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_50_d1 = 32'd0;

assign OFM_51_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_51_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_51_d1 = 32'd0;

assign OFM_52_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_52_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_52_d1 = 32'd0;

assign OFM_53_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_53_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_53_d1 = 32'd0;

assign OFM_54_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_54_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_54_d1 = 32'd0;

assign OFM_55_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_55_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_55_d1 = 32'd0;

assign OFM_56_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_56_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_56_d1 = 32'd0;

assign OFM_57_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_57_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_57_d1 = 32'd0;

assign OFM_58_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_58_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_58_d1 = 32'd0;

assign OFM_59_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_59_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_59_d1 = 32'd0;

assign OFM_5_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_5_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_5_d1 = 32'd0;

assign OFM_60_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_60_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_60_d1 = 32'd0;

assign OFM_61_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_61_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_61_d1 = 32'd0;

assign OFM_62_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_62_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_62_d1 = 32'd0;

assign OFM_63_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_63_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_63_d1 = 32'd0;

assign OFM_6_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_6_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_6_d1 = 32'd0;

assign OFM_7_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_7_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_7_d1 = 32'd0;

assign OFM_8_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_8_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_8_d1 = 32'd0;

assign OFM_9_address0 = tmp_15_cast_fu_2575_p1;

assign OFM_9_address1 = tmp_18_cast_fu_2733_p1;

assign OFM_9_d1 = 32'd0;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_block_state9_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_block_state9_io));
end

always @ (*) begin
    ap_block_state2 = ((exitcond4_fu_2306_p2 == 1'd0) & (input_dma_B_TVALID == 1'b0));
end

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((exitcond_flatten1_reg_2879_pp1_iter4_reg == 1'd0) & (ap_sig_ioackin_output_dma_O_TREADY == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1167 = (~(tmp_7_mid2_v_reg_2888 == 6'd21) & ~(tmp_7_mid2_v_reg_2888 == 6'd22) & ~(tmp_7_mid2_v_reg_2888 == 6'd23) & ~(tmp_7_mid2_v_reg_2888 == 6'd24) & ~(tmp_7_mid2_v_reg_2888 == 6'd25) & ~(tmp_7_mid2_v_reg_2888 == 6'd26) & ~(tmp_7_mid2_v_reg_2888 == 6'd27) & ~(tmp_7_mid2_v_reg_2888 == 6'd28) & ~(tmp_7_mid2_v_reg_2888 == 6'd29) & ~(tmp_7_mid2_v_reg_2888 == 6'd30) & ~(tmp_7_mid2_v_reg_2888 == 6'd0) & ~(tmp_7_mid2_v_reg_2888 == 6'd1) & ~(tmp_7_mid2_v_reg_2888 == 6'd2) & ~(tmp_7_mid2_v_reg_2888 == 6'd3) & ~(tmp_7_mid2_v_reg_2888 == 6'd4) & ~(tmp_7_mid2_v_reg_2888 == 6'd5) & ~(tmp_7_mid2_v_reg_2888 == 6'd6) & ~(tmp_7_mid2_v_reg_2888 == 6'd7) & ~(tmp_7_mid2_v_reg_2888 == 6'd8) & ~(tmp_7_mid2_v_reg_2888 == 6'd9) & ~(tmp_7_mid2_v_reg_2888 == 6'd10) & ~(tmp_7_mid2_v_reg_2888 == 6'd11) & ~(tmp_7_mid2_v_reg_2888 == 6'd12) & ~(tmp_7_mid2_v_reg_2888 == 6'd13) & ~(tmp_7_mid2_v_reg_2888 == 6'd14) & ~(tmp_7_mid2_v_reg_2888 == 6'd15) & ~(tmp_7_mid2_v_reg_2888 == 6'd16) & ~(tmp_7_mid2_v_reg_2888 == 6'd17) & ~(tmp_7_mid2_v_reg_2888 == 6'd18) & ~(tmp_7_mid2_v_reg_2888 == 6'd19) & ~(tmp_7_mid2_v_reg_2888 == 6'd20) & (exitcond_flatten1_reg_2879 == 1'd0));
end

always @ (*) begin
    ap_condition_1388 = (~(tmp_8_t_mid2_reg_2894 == 6'd32) & ~(tmp_8_t_mid2_reg_2894 == 6'd33) & ~(tmp_8_t_mid2_reg_2894 == 6'd34) & ~(tmp_8_t_mid2_reg_2894 == 6'd35) & ~(tmp_8_t_mid2_reg_2894 == 6'd36) & ~(tmp_8_t_mid2_reg_2894 == 6'd37) & ~(tmp_8_t_mid2_reg_2894 == 6'd38) & ~(tmp_8_t_mid2_reg_2894 == 6'd39) & ~(tmp_8_t_mid2_reg_2894 == 6'd40) & ~(tmp_8_t_mid2_reg_2894 == 6'd41) & ~(tmp_8_t_mid2_reg_2894 == 6'd42) & ~(tmp_8_t_mid2_reg_2894 == 6'd43) & ~(tmp_8_t_mid2_reg_2894 == 6'd44) & ~(tmp_8_t_mid2_reg_2894 == 6'd45) & ~(tmp_8_t_mid2_reg_2894 == 6'd46) & ~(tmp_8_t_mid2_reg_2894 == 6'd47) & ~(tmp_8_t_mid2_reg_2894 == 6'd48) & ~(tmp_8_t_mid2_reg_2894 == 6'd49) & ~(tmp_8_t_mid2_reg_2894 == 6'd50) & ~(tmp_8_t_mid2_reg_2894 == 6'd51) & ~(tmp_8_t_mid2_reg_2894 == 6'd52) & ~(tmp_8_t_mid2_reg_2894 == 6'd53) & ~(tmp_8_t_mid2_reg_2894 == 6'd54) & ~(tmp_8_t_mid2_reg_2894 == 6'd55) & ~(tmp_8_t_mid2_reg_2894 == 6'd56) & ~(tmp_8_t_mid2_reg_2894 == 6'd57) & ~(tmp_8_t_mid2_reg_2894 == 6'd58) & ~(tmp_8_t_mid2_reg_2894 == 6'd59) & ~(tmp_8_t_mid2_reg_2894 == 6'd60) & ~(tmp_8_t_mid2_reg_2894 == 6'd61) & ~(tmp_8_t_mid2_reg_2894 == 6'd62) & (exitcond_flatten1_reg_2879 == 1'd0));
end

always @ (*) begin
    ap_condition_949 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_OFM_load_1_phi_reg_2191 = 'bx;

assign ap_phi_reg_pp1_iter0_OFM_load_phi_reg_2121 = 'bx;

assign bound_fu_2344_p0 = bound_fu_2344_p00;

assign bound_fu_2344_p00 = custom_Tr;

assign bound_fu_2344_p1 = bound_fu_2344_p10;

assign bound_fu_2344_p10 = custom_Tc;

assign bound_fu_2344_p2 = (bound_fu_2344_p0 * bound_fu_2344_p1);

assign exitcond4_fu_2306_p2 = ((i_reg_2055 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_2387_p2 = ((indvar_flatten1_reg_2066 == tmp_1_reg_2864) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_2692_p2 = ((indvar_flatten2_reg_2261 == bound_reg_2858) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2404_p2 = ((indvar_flatten_reg_2088 == bound_reg_2858) ? 1'b1 : 1'b0);

assign grp_fu_2806_p0 = 9'd13;

assign grp_fu_2806_p1 = ((tmp_12_mid1_fu_2480_p3[0:0] === 1'b1) ? tmp_13_fu_2522_p3 : tmp_14_fu_2530_p1);

assign grp_fu_2806_p2 = k_mid2_fu_2493_p3[8:0];

assign grp_fu_2815_p0 = 9'd13;

assign grp_fu_2815_p1 = tmp_3_mid2_v_fu_2717_p3[8:0];

assign grp_fu_2815_p2 = k3_mid2_fu_2709_p3[8:0];

assign i_1_fu_2312_p2 = (i_reg_2055 + 7'd1);

assign i_2_fu_2398_p2 = (6'd1 + ap_phi_mux_i1_phi_fu_2081_p4);

assign indvar_flatten_next1_fu_2697_p2 = (indvar_flatten2_reg_2261 + 64'd1);

assign indvar_flatten_next2_fu_2392_p2 = (indvar_flatten1_reg_2066 + 69'd1);

assign indvar_flatten_next_fu_2654_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? 64'd1 : indvar_flatten_op_fu_2648_p2);

assign indvar_flatten_op_fu_2648_p2 = (indvar_flatten_reg_2088 + 64'd1);

assign j_1_fu_2703_p2 = (31'd1 + j2_reg_2272);

assign j_2_fu_2487_p2 = (31'd1 + j_mid_fu_2409_p3);

assign j_mid2_fu_2546_p3 = ((tmp_12_mid1_fu_2480_p3[0:0] === 1'b1) ? j_mid_fu_2409_p3 : j_2_fu_2487_p2);

assign j_mid_fu_2409_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? 31'd0 : j_reg_2099);

assign k3_cast_fu_2683_p1 = k3_reg_2283;

assign k3_mid2_fu_2709_p3 = ((tmp_11_fu_2687_p2[0:0] === 1'b1) ? k3_reg_2283 : 31'd0);

assign k_1_fu_2642_p2 = (k_mid2_fu_2493_p3 + 31'd1);

assign k_2_fu_2800_p2 = (31'd1 + k3_mid2_fu_2709_p3);

assign k_cast_fu_2378_p1 = k_reg_2110;

assign k_cast_mid2_cast_fu_2542_p1 = k_mid2_fu_2493_p3;

assign k_mid2_fu_2493_p3 = ((tmp_12_mid1_fu_2480_p3[0:0] === 1'b1) ? k_mid_fu_2417_p3 : 31'd0);

assign k_mid_fu_2417_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? 31'd0 : k_reg_2110);

assign output_dma_O_TDATA = {{output_dma_O_data_da_3_fu_2670_p1}, {output_dma_O_data_da_2_fu_2666_p1}};

assign output_dma_O_TLAST = tmp_last_reg_2903_pp1_iter4_reg;

assign output_dma_O_data_da_2_fu_2666_p1 = grp_fu_2294_p2;

assign output_dma_O_data_da_3_fu_2670_p1 = grp_fu_2300_p2;

assign p_mid1_fu_2501_p1 = j_2_fu_2487_p2;

assign tmp1_fu_2559_p2 = (tmp_6_mid2_fu_2437_p3 & tmp_12_fu_2554_p2);

assign tmp_11_fu_2687_p2 = (($signed(k3_cast_fu_2683_p1) < $signed(custom_Tc)) ? 1'b1 : 1'b0);

assign tmp_12_fu_2554_p2 = ((k_cast_mid2_cast_fu_2542_p1 == tmp_2_reg_2853) ? 1'b1 : 1'b0);

assign tmp_12_mid1_fu_2480_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? tmp_12_mid_reg_2874 : tmp_7_fu_2382_p2);

assign tmp_12_mid_fu_2364_p2 = (($signed(custom_Tc) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_13_fu_2522_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? 9'd0 : tmp_6_fu_2518_p1);

assign tmp_14_fu_2530_p1 = j_2_fu_2487_p2[8:0];

assign tmp_15_cast_fu_2575_p1 = grp_fu_2806_p3;

assign tmp_18_cast_fu_2733_p1 = grp_fu_2815_p3;

assign tmp_1_fu_2350_p3 = {{bound_fu_2344_p2}, {5'd0}};

assign tmp_2_fu_2333_p2 = ($signed(custom_Tc) + $signed(32'd4294967295));

assign tmp_3_fu_2369_p1 = j_reg_2099;

assign tmp_3_mid2_v_fu_2717_p3 = ((tmp_11_fu_2687_p2[0:0] === 1'b1) ? j2_reg_2272 : j_1_fu_2703_p2);

assign tmp_4_fu_2323_p1 = i_reg_2055;

assign tmp_5_fu_2373_p2 = ((tmp_3_fu_2369_p1 == tmp_reg_2847) ? 1'b1 : 1'b0);

assign tmp_5_mid1_fu_2505_p2 = ((p_mid1_fu_2501_p1 == tmp_reg_2847) ? 1'b1 : 1'b0);

assign tmp_5_mid2_fu_2510_p3 = ((tmp_12_mid1_fu_2480_p3[0:0] === 1'b1) ? tmp_5_mid3_fu_2473_p3 : tmp_5_mid1_fu_2505_p2);

assign tmp_5_mid3_fu_2473_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? tmp_5_mid_reg_2869 : tmp_5_fu_2373_p2);

assign tmp_5_mid_fu_2358_p2 = ((tmp_fu_2328_p2 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_2518_p1 = j_reg_2099[8:0];

assign tmp_6_mid1_fu_2425_p2 = ((i_2_fu_2398_p2 == 6'd31) ? 1'b1 : 1'b0);

assign tmp_6_mid2_fu_2437_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? tmp_6_mid1_fu_2425_p2 : tmp_s_fu_2431_p2);

assign tmp_7_fu_2382_p2 = (($signed(k_cast_fu_2378_p1) < $signed(custom_Tc)) ? 1'b1 : 1'b0);

assign tmp_7_mid2_fu_2662_p1 = tmp_7_mid2_v_reg_2888;

assign tmp_7_mid2_v_fu_2445_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? i_2_fu_2398_p2 : ap_phi_mux_i1_phi_fu_2081_p4);

assign tmp_8_t_fu_2459_p2 = (ap_phi_mux_i1_phi_fu_2081_p4 ^ 6'd32);

assign tmp_8_t_mid1_fu_2453_p2 = ($signed(6'd33) + $signed(ap_phi_mux_i1_phi_fu_2081_p4));

assign tmp_8_t_mid2_fu_2465_p3 = ((exitcond_flatten_fu_2404_p2[0:0] === 1'b1) ? tmp_8_t_mid1_fu_2453_p2 : tmp_8_t_fu_2459_p2);

assign tmp_fu_2328_p2 = ($signed(custom_Tr) + $signed(32'd4294967295));

assign tmp_last_fu_2565_p2 = (tmp_5_mid2_fu_2510_p3 & tmp1_fu_2559_p2);

assign tmp_s_fu_2431_p2 = ((ap_phi_mux_i1_phi_fu_2081_p4 == 6'd31) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_1_reg_2864[4:0] <= 5'b00000;
end

endmodule //OFM_STORE
