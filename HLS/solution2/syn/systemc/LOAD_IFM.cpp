// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LOAD_IFM.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LOAD_IFM::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LOAD_IFM::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> LOAD_IFM::ap_ST_fsm_state1 = "1";
const sc_lv<3> LOAD_IFM::ap_ST_fsm_state2 = "10";
const sc_lv<3> LOAD_IFM::ap_ST_fsm_state3 = "100";
const sc_lv<32> LOAD_IFM::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> LOAD_IFM::ap_const_lv32_1 = "1";
const sc_lv<1> LOAD_IFM::ap_const_lv1_0 = "0";
const sc_lv<66> LOAD_IFM::ap_const_lv66_0 = "000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> LOAD_IFM::ap_const_lv3_0 = "000";
const sc_lv<64> LOAD_IFM::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> LOAD_IFM::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<3> LOAD_IFM::ap_const_lv3_2 = "10";
const sc_lv<3> LOAD_IFM::ap_const_lv3_1 = "1";
const sc_lv<3> LOAD_IFM::ap_const_lv3_5 = "101";
const sc_lv<3> LOAD_IFM::ap_const_lv3_4 = "100";
const sc_lv<2> LOAD_IFM::ap_const_lv2_0 = "00";
const sc_lv<66> LOAD_IFM::ap_const_lv66_1 = "1";
const sc_lv<3> LOAD_IFM::ap_const_lv3_3 = "11";
const sc_lv<31> LOAD_IFM::ap_const_lv31_1 = "1";
const sc_lv<9> LOAD_IFM::ap_const_lv9_0 = "000000000";
const sc_lv<32> LOAD_IFM::ap_const_lv32_20 = "100000";
const sc_lv<32> LOAD_IFM::ap_const_lv32_3F = "111111";
const sc_lv<64> LOAD_IFM::ap_const_lv64_1 = "1";
const sc_lv<9> LOAD_IFM::ap_const_lv9_D = "1101";
const sc_lv<32> LOAD_IFM::ap_const_lv32_2 = "10";
const sc_lv<1> LOAD_IFM::ap_const_lv1_1 = "1";
const bool LOAD_IFM::ap_const_boolean_1 = true;

LOAD_IFM::LOAD_IFM(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_mac_muladd_5ncud_U454 = new top_mac_muladd_5ncud<1,1,5,9,9,9>("top_mac_muladd_5ncud_U454");
    top_mac_muladd_5ncud_U454->din0(grp_fu_493_p0);
    top_mac_muladd_5ncud_U454->din1(grp_fu_493_p1);
    top_mac_muladd_5ncud_U454->din2(grp_fu_493_p2);
    top_mac_muladd_5ncud_U454->dout(grp_fu_493_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IFM_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_0_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_0_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_fu_434_p1 );

    SC_METHOD(thread_IFM_0_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_mid2_fu_372_p3 );

    SC_METHOD(thread_IFM_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_1_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_1_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_fu_434_p1 );

    SC_METHOD(thread_IFM_1_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_mid2_fu_372_p3 );

    SC_METHOD(thread_IFM_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_2_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_2_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_fu_434_p1 );

    SC_METHOD(thread_IFM_2_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_mid2_fu_372_p3 );

    SC_METHOD(thread_IFM_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_3_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_3_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_fu_434_p1 );

    SC_METHOD(thread_IFM_3_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_mid2_fu_372_p3 );

    SC_METHOD(thread_IFM_4_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_4_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_4_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_1_fu_452_p1 );

    SC_METHOD(thread_IFM_4_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( tmp_19_mid2_fu_337_p3 );
    sensitive << ( tmp_t_mid2_fu_357_p3 );

    SC_METHOD(thread_IFM_5_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_5_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_5_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_1_fu_452_p1 );

    SC_METHOD(thread_IFM_5_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( tmp_19_mid2_fu_337_p3 );
    sensitive << ( tmp_t_mid2_fu_357_p3 );

    SC_METHOD(thread_IFM_6_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_cast_fu_463_p1 );

    SC_METHOD(thread_IFM_6_ce0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_IFM_6_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ifm_input_dma_data_d_1_fu_452_p1 );

    SC_METHOD(thread_IFM_6_we0);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( tmp_19_mid2_fu_337_p3 );
    sensitive << ( tmp_t_mid2_fu_357_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bound_fu_258_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_258_p00 );

    SC_METHOD(thread_bound_fu_258_p00);
    sensitive << ( custom_Tr );

    SC_METHOD(thread_bound_fu_258_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_258_p10 );

    SC_METHOD(thread_bound_fu_258_p10);
    sensitive << ( custom_Tc );

    SC_METHOD(thread_bound_fu_258_p2);
    sensitive << ( bound_fu_258_p0 );
    sensitive << ( bound_fu_258_p1 );

    SC_METHOD(thread_exitcond_flatten5_fu_287_p2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( tmp_reg_512 );
    sensitive << ( indvar_flatten5_reg_195 );

    SC_METHOD(thread_exitcond_flatten_fu_304_p2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( bound_reg_507 );
    sensitive << ( indvar_flatten_reg_217 );

    SC_METHOD(thread_grp_fu_493_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_grp_fu_493_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( tmp_22_mid1_fu_365_p3 );
    sensitive << ( tmp_33_fu_398_p3 );
    sensitive << ( tmp_34_fu_406_p1 );

    SC_METHOD(thread_grp_fu_493_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( m_mid2_fu_386_p3 );

    SC_METHOD(thread_i_5_fu_298_p2);
    sensitive << ( i_reg_206 );

    SC_METHOD(thread_i_mid2_fu_372_p3);
    sensitive << ( i_reg_206 );
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( i_5_fu_298_p2 );

    SC_METHOD(thread_ifm_input_dma_data_d_1_fu_452_p1);
    sensitive << ( ifm_input_dma_data_d_2_fu_442_p4 );

    SC_METHOD(thread_ifm_input_dma_data_d_2_fu_442_p4);
    sensitive << ( input_dma_I_TDATA );

    SC_METHOD(thread_ifm_input_dma_data_d_fu_434_p1);
    sensitive << ( tmp_36_fu_430_p1 );

    SC_METHOD(thread_indvar_flatten_next5_fu_292_p2);
    sensitive << ( indvar_flatten5_reg_195 );

    SC_METHOD(thread_indvar_flatten_next_fu_485_p3);
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( indvar_flatten_op_fu_479_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_479_p2);
    sensitive << ( indvar_flatten_reg_217 );

    SC_METHOD(thread_input_dma_I_TDATA_blk_n);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_input_dma_I_TREADY);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    SC_METHOD(thread_j_4_fu_380_p2);
    sensitive << ( j_mid_fu_309_p3 );

    SC_METHOD(thread_j_mid2_fu_418_p3);
    sensitive << ( j_mid_fu_309_p3 );
    sensitive << ( tmp_22_mid1_fu_365_p3 );
    sensitive << ( j_4_fu_380_p2 );

    SC_METHOD(thread_j_mid_fu_309_p3);
    sensitive << ( j_reg_228 );
    sensitive << ( exitcond_flatten_fu_304_p2 );

    SC_METHOD(thread_m_2_fu_473_p2);
    sensitive << ( m_mid2_fu_386_p3 );

    SC_METHOD(thread_m_cast_fu_278_p1);
    sensitive << ( m_reg_239 );

    SC_METHOD(thread_m_mid2_fu_386_p3);
    sensitive << ( tmp_22_mid1_fu_365_p3 );
    sensitive << ( m_mid_fu_317_p3 );

    SC_METHOD(thread_m_mid_fu_317_p3);
    sensitive << ( m_reg_239 );
    sensitive << ( exitcond_flatten_fu_304_p2 );

    SC_METHOD(thread_tmp_19_mid1_fu_325_p2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_5_fu_298_p2 );

    SC_METHOD(thread_tmp_19_mid2_fu_337_p3);
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( tmp_19_mid1_fu_325_p2 );
    sensitive << ( tmp_s_fu_331_p2 );

    SC_METHOD(thread_tmp_20_fu_282_p2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( custom_Tc );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( m_cast_fu_278_p1 );

    SC_METHOD(thread_tmp_22_mid1_fu_365_p3);
    sensitive << ( tmp_22_mid_reg_517 );
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( tmp_20_fu_282_p2 );

    SC_METHOD(thread_tmp_22_mid_fu_272_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( custom_Tc );

    SC_METHOD(thread_tmp_27_cast_fu_463_p1);
    sensitive << ( grp_fu_493_p3 );

    SC_METHOD(thread_tmp_32_fu_394_p1);
    sensitive << ( j_reg_228 );

    SC_METHOD(thread_tmp_33_fu_398_p3);
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( tmp_32_fu_394_p1 );

    SC_METHOD(thread_tmp_34_fu_406_p1);
    sensitive << ( j_4_fu_380_p2 );

    SC_METHOD(thread_tmp_36_fu_430_p1);
    sensitive << ( input_dma_I_TDATA );

    SC_METHOD(thread_tmp_fu_264_p3);
    sensitive << ( bound_fu_258_p2 );

    SC_METHOD(thread_tmp_s_fu_331_p2);
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );
    sensitive << ( i_reg_206 );

    SC_METHOD(thread_tmp_t_fu_351_p2);
    sensitive << ( i_reg_206 );

    SC_METHOD(thread_tmp_t_mid1_fu_345_p2);
    sensitive << ( i_reg_206 );

    SC_METHOD(thread_tmp_t_mid2_fu_357_p3);
    sensitive << ( exitcond_flatten_fu_304_p2 );
    sensitive << ( tmp_t_mid1_fu_345_p2 );
    sensitive << ( tmp_t_fu_351_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_dma_I_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten5_fu_287_p2 );

    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LOAD_IFM_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_dma_I_TDATA, "(port)input_dma_I_TDATA");
    sc_trace(mVcdFile, input_dma_I_TVALID, "(port)input_dma_I_TVALID");
    sc_trace(mVcdFile, input_dma_I_TREADY, "(port)input_dma_I_TREADY");
    sc_trace(mVcdFile, input_dma_I_TLAST, "(port)input_dma_I_TLAST");
    sc_trace(mVcdFile, IFM_0_address0, "(port)IFM_0_address0");
    sc_trace(mVcdFile, IFM_0_ce0, "(port)IFM_0_ce0");
    sc_trace(mVcdFile, IFM_0_we0, "(port)IFM_0_we0");
    sc_trace(mVcdFile, IFM_0_d0, "(port)IFM_0_d0");
    sc_trace(mVcdFile, IFM_1_address0, "(port)IFM_1_address0");
    sc_trace(mVcdFile, IFM_1_ce0, "(port)IFM_1_ce0");
    sc_trace(mVcdFile, IFM_1_we0, "(port)IFM_1_we0");
    sc_trace(mVcdFile, IFM_1_d0, "(port)IFM_1_d0");
    sc_trace(mVcdFile, IFM_2_address0, "(port)IFM_2_address0");
    sc_trace(mVcdFile, IFM_2_ce0, "(port)IFM_2_ce0");
    sc_trace(mVcdFile, IFM_2_we0, "(port)IFM_2_we0");
    sc_trace(mVcdFile, IFM_2_d0, "(port)IFM_2_d0");
    sc_trace(mVcdFile, IFM_3_address0, "(port)IFM_3_address0");
    sc_trace(mVcdFile, IFM_3_ce0, "(port)IFM_3_ce0");
    sc_trace(mVcdFile, IFM_3_we0, "(port)IFM_3_we0");
    sc_trace(mVcdFile, IFM_3_d0, "(port)IFM_3_d0");
    sc_trace(mVcdFile, IFM_4_address0, "(port)IFM_4_address0");
    sc_trace(mVcdFile, IFM_4_ce0, "(port)IFM_4_ce0");
    sc_trace(mVcdFile, IFM_4_we0, "(port)IFM_4_we0");
    sc_trace(mVcdFile, IFM_4_d0, "(port)IFM_4_d0");
    sc_trace(mVcdFile, IFM_5_address0, "(port)IFM_5_address0");
    sc_trace(mVcdFile, IFM_5_ce0, "(port)IFM_5_ce0");
    sc_trace(mVcdFile, IFM_5_we0, "(port)IFM_5_we0");
    sc_trace(mVcdFile, IFM_5_d0, "(port)IFM_5_d0");
    sc_trace(mVcdFile, IFM_6_address0, "(port)IFM_6_address0");
    sc_trace(mVcdFile, IFM_6_ce0, "(port)IFM_6_ce0");
    sc_trace(mVcdFile, IFM_6_we0, "(port)IFM_6_we0");
    sc_trace(mVcdFile, IFM_6_d0, "(port)IFM_6_d0");
    sc_trace(mVcdFile, custom_Tr, "(port)custom_Tr");
    sc_trace(mVcdFile, custom_Tc, "(port)custom_Tc");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_dma_I_TDATA_blk_n, "input_dma_I_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten5_fu_287_p2, "exitcond_flatten5_fu_287_p2");
    sc_trace(mVcdFile, bound_fu_258_p2, "bound_fu_258_p2");
    sc_trace(mVcdFile, bound_reg_507, "bound_reg_507");
    sc_trace(mVcdFile, tmp_fu_264_p3, "tmp_fu_264_p3");
    sc_trace(mVcdFile, tmp_reg_512, "tmp_reg_512");
    sc_trace(mVcdFile, tmp_22_mid_fu_272_p2, "tmp_22_mid_fu_272_p2");
    sc_trace(mVcdFile, tmp_22_mid_reg_517, "tmp_22_mid_reg_517");
    sc_trace(mVcdFile, indvar_flatten_next5_fu_292_p2, "indvar_flatten_next5_fu_292_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_mid2_fu_372_p3, "i_mid2_fu_372_p3");
    sc_trace(mVcdFile, j_mid2_fu_418_p3, "j_mid2_fu_418_p3");
    sc_trace(mVcdFile, m_2_fu_473_p2, "m_2_fu_473_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_485_p3, "indvar_flatten_next_fu_485_p3");
    sc_trace(mVcdFile, indvar_flatten5_reg_195, "indvar_flatten5_reg_195");
    sc_trace(mVcdFile, i_reg_206, "i_reg_206");
    sc_trace(mVcdFile, indvar_flatten_reg_217, "indvar_flatten_reg_217");
    sc_trace(mVcdFile, j_reg_228, "j_reg_228");
    sc_trace(mVcdFile, m_reg_239, "m_reg_239");
    sc_trace(mVcdFile, tmp_27_cast_fu_463_p1, "tmp_27_cast_fu_463_p1");
    sc_trace(mVcdFile, ifm_input_dma_data_d_fu_434_p1, "ifm_input_dma_data_d_fu_434_p1");
    sc_trace(mVcdFile, tmp_19_mid2_fu_337_p3, "tmp_19_mid2_fu_337_p3");
    sc_trace(mVcdFile, tmp_t_mid2_fu_357_p3, "tmp_t_mid2_fu_357_p3");
    sc_trace(mVcdFile, ifm_input_dma_data_d_1_fu_452_p1, "ifm_input_dma_data_d_1_fu_452_p1");
    sc_trace(mVcdFile, bound_fu_258_p0, "bound_fu_258_p0");
    sc_trace(mVcdFile, bound_fu_258_p1, "bound_fu_258_p1");
    sc_trace(mVcdFile, m_cast_fu_278_p1, "m_cast_fu_278_p1");
    sc_trace(mVcdFile, exitcond_flatten_fu_304_p2, "exitcond_flatten_fu_304_p2");
    sc_trace(mVcdFile, i_5_fu_298_p2, "i_5_fu_298_p2");
    sc_trace(mVcdFile, tmp_19_mid1_fu_325_p2, "tmp_19_mid1_fu_325_p2");
    sc_trace(mVcdFile, tmp_s_fu_331_p2, "tmp_s_fu_331_p2");
    sc_trace(mVcdFile, tmp_t_mid1_fu_345_p2, "tmp_t_mid1_fu_345_p2");
    sc_trace(mVcdFile, tmp_t_fu_351_p2, "tmp_t_fu_351_p2");
    sc_trace(mVcdFile, tmp_20_fu_282_p2, "tmp_20_fu_282_p2");
    sc_trace(mVcdFile, j_mid_fu_309_p3, "j_mid_fu_309_p3");
    sc_trace(mVcdFile, tmp_22_mid1_fu_365_p3, "tmp_22_mid1_fu_365_p3");
    sc_trace(mVcdFile, m_mid_fu_317_p3, "m_mid_fu_317_p3");
    sc_trace(mVcdFile, tmp_32_fu_394_p1, "tmp_32_fu_394_p1");
    sc_trace(mVcdFile, j_4_fu_380_p2, "j_4_fu_380_p2");
    sc_trace(mVcdFile, tmp_33_fu_398_p3, "tmp_33_fu_398_p3");
    sc_trace(mVcdFile, tmp_34_fu_406_p1, "tmp_34_fu_406_p1");
    sc_trace(mVcdFile, tmp_36_fu_430_p1, "tmp_36_fu_430_p1");
    sc_trace(mVcdFile, ifm_input_dma_data_d_2_fu_442_p4, "ifm_input_dma_data_d_2_fu_442_p4");
    sc_trace(mVcdFile, m_mid2_fu_386_p3, "m_mid2_fu_386_p3");
    sc_trace(mVcdFile, grp_fu_493_p3, "grp_fu_493_p3");
    sc_trace(mVcdFile, indvar_flatten_op_fu_479_p2, "indvar_flatten_op_fu_479_p2");
    sc_trace(mVcdFile, grp_fu_493_p0, "grp_fu_493_p0");
    sc_trace(mVcdFile, grp_fu_493_p1, "grp_fu_493_p1");
    sc_trace(mVcdFile, grp_fu_493_p2, "grp_fu_493_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, bound_fu_258_p00, "bound_fu_258_p00");
    sc_trace(mVcdFile, bound_fu_258_p10, "bound_fu_258_p10");
#endif

    }
}

LOAD_IFM::~LOAD_IFM() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete top_mac_muladd_5ncud_U454;
}

void LOAD_IFM::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_206 = i_mid2_fu_372_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_206 = ap_const_lv3_0;
    }
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        indvar_flatten5_reg_195 = indvar_flatten_next5_fu_292_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten5_reg_195 = ap_const_lv66_0;
    }
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        indvar_flatten_reg_217 = indvar_flatten_next_fu_485_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_217 = ap_const_lv64_0;
    }
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_228 = j_mid2_fu_418_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        j_reg_228 = ap_const_lv31_0;
    }
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        m_reg_239 = m_2_fu_473_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        m_reg_239 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        bound_reg_507 = bound_fu_258_p2.read();
        tmp_22_mid_reg_517 = tmp_22_mid_fu_272_p2.read();
        tmp_reg_512 = tmp_fu_264_p3.read();
    }
}

void LOAD_IFM::thread_IFM_0_address0() {
    IFM_0_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_0_ce0 = ap_const_logic_1;
    } else {
        IFM_0_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_0_d0() {
    IFM_0_d0 = ifm_input_dma_data_d_fu_434_p1.read();
}

void LOAD_IFM::thread_IFM_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_0))) {
        IFM_0_we0 = ap_const_logic_1;
    } else {
        IFM_0_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_1_address0() {
    IFM_1_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_1_ce0 = ap_const_logic_1;
    } else {
        IFM_1_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_1_d0() {
    IFM_1_d0 = ifm_input_dma_data_d_fu_434_p1.read();
}

void LOAD_IFM::thread_IFM_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_1))) {
        IFM_1_we0 = ap_const_logic_1;
    } else {
        IFM_1_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_2_address0() {
    IFM_2_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_2_ce0 = ap_const_logic_1;
    } else {
        IFM_2_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_2_d0() {
    IFM_2_d0 = ifm_input_dma_data_d_fu_434_p1.read();
}

void LOAD_IFM::thread_IFM_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_2))) {
        IFM_2_we0 = ap_const_logic_1;
    } else {
        IFM_2_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_3_address0() {
    IFM_3_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_3_ce0 = ap_const_logic_1;
    } else {
        IFM_3_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_3_d0() {
    IFM_3_d0 = ifm_input_dma_data_d_fu_434_p1.read();
}

void LOAD_IFM::thread_IFM_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         !esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(i_mid2_fu_372_p3.read(), ap_const_lv3_2))) {
        IFM_3_we0 = ap_const_logic_1;
    } else {
        IFM_3_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_4_address0() {
    IFM_4_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_4_ce0 = ap_const_logic_1;
    } else {
        IFM_4_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_4_d0() {
    IFM_4_d0 = ifm_input_dma_data_d_1_fu_452_p1.read();
}

void LOAD_IFM::thread_IFM_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_mid2_fu_337_p3.read()) && 
         esl_seteq<1,3,3>(tmp_t_mid2_fu_357_p3.read(), ap_const_lv3_4))) {
        IFM_4_we0 = ap_const_logic_1;
    } else {
        IFM_4_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_5_address0() {
    IFM_5_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_5_ce0 = ap_const_logic_1;
    } else {
        IFM_5_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_5_d0() {
    IFM_5_d0 = ifm_input_dma_data_d_1_fu_452_p1.read();
}

void LOAD_IFM::thread_IFM_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_mid2_fu_337_p3.read()) && 
         esl_seteq<1,3,3>(tmp_t_mid2_fu_357_p3.read(), ap_const_lv3_5))) {
        IFM_5_we0 = ap_const_logic_1;
    } else {
        IFM_5_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_6_address0() {
    IFM_6_address0 =  (sc_lv<8>) (tmp_27_cast_fu_463_p1.read());
}

void LOAD_IFM::thread_IFM_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)))) {
        IFM_6_ce0 = ap_const_logic_1;
    } else {
        IFM_6_ce0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_IFM_6_d0() {
    IFM_6_d0 = ifm_input_dma_data_d_1_fu_452_p1.read();
}

void LOAD_IFM::thread_IFM_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_mid2_fu_337_p3.read()) && 
         !esl_seteq<1,3,3>(tmp_t_mid2_fu_357_p3.read(), ap_const_lv3_4) && 
         !esl_seteq<1,3,3>(tmp_t_mid2_fu_357_p3.read(), ap_const_lv3_5))) {
        IFM_6_we0 = ap_const_logic_1;
    } else {
        IFM_6_we0 = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void LOAD_IFM::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void LOAD_IFM::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void LOAD_IFM::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0));
}

void LOAD_IFM::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_bound_fu_258_p0() {
    bound_fu_258_p0 =  (sc_lv<32>) (bound_fu_258_p00.read());
}

void LOAD_IFM::thread_bound_fu_258_p00() {
    bound_fu_258_p00 = esl_zext<64,32>(custom_Tr.read());
}

void LOAD_IFM::thread_bound_fu_258_p1() {
    bound_fu_258_p1 =  (sc_lv<32>) (bound_fu_258_p10.read());
}

void LOAD_IFM::thread_bound_fu_258_p10() {
    bound_fu_258_p10 = esl_zext<64,32>(custom_Tc.read());
}

void LOAD_IFM::thread_bound_fu_258_p2() {
    bound_fu_258_p2 = (!bound_fu_258_p0.read().is_01() || !bound_fu_258_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_258_p0.read()) * sc_biguint<32>(bound_fu_258_p1.read());
}

void LOAD_IFM::thread_exitcond_flatten5_fu_287_p2() {
    exitcond_flatten5_fu_287_p2 = (!indvar_flatten5_reg_195.read().is_01() || !tmp_reg_512.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten5_reg_195.read() == tmp_reg_512.read());
}

void LOAD_IFM::thread_exitcond_flatten_fu_304_p2() {
    exitcond_flatten_fu_304_p2 = (!indvar_flatten_reg_217.read().is_01() || !bound_reg_507.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_217.read() == bound_reg_507.read());
}

void LOAD_IFM::thread_grp_fu_493_p0() {
    grp_fu_493_p0 =  (sc_lv<5>) (ap_const_lv9_D);
}

void LOAD_IFM::thread_grp_fu_493_p1() {
    grp_fu_493_p1 = (!tmp_22_mid1_fu_365_p3.read()[0].is_01())? sc_lv<9>(): ((tmp_22_mid1_fu_365_p3.read()[0].to_bool())? tmp_33_fu_398_p3.read(): tmp_34_fu_406_p1.read());
}

void LOAD_IFM::thread_grp_fu_493_p2() {
    grp_fu_493_p2 = m_mid2_fu_386_p3.read().range(9-1, 0);
}

void LOAD_IFM::thread_i_5_fu_298_p2() {
    i_5_fu_298_p2 = (!ap_const_lv3_1.is_01() || !i_reg_206.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_reg_206.read()));
}

void LOAD_IFM::thread_i_mid2_fu_372_p3() {
    i_mid2_fu_372_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? i_5_fu_298_p2.read(): i_reg_206.read());
}

void LOAD_IFM::thread_ifm_input_dma_data_d_1_fu_452_p1() {
    ifm_input_dma_data_d_1_fu_452_p1 = ifm_input_dma_data_d_2_fu_442_p4.read();
}

void LOAD_IFM::thread_ifm_input_dma_data_d_2_fu_442_p4() {
    ifm_input_dma_data_d_2_fu_442_p4 = input_dma_I_TDATA.read().range(63, 32);
}

void LOAD_IFM::thread_ifm_input_dma_data_d_fu_434_p1() {
    ifm_input_dma_data_d_fu_434_p1 = tmp_36_fu_430_p1.read();
}

void LOAD_IFM::thread_indvar_flatten_next5_fu_292_p2() {
    indvar_flatten_next5_fu_292_p2 = (!indvar_flatten5_reg_195.read().is_01() || !ap_const_lv66_1.is_01())? sc_lv<66>(): (sc_biguint<66>(indvar_flatten5_reg_195.read()) + sc_biguint<66>(ap_const_lv66_1));
}

void LOAD_IFM::thread_indvar_flatten_next_fu_485_p3() {
    indvar_flatten_next_fu_485_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<64>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? ap_const_lv64_1: indvar_flatten_op_fu_479_p2.read());
}

void LOAD_IFM::thread_indvar_flatten_op_fu_479_p2() {
    indvar_flatten_op_fu_479_p2 = (!indvar_flatten_reg_217.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_217.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void LOAD_IFM::thread_input_dma_I_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0))) {
        input_dma_I_TDATA_blk_n = input_dma_I_TVALID.read();
    } else {
        input_dma_I_TDATA_blk_n = ap_const_logic_1;
    }
}

void LOAD_IFM::thread_input_dma_I_TREADY() {
    if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        input_dma_I_TREADY = ap_const_logic_1;
    } else {
        input_dma_I_TREADY = ap_const_logic_0;
    }
}

void LOAD_IFM::thread_j_4_fu_380_p2() {
    j_4_fu_380_p2 = (!ap_const_lv31_1.is_01() || !j_mid_fu_309_p3.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(j_mid_fu_309_p3.read()));
}

void LOAD_IFM::thread_j_mid2_fu_418_p3() {
    j_mid2_fu_418_p3 = (!tmp_22_mid1_fu_365_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_22_mid1_fu_365_p3.read()[0].to_bool())? j_mid_fu_309_p3.read(): j_4_fu_380_p2.read());
}

void LOAD_IFM::thread_j_mid_fu_309_p3() {
    j_mid_fu_309_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? ap_const_lv31_0: j_reg_228.read());
}

void LOAD_IFM::thread_m_2_fu_473_p2() {
    m_2_fu_473_p2 = (!m_mid2_fu_386_p3.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(m_mid2_fu_386_p3.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void LOAD_IFM::thread_m_cast_fu_278_p1() {
    m_cast_fu_278_p1 = esl_zext<32,31>(m_reg_239.read());
}

void LOAD_IFM::thread_m_mid2_fu_386_p3() {
    m_mid2_fu_386_p3 = (!tmp_22_mid1_fu_365_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_22_mid1_fu_365_p3.read()[0].to_bool())? m_mid_fu_317_p3.read(): ap_const_lv31_0);
}

void LOAD_IFM::thread_m_mid_fu_317_p3() {
    m_mid_fu_317_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? ap_const_lv31_0: m_reg_239.read());
}

void LOAD_IFM::thread_tmp_19_mid1_fu_325_p2() {
    tmp_19_mid1_fu_325_p2 = (!i_5_fu_298_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(i_5_fu_298_p2.read() == ap_const_lv3_3);
}

void LOAD_IFM::thread_tmp_19_mid2_fu_337_p3() {
    tmp_19_mid2_fu_337_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? tmp_19_mid1_fu_325_p2.read(): tmp_s_fu_331_p2.read());
}

void LOAD_IFM::thread_tmp_20_fu_282_p2() {
    tmp_20_fu_282_p2 = (!m_cast_fu_278_p1.read().is_01() || !custom_Tc.read().is_01())? sc_lv<1>(): (sc_bigint<32>(m_cast_fu_278_p1.read()) < sc_bigint<32>(custom_Tc.read()));
}

void LOAD_IFM::thread_tmp_22_mid1_fu_365_p3() {
    tmp_22_mid1_fu_365_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? tmp_22_mid_reg_517.read(): tmp_20_fu_282_p2.read());
}

void LOAD_IFM::thread_tmp_22_mid_fu_272_p2() {
    tmp_22_mid_fu_272_p2 = (!custom_Tc.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(custom_Tc.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void LOAD_IFM::thread_tmp_27_cast_fu_463_p1() {
    tmp_27_cast_fu_463_p1 = esl_sext<64,9>(grp_fu_493_p3.read());
}

void LOAD_IFM::thread_tmp_32_fu_394_p1() {
    tmp_32_fu_394_p1 = j_reg_228.read().range(9-1, 0);
}

void LOAD_IFM::thread_tmp_33_fu_398_p3() {
    tmp_33_fu_398_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<9>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? ap_const_lv9_0: tmp_32_fu_394_p1.read());
}

void LOAD_IFM::thread_tmp_34_fu_406_p1() {
    tmp_34_fu_406_p1 = j_4_fu_380_p2.read().range(9-1, 0);
}

void LOAD_IFM::thread_tmp_36_fu_430_p1() {
    tmp_36_fu_430_p1 = input_dma_I_TDATA.read().range(32-1, 0);
}

void LOAD_IFM::thread_tmp_fu_264_p3() {
    tmp_fu_264_p3 = esl_concat<64,2>(bound_fu_258_p2.read(), ap_const_lv2_0);
}

void LOAD_IFM::thread_tmp_s_fu_331_p2() {
    tmp_s_fu_331_p2 = (!i_reg_206.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_206.read() == ap_const_lv3_3);
}

void LOAD_IFM::thread_tmp_t_fu_351_p2() {
    tmp_t_fu_351_p2 = (i_reg_206.read() ^ ap_const_lv3_4);
}

void LOAD_IFM::thread_tmp_t_mid1_fu_345_p2() {
    tmp_t_mid1_fu_345_p2 = (!ap_const_lv3_5.is_01() || !i_reg_206.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_5) + sc_biguint<3>(i_reg_206.read()));
}

void LOAD_IFM::thread_tmp_t_mid2_fu_357_p3() {
    tmp_t_mid2_fu_357_p3 = (!exitcond_flatten_fu_304_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_304_p2.read()[0].to_bool())? tmp_t_mid1_fu_345_p2.read(): tmp_t_fu_351_p2.read());
}

void LOAD_IFM::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(input_dma_I_TVALID.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond_flatten5_fu_287_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

