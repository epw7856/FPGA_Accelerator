

================================================================
== Vivado HLS Report for 'LOAD_IFM'
================================================================
* Date:           Fri Aug  2 15:36:53 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        LURAM-Test
* Solution:       solution2
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.722|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         1|          1|          1|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond_flatten5)
	2  / (!exitcond_flatten5)
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.42>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%custom_Tc_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %custom_Tc)"   --->   Operation 4 'read' 'custom_Tc_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%custom_Tr_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %custom_Tr)"   --->   Operation 5 'read' 'custom_Tr_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %input_dma_I_V_data, i1* %input_dma_I_V_last, [5 x i8]* @p_str17, i32 0, i32 0, [5 x i8]* @p_str18, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 6 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%cast = zext i32 %custom_Tr_read to i64"   --->   Operation 7 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%cast1 = zext i32 %custom_Tc_read to i64"   --->   Operation 8 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (3.42ns)   --->   "%bound = mul i64 %cast, %cast1"   --->   Operation 9 'mul' 'bound' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp = call i66 @_ssdm_op_BitConcatenate.i66.i64.i2(i64 %bound, i2 0)"   --->   Operation 10 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.99ns)   --->   "%tmp_22_mid = icmp sgt i32 %custom_Tc_read, 0" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 11 'icmp' 'tmp_22_mid' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.65ns)   --->   "br label %1" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 6.72>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten5 = phi i66 [ 0, %0 ], [ %indvar_flatten_next5, %._crit_edge ]"   --->   Operation 13 'phi' 'indvar_flatten5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i = phi i3 [ 0, %0 ], [ %i_mid2, %._crit_edge ]" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 14 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %0 ], [ %indvar_flatten_next, %._crit_edge ]"   --->   Operation 15 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%j = phi i31 [ 0, %0 ], [ %j_mid2, %._crit_edge ]" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 16 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%m = phi i31 [ 0, %0 ], [ %m_2, %._crit_edge ]"   --->   Operation 17 'phi' 'm' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%m_cast = zext i31 %m to i32" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 18 'zext' 'm_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.99ns)   --->   "%tmp_20 = icmp slt i32 %m_cast, %custom_Tc_read" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 19 'icmp' 'tmp_20' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.13ns)   --->   "%exitcond_flatten5 = icmp eq i66 %indvar_flatten5, %tmp"   --->   Operation 20 'icmp' 'exitcond_flatten5' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.10ns)   --->   "%indvar_flatten_next5 = add i66 %indvar_flatten5, 1"   --->   Operation 21 'add' 'indvar_flatten_next5' <Predicate = true> <Delay = 1.10> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten5, label %5, label %.preheader.preheader"   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.67ns)   --->   "%i_5 = add i3 1, %i" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 23 'add' 'i_5' <Predicate = (!exitcond_flatten5)> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.13ns)   --->   "%exitcond_flatten = icmp eq i64 %indvar_flatten, %bound"   --->   Operation 24 'icmp' 'exitcond_flatten' <Predicate = (!exitcond_flatten5)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.41ns)   --->   "%j_mid = select i1 %exitcond_flatten, i31 0, i31 %j" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 25 'select' 'j_mid' <Predicate = (!exitcond_flatten5)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node m_mid2)   --->   "%m_mid = select i1 %exitcond_flatten, i31 0, i31 %m" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 26 'select' 'm_mid' <Predicate = (!exitcond_flatten5)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.58ns)   --->   "%tmp_19_mid1 = icmp eq i3 %i_5, 3" [LURAM-Test/TEST_REF.cpp:70]   --->   Operation 27 'icmp' 'tmp_19_mid1' <Predicate = (!exitcond_flatten5)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.58ns)   --->   "%tmp_s = icmp eq i3 %i, 3" [LURAM-Test/TEST_REF.cpp:70]   --->   Operation 28 'icmp' 'tmp_s' <Predicate = (!exitcond_flatten5)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.17ns)   --->   "%tmp_19_mid2 = select i1 %exitcond_flatten, i1 %tmp_19_mid1, i1 %tmp_s" [LURAM-Test/TEST_REF.cpp:70]   --->   Operation 29 'select' 'tmp_19_mid2' <Predicate = (!exitcond_flatten5)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.67ns)   --->   "%tmp_t_mid1 = add i3 -3, %i" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 30 'add' 'tmp_t_mid1' <Predicate = (!exitcond_flatten5)> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node tmp_t_mid2)   --->   "%tmp_t = xor i3 %i, -4" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 31 'xor' 'tmp_t' <Predicate = (!exitcond_flatten5)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.20ns) (out node of the LUT)   --->   "%tmp_t_mid2 = select i1 %exitcond_flatten, i3 %tmp_t_mid1, i3 %tmp_t" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 32 'select' 'tmp_t_mid2' <Predicate = (!exitcond_flatten5)> <Delay = 0.20> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.17ns)   --->   "%tmp_22_mid1 = select i1 %exitcond_flatten, i1 %tmp_22_mid, i1 %tmp_20" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 33 'select' 'tmp_22_mid1' <Predicate = (!exitcond_flatten5)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.20ns)   --->   "%i_mid2 = select i1 %exitcond_flatten, i3 %i_5, i3 %i" [LURAM-Test/TEST_REF.cpp:57]   --->   Operation 34 'select' 'i_mid2' <Predicate = (!exitcond_flatten5)> <Delay = 0.20> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.00ns)   --->   "%j_4 = add i31 1, %j_mid" [LURAM-Test/TEST_REF.cpp:58]   --->   Operation 35 'add' 'j_4' <Predicate = (!exitcond_flatten5)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.41ns) (out node of the LUT)   --->   "%m_mid2 = select i1 %tmp_22_mid1, i31 %m_mid, i31 0" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 36 'select' 'm_mid2' <Predicate = (!exitcond_flatten5)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node tmp_35)   --->   "%tmp_32 = trunc i31 %j to i9" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 37 'trunc' 'tmp_32' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node tmp_35)   --->   "%tmp_33 = select i1 %exitcond_flatten, i9 0, i9 %tmp_32" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 38 'select' 'tmp_33' <Predicate = (!exitcond_flatten5)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node tmp_35)   --->   "%tmp_34 = trunc i31 %j_4 to i9" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 39 'trunc' 'tmp_34' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.39ns) (out node of the LUT)   --->   "%tmp_35 = select i1 %tmp_22_mid1, i9 %tmp_33, i9 %tmp_34" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 40 'select' 'tmp_35' <Predicate = (!exitcond_flatten5)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.49ns)   --->   "%tmp_23 = mul i9 13, %tmp_35" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 41 'mul' 'tmp_23' <Predicate = (!exitcond_flatten5)> <Delay = 0.49> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 42 [1/1] (0.41ns)   --->   "%j_mid2 = select i1 %tmp_22_mid1, i31 %j_mid, i31 %j_4" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 42 'select' 'j_mid2' <Predicate = (!exitcond_flatten5)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 43 'specregionbegin' 'tmp_21' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [LURAM-Test/TEST_REF.cpp:62]   --->   Operation 44 'specpipeline' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%empty_23 = call { i64, i1 } @_ssdm_op_Read.axis.volatile.i64P.i1P(i64* %input_dma_I_V_data, i1* %input_dma_I_V_last)"   --->   Operation 45 'read' 'empty_23' <Predicate = (!exitcond_flatten5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_data = extractvalue { i64, i1 } %empty_23, 0"   --->   Operation 46 'extractvalue' 'tmp_data' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_36 = trunc i64 %tmp_data to i32" [LURAM-Test/TEST_REF.cpp:66]   --->   Operation 47 'trunc' 'tmp_36' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%ifm_input_dma_data_d = bitcast i32 %tmp_36 to float" [LURAM-Test/TEST_REF.cpp:66]   --->   Operation 48 'bitcast' 'ifm_input_dma_data_d' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%ifm_input_dma_data_d_2 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %tmp_data, i32 32, i32 63)" [LURAM-Test/TEST_REF.cpp:66]   --->   Operation 49 'partselect' 'ifm_input_dma_data_d_2' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%ifm_input_dma_data_d_1 = bitcast i32 %ifm_input_dma_data_d_2 to float" [LURAM-Test/TEST_REF.cpp:66]   --->   Operation 50 'bitcast' 'ifm_input_dma_data_d_1' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_37 = trunc i31 %m_mid2 to i9" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 51 'trunc' 'tmp_37' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (2.03ns)   --->   "%tmp_24 = add i9 %tmp_23, %tmp_37" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 52 'add' 'tmp_24' <Predicate = (!exitcond_flatten5)> <Delay = 2.03> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 2.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_27_cast = sext i9 %tmp_24 to i64" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 53 'sext' 'tmp_27_cast' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%IFM_0_addr = getelementptr [169 x float]* %IFM_0, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 54 'getelementptr' 'IFM_0_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%IFM_1_addr = getelementptr [169 x float]* %IFM_1, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 55 'getelementptr' 'IFM_1_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%IFM_2_addr = getelementptr [169 x float]* %IFM_2, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 56 'getelementptr' 'IFM_2_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%IFM_3_addr = getelementptr [169 x float]* %IFM_3, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 57 'getelementptr' 'IFM_3_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%IFM_4_addr = getelementptr [169 x float]* %IFM_4, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 58 'getelementptr' 'IFM_4_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%IFM_5_addr = getelementptr [169 x float]* %IFM_5, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 59 'getelementptr' 'IFM_5_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%IFM_6_addr = getelementptr [169 x float]* %IFM_6, i64 0, i64 %tmp_27_cast" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 60 'getelementptr' 'IFM_6_addr' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.72ns)   --->   "switch i3 %i_mid2, label %branch10 [
    i3 0, label %branch7
    i3 1, label %branch8
    i3 2, label %branch9
  ]" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 61 'switch' <Predicate = (!exitcond_flatten5)> <Delay = 0.72>
ST_2 : Operation 62 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d, float* %IFM_2_addr, align 4" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 62 'store' <Predicate = (!exitcond_flatten5 & i_mid2 == 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "br label %2" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 63 'br' <Predicate = (!exitcond_flatten5 & i_mid2 == 2)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d, float* %IFM_1_addr, align 4" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 64 'store' <Predicate = (!exitcond_flatten5 & i_mid2 == 1)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "br label %2" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 65 'br' <Predicate = (!exitcond_flatten5 & i_mid2 == 1)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d, float* %IFM_0_addr, align 4" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 66 'store' <Predicate = (!exitcond_flatten5 & i_mid2 == 0)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "br label %2" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 67 'br' <Predicate = (!exitcond_flatten5 & i_mid2 == 0)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d, float* %IFM_3_addr, align 4" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 68 'store' <Predicate = (!exitcond_flatten5 & i_mid2 != 0 & i_mid2 != 1 & i_mid2 != 2)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "br label %2" [LURAM-Test/TEST_REF.cpp:67]   --->   Operation 69 'br' <Predicate = (!exitcond_flatten5 & i_mid2 != 0 & i_mid2 != 1 & i_mid2 != 2)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "br i1 %tmp_19_mid2, label %._crit_edge, label %3" [LURAM-Test/TEST_REF.cpp:70]   --->   Operation 70 'br' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.58ns)   --->   "switch i3 %tmp_t_mid2, label %branch6 [
    i3 -4, label %branch4
    i3 -3, label %branch5
  ]" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 71 'switch' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2)> <Delay = 0.58>
ST_2 : Operation 72 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d_1, float* %IFM_5_addr, align 4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 72 'store' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 == 5)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "br label %4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 73 'br' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 == 5)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d_1, float* %IFM_4_addr, align 4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 74 'store' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 == 4)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "br label %4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 75 'br' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 == 4)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (1.23ns)   --->   "store float %ifm_input_dma_data_d_1, float* %IFM_6_addr, align 4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 76 'store' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 != 4 & tmp_t_mid2 != 5)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "br label %4" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 77 'br' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2 & tmp_t_mid2 != 4 & tmp_t_mid2 != 5)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "br label %._crit_edge" [LURAM-Test/TEST_REF.cpp:71]   --->   Operation 78 'br' <Predicate = (!exitcond_flatten5 & !tmp_19_mid2)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_21)" [LURAM-Test/TEST_REF.cpp:72]   --->   Operation 79 'specregionend' 'empty' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (1.00ns)   --->   "%m_2 = add i31 %m_mid2, 1" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 80 'add' 'm_2' <Predicate = (!exitcond_flatten5)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (1.08ns)   --->   "%indvar_flatten_op = add i64 %indvar_flatten, 1"   --->   Operation 81 'add' 'indvar_flatten_op' <Predicate = (!exitcond_flatten5)> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.42ns)   --->   "%indvar_flatten_next = select i1 %exitcond_flatten, i64 1, i64 %indvar_flatten_op"   --->   Operation 82 'select' 'indvar_flatten_next' <Predicate = (!exitcond_flatten5)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "br label %1" [LURAM-Test/TEST_REF.cpp:60]   --->   Operation 83 'br' <Predicate = (!exitcond_flatten5)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "ret void" [LURAM-Test/TEST_REF.cpp:75]   --->   Operation 84 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.42ns
The critical path consists of the following:
	wire read on port 'custom_Tc' [12]  (0 ns)
	'mul' operation ('bound') [17]  (3.42 ns)

 <State 2>: 6.72ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [24]  (0 ns)
	'icmp' operation ('exitcond_flatten') [34]  (1.13 ns)
	'select' operation ('j_mid', LURAM-Test/TEST_REF.cpp:60) [35]  (0.418 ns)
	'add' operation ('j_4', LURAM-Test/TEST_REF.cpp:58) [45]  (1.01 ns)
	'select' operation ('tmp_35', LURAM-Test/TEST_REF.cpp:67) [50]  (0.398 ns)
	'mul' operation ('tmp_23', LURAM-Test/TEST_REF.cpp:67) [51]  (0.494 ns)
	'add' operation ('tmp_24', LURAM-Test/TEST_REF.cpp:67) [62]  (2.04 ns)
	'getelementptr' operation ('IFM_3_addr', LURAM-Test/TEST_REF.cpp:67) [67]  (0 ns)
	'store' operation (LURAM-Test/TEST_REF.cpp:67) of variable 'ifm_input_dma.data.data1', LURAM-Test/TEST_REF.cpp:66 on array 'IFM_3' [82]  (1.24 ns)

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
