// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LOAD_WEIGHT_DMA (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_dma_W_TDATA,
        input_dma_W_TVALID,
        input_dma_W_TREADY,
        input_dma_W_TLAST,
        WEIGHT1_0_0_V_address0,
        WEIGHT1_0_0_V_ce0,
        WEIGHT1_0_0_V_we0,
        WEIGHT1_0_0_V_d0,
        WEIGHT1_0_1_V_address0,
        WEIGHT1_0_1_V_ce0,
        WEIGHT1_0_1_V_we0,
        WEIGHT1_0_1_V_d0,
        WEIGHT1_0_2_V_address0,
        WEIGHT1_0_2_V_ce0,
        WEIGHT1_0_2_V_we0,
        WEIGHT1_0_2_V_d0,
        WEIGHT1_0_3_V_address0,
        WEIGHT1_0_3_V_ce0,
        WEIGHT1_0_3_V_we0,
        WEIGHT1_0_3_V_d0,
        WEIGHT1_0_4_V_address0,
        WEIGHT1_0_4_V_ce0,
        WEIGHT1_0_4_V_we0,
        WEIGHT1_0_4_V_d0,
        WEIGHT1_0_5_V_address0,
        WEIGHT1_0_5_V_ce0,
        WEIGHT1_0_5_V_we0,
        WEIGHT1_0_5_V_d0,
        WEIGHT1_0_6_V_address0,
        WEIGHT1_0_6_V_ce0,
        WEIGHT1_0_6_V_we0,
        WEIGHT1_0_6_V_d0,
        WEIGHT1_1_0_V_address0,
        WEIGHT1_1_0_V_ce0,
        WEIGHT1_1_0_V_we0,
        WEIGHT1_1_0_V_d0,
        WEIGHT1_1_1_V_address0,
        WEIGHT1_1_1_V_ce0,
        WEIGHT1_1_1_V_we0,
        WEIGHT1_1_1_V_d0,
        WEIGHT1_1_2_V_address0,
        WEIGHT1_1_2_V_ce0,
        WEIGHT1_1_2_V_we0,
        WEIGHT1_1_2_V_d0,
        WEIGHT1_1_3_V_address0,
        WEIGHT1_1_3_V_ce0,
        WEIGHT1_1_3_V_we0,
        WEIGHT1_1_3_V_d0,
        WEIGHT1_1_4_V_address0,
        WEIGHT1_1_4_V_ce0,
        WEIGHT1_1_4_V_we0,
        WEIGHT1_1_4_V_d0,
        WEIGHT1_1_5_V_address0,
        WEIGHT1_1_5_V_ce0,
        WEIGHT1_1_5_V_we0,
        WEIGHT1_1_5_V_d0,
        WEIGHT1_1_6_V_address0,
        WEIGHT1_1_6_V_ce0,
        WEIGHT1_1_6_V_we0,
        WEIGHT1_1_6_V_d0,
        WEIGHT1_2_0_V_address0,
        WEIGHT1_2_0_V_ce0,
        WEIGHT1_2_0_V_we0,
        WEIGHT1_2_0_V_d0,
        WEIGHT1_2_1_V_address0,
        WEIGHT1_2_1_V_ce0,
        WEIGHT1_2_1_V_we0,
        WEIGHT1_2_1_V_d0,
        WEIGHT1_2_2_V_address0,
        WEIGHT1_2_2_V_ce0,
        WEIGHT1_2_2_V_we0,
        WEIGHT1_2_2_V_d0,
        WEIGHT1_2_3_V_address0,
        WEIGHT1_2_3_V_ce0,
        WEIGHT1_2_3_V_we0,
        WEIGHT1_2_3_V_d0,
        WEIGHT1_2_4_V_address0,
        WEIGHT1_2_4_V_ce0,
        WEIGHT1_2_4_V_we0,
        WEIGHT1_2_4_V_d0,
        WEIGHT1_2_5_V_address0,
        WEIGHT1_2_5_V_ce0,
        WEIGHT1_2_5_V_we0,
        WEIGHT1_2_5_V_d0,
        WEIGHT1_2_6_V_address0,
        WEIGHT1_2_6_V_ce0,
        WEIGHT1_2_6_V_we0,
        WEIGHT1_2_6_V_d0,
        WEIGHT1_3_0_V_address0,
        WEIGHT1_3_0_V_ce0,
        WEIGHT1_3_0_V_we0,
        WEIGHT1_3_0_V_d0,
        WEIGHT1_3_1_V_address0,
        WEIGHT1_3_1_V_ce0,
        WEIGHT1_3_1_V_we0,
        WEIGHT1_3_1_V_d0,
        WEIGHT1_3_2_V_address0,
        WEIGHT1_3_2_V_ce0,
        WEIGHT1_3_2_V_we0,
        WEIGHT1_3_2_V_d0,
        WEIGHT1_3_3_V_address0,
        WEIGHT1_3_3_V_ce0,
        WEIGHT1_3_3_V_we0,
        WEIGHT1_3_3_V_d0,
        WEIGHT1_3_4_V_address0,
        WEIGHT1_3_4_V_ce0,
        WEIGHT1_3_4_V_we0,
        WEIGHT1_3_4_V_d0,
        WEIGHT1_3_5_V_address0,
        WEIGHT1_3_5_V_ce0,
        WEIGHT1_3_5_V_we0,
        WEIGHT1_3_5_V_d0,
        WEIGHT1_3_6_V_address0,
        WEIGHT1_3_6_V_ce0,
        WEIGHT1_3_6_V_we0,
        WEIGHT1_3_6_V_d0,
        WEIGHT1_4_0_V_address0,
        WEIGHT1_4_0_V_ce0,
        WEIGHT1_4_0_V_we0,
        WEIGHT1_4_0_V_d0,
        WEIGHT1_4_1_V_address0,
        WEIGHT1_4_1_V_ce0,
        WEIGHT1_4_1_V_we0,
        WEIGHT1_4_1_V_d0,
        WEIGHT1_4_2_V_address0,
        WEIGHT1_4_2_V_ce0,
        WEIGHT1_4_2_V_we0,
        WEIGHT1_4_2_V_d0,
        WEIGHT1_4_3_V_address0,
        WEIGHT1_4_3_V_ce0,
        WEIGHT1_4_3_V_we0,
        WEIGHT1_4_3_V_d0,
        WEIGHT1_4_4_V_address0,
        WEIGHT1_4_4_V_ce0,
        WEIGHT1_4_4_V_we0,
        WEIGHT1_4_4_V_d0,
        WEIGHT1_4_5_V_address0,
        WEIGHT1_4_5_V_ce0,
        WEIGHT1_4_5_V_we0,
        WEIGHT1_4_5_V_d0,
        WEIGHT1_4_6_V_address0,
        WEIGHT1_4_6_V_ce0,
        WEIGHT1_4_6_V_we0,
        WEIGHT1_4_6_V_d0,
        WEIGHT1_5_0_V_address0,
        WEIGHT1_5_0_V_ce0,
        WEIGHT1_5_0_V_we0,
        WEIGHT1_5_0_V_d0,
        WEIGHT1_5_1_V_address0,
        WEIGHT1_5_1_V_ce0,
        WEIGHT1_5_1_V_we0,
        WEIGHT1_5_1_V_d0,
        WEIGHT1_5_2_V_address0,
        WEIGHT1_5_2_V_ce0,
        WEIGHT1_5_2_V_we0,
        WEIGHT1_5_2_V_d0,
        WEIGHT1_5_3_V_address0,
        WEIGHT1_5_3_V_ce0,
        WEIGHT1_5_3_V_we0,
        WEIGHT1_5_3_V_d0,
        WEIGHT1_5_4_V_address0,
        WEIGHT1_5_4_V_ce0,
        WEIGHT1_5_4_V_we0,
        WEIGHT1_5_4_V_d0,
        WEIGHT1_5_5_V_address0,
        WEIGHT1_5_5_V_ce0,
        WEIGHT1_5_5_V_we0,
        WEIGHT1_5_5_V_d0,
        WEIGHT1_5_6_V_address0,
        WEIGHT1_5_6_V_ce0,
        WEIGHT1_5_6_V_we0,
        WEIGHT1_5_6_V_d0,
        WEIGHT1_6_0_V_address0,
        WEIGHT1_6_0_V_ce0,
        WEIGHT1_6_0_V_we0,
        WEIGHT1_6_0_V_d0,
        WEIGHT1_6_1_V_address0,
        WEIGHT1_6_1_V_ce0,
        WEIGHT1_6_1_V_we0,
        WEIGHT1_6_1_V_d0,
        WEIGHT1_6_2_V_address0,
        WEIGHT1_6_2_V_ce0,
        WEIGHT1_6_2_V_we0,
        WEIGHT1_6_2_V_d0,
        WEIGHT1_6_3_V_address0,
        WEIGHT1_6_3_V_ce0,
        WEIGHT1_6_3_V_we0,
        WEIGHT1_6_3_V_d0,
        WEIGHT1_6_4_V_address0,
        WEIGHT1_6_4_V_ce0,
        WEIGHT1_6_4_V_we0,
        WEIGHT1_6_4_V_d0,
        WEIGHT1_6_5_V_address0,
        WEIGHT1_6_5_V_ce0,
        WEIGHT1_6_5_V_we0,
        WEIGHT1_6_5_V_d0,
        WEIGHT1_6_6_V_address0,
        WEIGHT1_6_6_V_ce0,
        WEIGHT1_6_6_V_we0,
        WEIGHT1_6_6_V_d0,
        WEIGHT1_7_0_V_address0,
        WEIGHT1_7_0_V_ce0,
        WEIGHT1_7_0_V_we0,
        WEIGHT1_7_0_V_d0,
        WEIGHT1_7_1_V_address0,
        WEIGHT1_7_1_V_ce0,
        WEIGHT1_7_1_V_we0,
        WEIGHT1_7_1_V_d0,
        WEIGHT1_7_2_V_address0,
        WEIGHT1_7_2_V_ce0,
        WEIGHT1_7_2_V_we0,
        WEIGHT1_7_2_V_d0,
        WEIGHT1_7_3_V_address0,
        WEIGHT1_7_3_V_ce0,
        WEIGHT1_7_3_V_we0,
        WEIGHT1_7_3_V_d0,
        WEIGHT1_7_4_V_address0,
        WEIGHT1_7_4_V_ce0,
        WEIGHT1_7_4_V_we0,
        WEIGHT1_7_4_V_d0,
        WEIGHT1_7_5_V_address0,
        WEIGHT1_7_5_V_ce0,
        WEIGHT1_7_5_V_we0,
        WEIGHT1_7_5_V_d0,
        WEIGHT1_7_6_V_address0,
        WEIGHT1_7_6_V_ce0,
        WEIGHT1_7_6_V_we0,
        WEIGHT1_7_6_V_d0,
        custom_k
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_dma_W_TDATA;
input   input_dma_W_TVALID;
output   input_dma_W_TREADY;
input   input_dma_W_TLAST;
output  [6:0] WEIGHT1_0_0_V_address0;
output   WEIGHT1_0_0_V_ce0;
output   WEIGHT1_0_0_V_we0;
output  [31:0] WEIGHT1_0_0_V_d0;
output  [6:0] WEIGHT1_0_1_V_address0;
output   WEIGHT1_0_1_V_ce0;
output   WEIGHT1_0_1_V_we0;
output  [31:0] WEIGHT1_0_1_V_d0;
output  [6:0] WEIGHT1_0_2_V_address0;
output   WEIGHT1_0_2_V_ce0;
output   WEIGHT1_0_2_V_we0;
output  [31:0] WEIGHT1_0_2_V_d0;
output  [6:0] WEIGHT1_0_3_V_address0;
output   WEIGHT1_0_3_V_ce0;
output   WEIGHT1_0_3_V_we0;
output  [31:0] WEIGHT1_0_3_V_d0;
output  [6:0] WEIGHT1_0_4_V_address0;
output   WEIGHT1_0_4_V_ce0;
output   WEIGHT1_0_4_V_we0;
output  [31:0] WEIGHT1_0_4_V_d0;
output  [6:0] WEIGHT1_0_5_V_address0;
output   WEIGHT1_0_5_V_ce0;
output   WEIGHT1_0_5_V_we0;
output  [31:0] WEIGHT1_0_5_V_d0;
output  [6:0] WEIGHT1_0_6_V_address0;
output   WEIGHT1_0_6_V_ce0;
output   WEIGHT1_0_6_V_we0;
output  [31:0] WEIGHT1_0_6_V_d0;
output  [6:0] WEIGHT1_1_0_V_address0;
output   WEIGHT1_1_0_V_ce0;
output   WEIGHT1_1_0_V_we0;
output  [31:0] WEIGHT1_1_0_V_d0;
output  [6:0] WEIGHT1_1_1_V_address0;
output   WEIGHT1_1_1_V_ce0;
output   WEIGHT1_1_1_V_we0;
output  [31:0] WEIGHT1_1_1_V_d0;
output  [6:0] WEIGHT1_1_2_V_address0;
output   WEIGHT1_1_2_V_ce0;
output   WEIGHT1_1_2_V_we0;
output  [31:0] WEIGHT1_1_2_V_d0;
output  [6:0] WEIGHT1_1_3_V_address0;
output   WEIGHT1_1_3_V_ce0;
output   WEIGHT1_1_3_V_we0;
output  [31:0] WEIGHT1_1_3_V_d0;
output  [6:0] WEIGHT1_1_4_V_address0;
output   WEIGHT1_1_4_V_ce0;
output   WEIGHT1_1_4_V_we0;
output  [31:0] WEIGHT1_1_4_V_d0;
output  [6:0] WEIGHT1_1_5_V_address0;
output   WEIGHT1_1_5_V_ce0;
output   WEIGHT1_1_5_V_we0;
output  [31:0] WEIGHT1_1_5_V_d0;
output  [6:0] WEIGHT1_1_6_V_address0;
output   WEIGHT1_1_6_V_ce0;
output   WEIGHT1_1_6_V_we0;
output  [31:0] WEIGHT1_1_6_V_d0;
output  [6:0] WEIGHT1_2_0_V_address0;
output   WEIGHT1_2_0_V_ce0;
output   WEIGHT1_2_0_V_we0;
output  [31:0] WEIGHT1_2_0_V_d0;
output  [6:0] WEIGHT1_2_1_V_address0;
output   WEIGHT1_2_1_V_ce0;
output   WEIGHT1_2_1_V_we0;
output  [31:0] WEIGHT1_2_1_V_d0;
output  [6:0] WEIGHT1_2_2_V_address0;
output   WEIGHT1_2_2_V_ce0;
output   WEIGHT1_2_2_V_we0;
output  [31:0] WEIGHT1_2_2_V_d0;
output  [6:0] WEIGHT1_2_3_V_address0;
output   WEIGHT1_2_3_V_ce0;
output   WEIGHT1_2_3_V_we0;
output  [31:0] WEIGHT1_2_3_V_d0;
output  [6:0] WEIGHT1_2_4_V_address0;
output   WEIGHT1_2_4_V_ce0;
output   WEIGHT1_2_4_V_we0;
output  [31:0] WEIGHT1_2_4_V_d0;
output  [6:0] WEIGHT1_2_5_V_address0;
output   WEIGHT1_2_5_V_ce0;
output   WEIGHT1_2_5_V_we0;
output  [31:0] WEIGHT1_2_5_V_d0;
output  [6:0] WEIGHT1_2_6_V_address0;
output   WEIGHT1_2_6_V_ce0;
output   WEIGHT1_2_6_V_we0;
output  [31:0] WEIGHT1_2_6_V_d0;
output  [6:0] WEIGHT1_3_0_V_address0;
output   WEIGHT1_3_0_V_ce0;
output   WEIGHT1_3_0_V_we0;
output  [31:0] WEIGHT1_3_0_V_d0;
output  [6:0] WEIGHT1_3_1_V_address0;
output   WEIGHT1_3_1_V_ce0;
output   WEIGHT1_3_1_V_we0;
output  [31:0] WEIGHT1_3_1_V_d0;
output  [6:0] WEIGHT1_3_2_V_address0;
output   WEIGHT1_3_2_V_ce0;
output   WEIGHT1_3_2_V_we0;
output  [31:0] WEIGHT1_3_2_V_d0;
output  [6:0] WEIGHT1_3_3_V_address0;
output   WEIGHT1_3_3_V_ce0;
output   WEIGHT1_3_3_V_we0;
output  [31:0] WEIGHT1_3_3_V_d0;
output  [6:0] WEIGHT1_3_4_V_address0;
output   WEIGHT1_3_4_V_ce0;
output   WEIGHT1_3_4_V_we0;
output  [31:0] WEIGHT1_3_4_V_d0;
output  [6:0] WEIGHT1_3_5_V_address0;
output   WEIGHT1_3_5_V_ce0;
output   WEIGHT1_3_5_V_we0;
output  [31:0] WEIGHT1_3_5_V_d0;
output  [6:0] WEIGHT1_3_6_V_address0;
output   WEIGHT1_3_6_V_ce0;
output   WEIGHT1_3_6_V_we0;
output  [31:0] WEIGHT1_3_6_V_d0;
output  [6:0] WEIGHT1_4_0_V_address0;
output   WEIGHT1_4_0_V_ce0;
output   WEIGHT1_4_0_V_we0;
output  [31:0] WEIGHT1_4_0_V_d0;
output  [6:0] WEIGHT1_4_1_V_address0;
output   WEIGHT1_4_1_V_ce0;
output   WEIGHT1_4_1_V_we0;
output  [31:0] WEIGHT1_4_1_V_d0;
output  [6:0] WEIGHT1_4_2_V_address0;
output   WEIGHT1_4_2_V_ce0;
output   WEIGHT1_4_2_V_we0;
output  [31:0] WEIGHT1_4_2_V_d0;
output  [6:0] WEIGHT1_4_3_V_address0;
output   WEIGHT1_4_3_V_ce0;
output   WEIGHT1_4_3_V_we0;
output  [31:0] WEIGHT1_4_3_V_d0;
output  [6:0] WEIGHT1_4_4_V_address0;
output   WEIGHT1_4_4_V_ce0;
output   WEIGHT1_4_4_V_we0;
output  [31:0] WEIGHT1_4_4_V_d0;
output  [6:0] WEIGHT1_4_5_V_address0;
output   WEIGHT1_4_5_V_ce0;
output   WEIGHT1_4_5_V_we0;
output  [31:0] WEIGHT1_4_5_V_d0;
output  [6:0] WEIGHT1_4_6_V_address0;
output   WEIGHT1_4_6_V_ce0;
output   WEIGHT1_4_6_V_we0;
output  [31:0] WEIGHT1_4_6_V_d0;
output  [6:0] WEIGHT1_5_0_V_address0;
output   WEIGHT1_5_0_V_ce0;
output   WEIGHT1_5_0_V_we0;
output  [31:0] WEIGHT1_5_0_V_d0;
output  [6:0] WEIGHT1_5_1_V_address0;
output   WEIGHT1_5_1_V_ce0;
output   WEIGHT1_5_1_V_we0;
output  [31:0] WEIGHT1_5_1_V_d0;
output  [6:0] WEIGHT1_5_2_V_address0;
output   WEIGHT1_5_2_V_ce0;
output   WEIGHT1_5_2_V_we0;
output  [31:0] WEIGHT1_5_2_V_d0;
output  [6:0] WEIGHT1_5_3_V_address0;
output   WEIGHT1_5_3_V_ce0;
output   WEIGHT1_5_3_V_we0;
output  [31:0] WEIGHT1_5_3_V_d0;
output  [6:0] WEIGHT1_5_4_V_address0;
output   WEIGHT1_5_4_V_ce0;
output   WEIGHT1_5_4_V_we0;
output  [31:0] WEIGHT1_5_4_V_d0;
output  [6:0] WEIGHT1_5_5_V_address0;
output   WEIGHT1_5_5_V_ce0;
output   WEIGHT1_5_5_V_we0;
output  [31:0] WEIGHT1_5_5_V_d0;
output  [6:0] WEIGHT1_5_6_V_address0;
output   WEIGHT1_5_6_V_ce0;
output   WEIGHT1_5_6_V_we0;
output  [31:0] WEIGHT1_5_6_V_d0;
output  [6:0] WEIGHT1_6_0_V_address0;
output   WEIGHT1_6_0_V_ce0;
output   WEIGHT1_6_0_V_we0;
output  [31:0] WEIGHT1_6_0_V_d0;
output  [6:0] WEIGHT1_6_1_V_address0;
output   WEIGHT1_6_1_V_ce0;
output   WEIGHT1_6_1_V_we0;
output  [31:0] WEIGHT1_6_1_V_d0;
output  [6:0] WEIGHT1_6_2_V_address0;
output   WEIGHT1_6_2_V_ce0;
output   WEIGHT1_6_2_V_we0;
output  [31:0] WEIGHT1_6_2_V_d0;
output  [6:0] WEIGHT1_6_3_V_address0;
output   WEIGHT1_6_3_V_ce0;
output   WEIGHT1_6_3_V_we0;
output  [31:0] WEIGHT1_6_3_V_d0;
output  [6:0] WEIGHT1_6_4_V_address0;
output   WEIGHT1_6_4_V_ce0;
output   WEIGHT1_6_4_V_we0;
output  [31:0] WEIGHT1_6_4_V_d0;
output  [6:0] WEIGHT1_6_5_V_address0;
output   WEIGHT1_6_5_V_ce0;
output   WEIGHT1_6_5_V_we0;
output  [31:0] WEIGHT1_6_5_V_d0;
output  [6:0] WEIGHT1_6_6_V_address0;
output   WEIGHT1_6_6_V_ce0;
output   WEIGHT1_6_6_V_we0;
output  [31:0] WEIGHT1_6_6_V_d0;
output  [6:0] WEIGHT1_7_0_V_address0;
output   WEIGHT1_7_0_V_ce0;
output   WEIGHT1_7_0_V_we0;
output  [31:0] WEIGHT1_7_0_V_d0;
output  [6:0] WEIGHT1_7_1_V_address0;
output   WEIGHT1_7_1_V_ce0;
output   WEIGHT1_7_1_V_we0;
output  [31:0] WEIGHT1_7_1_V_d0;
output  [6:0] WEIGHT1_7_2_V_address0;
output   WEIGHT1_7_2_V_ce0;
output   WEIGHT1_7_2_V_we0;
output  [31:0] WEIGHT1_7_2_V_d0;
output  [6:0] WEIGHT1_7_3_V_address0;
output   WEIGHT1_7_3_V_ce0;
output   WEIGHT1_7_3_V_we0;
output  [31:0] WEIGHT1_7_3_V_d0;
output  [6:0] WEIGHT1_7_4_V_address0;
output   WEIGHT1_7_4_V_ce0;
output   WEIGHT1_7_4_V_we0;
output  [31:0] WEIGHT1_7_4_V_d0;
output  [6:0] WEIGHT1_7_5_V_address0;
output   WEIGHT1_7_5_V_ce0;
output   WEIGHT1_7_5_V_we0;
output  [31:0] WEIGHT1_7_5_V_d0;
output  [6:0] WEIGHT1_7_6_V_address0;
output   WEIGHT1_7_6_V_ce0;
output   WEIGHT1_7_6_V_we0;
output  [31:0] WEIGHT1_7_6_V_d0;
input  [31:0] custom_k;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_dma_W_TREADY;
reg WEIGHT1_0_0_V_ce0;
reg WEIGHT1_0_0_V_we0;
reg WEIGHT1_0_1_V_ce0;
reg WEIGHT1_0_1_V_we0;
reg WEIGHT1_0_2_V_ce0;
reg WEIGHT1_0_2_V_we0;
reg WEIGHT1_0_3_V_ce0;
reg WEIGHT1_0_3_V_we0;
reg WEIGHT1_0_4_V_ce0;
reg WEIGHT1_0_4_V_we0;
reg WEIGHT1_0_5_V_ce0;
reg WEIGHT1_0_5_V_we0;
reg WEIGHT1_0_6_V_ce0;
reg WEIGHT1_0_6_V_we0;
reg WEIGHT1_1_0_V_ce0;
reg WEIGHT1_1_0_V_we0;
reg WEIGHT1_1_1_V_ce0;
reg WEIGHT1_1_1_V_we0;
reg WEIGHT1_1_2_V_ce0;
reg WEIGHT1_1_2_V_we0;
reg WEIGHT1_1_3_V_ce0;
reg WEIGHT1_1_3_V_we0;
reg WEIGHT1_1_4_V_ce0;
reg WEIGHT1_1_4_V_we0;
reg WEIGHT1_1_5_V_ce0;
reg WEIGHT1_1_5_V_we0;
reg WEIGHT1_1_6_V_ce0;
reg WEIGHT1_1_6_V_we0;
reg WEIGHT1_2_0_V_ce0;
reg WEIGHT1_2_0_V_we0;
reg WEIGHT1_2_1_V_ce0;
reg WEIGHT1_2_1_V_we0;
reg WEIGHT1_2_2_V_ce0;
reg WEIGHT1_2_2_V_we0;
reg WEIGHT1_2_3_V_ce0;
reg WEIGHT1_2_3_V_we0;
reg WEIGHT1_2_4_V_ce0;
reg WEIGHT1_2_4_V_we0;
reg WEIGHT1_2_5_V_ce0;
reg WEIGHT1_2_5_V_we0;
reg WEIGHT1_2_6_V_ce0;
reg WEIGHT1_2_6_V_we0;
reg WEIGHT1_3_0_V_ce0;
reg WEIGHT1_3_0_V_we0;
reg WEIGHT1_3_1_V_ce0;
reg WEIGHT1_3_1_V_we0;
reg WEIGHT1_3_2_V_ce0;
reg WEIGHT1_3_2_V_we0;
reg WEIGHT1_3_3_V_ce0;
reg WEIGHT1_3_3_V_we0;
reg WEIGHT1_3_4_V_ce0;
reg WEIGHT1_3_4_V_we0;
reg WEIGHT1_3_5_V_ce0;
reg WEIGHT1_3_5_V_we0;
reg WEIGHT1_3_6_V_ce0;
reg WEIGHT1_3_6_V_we0;
reg WEIGHT1_4_0_V_ce0;
reg WEIGHT1_4_0_V_we0;
reg WEIGHT1_4_1_V_ce0;
reg WEIGHT1_4_1_V_we0;
reg WEIGHT1_4_2_V_ce0;
reg WEIGHT1_4_2_V_we0;
reg WEIGHT1_4_3_V_ce0;
reg WEIGHT1_4_3_V_we0;
reg WEIGHT1_4_4_V_ce0;
reg WEIGHT1_4_4_V_we0;
reg WEIGHT1_4_5_V_ce0;
reg WEIGHT1_4_5_V_we0;
reg WEIGHT1_4_6_V_ce0;
reg WEIGHT1_4_6_V_we0;
reg WEIGHT1_5_0_V_ce0;
reg WEIGHT1_5_0_V_we0;
reg WEIGHT1_5_1_V_ce0;
reg WEIGHT1_5_1_V_we0;
reg WEIGHT1_5_2_V_ce0;
reg WEIGHT1_5_2_V_we0;
reg WEIGHT1_5_3_V_ce0;
reg WEIGHT1_5_3_V_we0;
reg WEIGHT1_5_4_V_ce0;
reg WEIGHT1_5_4_V_we0;
reg WEIGHT1_5_5_V_ce0;
reg WEIGHT1_5_5_V_we0;
reg WEIGHT1_5_6_V_ce0;
reg WEIGHT1_5_6_V_we0;
reg WEIGHT1_6_0_V_ce0;
reg WEIGHT1_6_0_V_we0;
reg WEIGHT1_6_1_V_ce0;
reg WEIGHT1_6_1_V_we0;
reg WEIGHT1_6_2_V_ce0;
reg WEIGHT1_6_2_V_we0;
reg WEIGHT1_6_3_V_ce0;
reg WEIGHT1_6_3_V_we0;
reg WEIGHT1_6_4_V_ce0;
reg WEIGHT1_6_4_V_we0;
reg WEIGHT1_6_5_V_ce0;
reg WEIGHT1_6_5_V_we0;
reg WEIGHT1_6_6_V_ce0;
reg WEIGHT1_6_6_V_we0;
reg WEIGHT1_7_0_V_ce0;
reg WEIGHT1_7_0_V_we0;
reg WEIGHT1_7_1_V_ce0;
reg WEIGHT1_7_1_V_we0;
reg WEIGHT1_7_2_V_ce0;
reg WEIGHT1_7_2_V_we0;
reg WEIGHT1_7_3_V_ce0;
reg WEIGHT1_7_3_V_we0;
reg WEIGHT1_7_4_V_ce0;
reg WEIGHT1_7_4_V_we0;
reg WEIGHT1_7_5_V_ce0;
reg WEIGHT1_7_5_V_we0;
reg WEIGHT1_7_6_V_ce0;
reg WEIGHT1_7_6_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_dma_W_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_flatten4_fu_1053_p2;
wire   [63:0] bound_fu_1017_p2;
reg   [63:0] bound_reg_1413;
wire   [66:0] bound4_fu_1027_p2;
reg   [66:0] bound4_reg_1418;
wire   [68:0] tmp_fu_1033_p3;
reg   [68:0] tmp_reg_1423;
wire   [0:0] exitcond_mid_fu_1041_p2;
reg   [0:0] exitcond_mid_reg_1428;
wire   [0:0] exitcond_flatten_mid_fu_1047_p2;
reg   [0:0] exitcond_flatten_mid_reg_1434;
wire   [68:0] indvar_flatten_next4_fu_1058_p2;
reg    ap_block_state2;
wire   [2:0] i_mid2_fu_1127_p3;
wire   [2:0] j_mid2_fu_1162_p3;
wire   [30:0] m_mid2_fu_1220_p3;
wire   [31:0] l_1_fu_1365_p2;
wire   [63:0] indvar_flatten_next_fu_1377_p3;
wire   [66:0] indvar_flatten_next3_fu_1391_p3;
reg   [68:0] indvar_flatten3_reg_936;
reg   [2:0] i_reg_947;
reg   [66:0] indvar_flatten4_reg_958;
reg   [2:0] j_reg_969;
reg   [63:0] indvar_flatten_reg_980;
reg   [30:0] m_reg_991;
reg   [31:0] l_reg_1002;
wire  signed [63:0] tmp_23_cast_fu_1306_p1;
wire   [31:0] tmp_36_fu_1232_p1;
wire   [2:0] tmp_t_mid2_fu_1095_p3;
wire   [31:0] bound_fu_1017_p0;
wire   [63:0] cast_fu_1013_p1;
wire   [31:0] bound_fu_1017_p1;
wire   [63:0] bound4_fu_1027_p0;
wire   [0:0] exitcond_flatten_fu_1070_p2;
wire   [2:0] tmp_t_mid1_fu_1083_p2;
wire   [2:0] tmp_t_fu_1089_p2;
wire   [0:0] exitcond_fu_1103_p2;
wire   [0:0] exitcond_flatten1_fu_1115_p2;
wire   [2:0] i_4_fu_1064_p2;
wire   [2:0] j_mid_fu_1075_p3;
wire   [0:0] exitcond_flatten_mid_2_fu_1120_p3;
wire   [0:0] tmp_17_fu_1141_p2;
wire   [0:0] exitcond_mid1_fu_1108_p3;
wire   [2:0] j_3_fu_1135_p2;
wire   [30:0] m_mid_fu_1147_p3;
wire   [0:0] exitcond_mid2_fu_1155_p3;
wire   [0:0] tmp_20_fu_1176_p2;
wire   [0:0] tmp_31_fu_1182_p2;
wire   [30:0] m_1_fu_1170_p2;
wire   [7:0] tmp_33_fu_1200_p1;
wire   [7:0] tmp_32_fu_1196_p1;
wire   [7:0] tmp_34_fu_1204_p3;
wire   [31:0] l_mid2_fu_1188_p3;
wire  signed [7:0] grp_fu_1399_p3;
wire   [63:0] indvar_flatten_op_fu_1371_p2;
wire   [66:0] indvar_flatten16_op_fu_1385_p2;
wire   [4:0] grp_fu_1399_p0;
wire  signed [7:0] grp_fu_1399_p1;
wire   [7:0] grp_fu_1399_p2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
wire   [66:0] bound4_fu_1027_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

top_mac_muladd_5nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
top_mac_muladd_5nbkb_U1(
    .din0(grp_fu_1399_p0),
    .din1(grp_fu_1399_p1),
    .din2(grp_fu_1399_p2),
    .dout(grp_fu_1399_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_947 <= i_mid2_fu_1127_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_947 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten3_reg_936 <= indvar_flatten_next4_fu_1058_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten3_reg_936 <= 69'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten4_reg_958 <= indvar_flatten_next3_fu_1391_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten4_reg_958 <= 67'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_980 <= indvar_flatten_next_fu_1377_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_980 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_969 <= j_mid2_fu_1162_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_969 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        l_reg_1002 <= l_1_fu_1365_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l_reg_1002 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_reg_991 <= m_mid2_fu_1220_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        m_reg_991 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bound4_reg_1418 <= bound4_fu_1027_p2;
        bound_reg_1413 <= bound_fu_1017_p2;
        exitcond_flatten_mid_reg_1434 <= exitcond_flatten_mid_fu_1047_p2;
        exitcond_mid_reg_1428 <= exitcond_mid_fu_1041_p2;
        tmp_reg_1423[68 : 2] <= tmp_fu_1033_p3[68 : 2];
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd0) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd1) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd2) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd3) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd4) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd5) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_0_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1162_p3 == 3'd7) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((j_mid2_fu_1162_p3 == 3'd6) & (i_mid2_fu_1127_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_0_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_0_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd0) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd1) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd2) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd3) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd4) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd5) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_1_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_1_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1162_p3 == 3'd7) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((j_mid2_fu_1162_p3 == 3'd6) & (i_mid2_fu_1127_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_1_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_1_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd0) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd1) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd2) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd3) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd4) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd5) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_2_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_2_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((j_mid2_fu_1162_p3 == 3'd7) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((j_mid2_fu_1162_p3 == 3'd6) & (i_mid2_fu_1127_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_2_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_2_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd3) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd4) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd5) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_3_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_3_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & (j_mid2_fu_1162_p3 == 3'd7) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | (~(i_mid2_fu_1127_p3 == 3'd0) & ~(i_mid2_fu_1127_p3 == 3'd1) & ~(i_mid2_fu_1127_p3 == 3'd2) & (j_mid2_fu_1162_p3 == 3'd6) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_3_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_3_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd3) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd4) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd5) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_4_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_4_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd7) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((tmp_t_mid2_fu_1095_p3 == 3'd4) & (j_mid2_fu_1162_p3 == 3'd6) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_4_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_4_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd3) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd4) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd5) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_5_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_5_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd7) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((tmp_t_mid2_fu_1095_p3 == 3'd5) & (j_mid2_fu_1162_p3 == 3'd6) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_5_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_5_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd3) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd4) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd5) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_6_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_6_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (((tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd7) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | ((tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd6) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_6_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_6_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_0_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd0) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_0_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_1_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd1) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_1_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_2_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd2) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_2_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_3_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd3) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_3_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_4_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd4) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_4_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_5_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & ~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (j_mid2_fu_1162_p3 == 3'd5) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_5_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        WEIGHT1_7_6_V_ce0 = 1'b1;
    end else begin
        WEIGHT1_7_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd7) & (exitcond_flatten4_fu_1053_p2 == 1'd0)) | (~(tmp_t_mid2_fu_1095_p3 == 3'd4) & ~(tmp_t_mid2_fu_1095_p3 == 3'd5) & ~(tmp_t_mid2_fu_1095_p3 == 3'd6) & (j_mid2_fu_1162_p3 == 3'd6) & (exitcond_flatten4_fu_1053_p2 == 1'd0))))) begin
        WEIGHT1_7_6_V_we0 = 1'b1;
    end else begin
        WEIGHT1_7_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_W_TDATA_blk_n = input_dma_W_TVALID;
    end else begin
        input_dma_W_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        input_dma_W_TREADY = 1'b1;
    end else begin
        input_dma_W_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0)) & (exitcond_flatten4_fu_1053_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign WEIGHT1_0_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_0_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_1_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_2_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_3_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_4_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_5_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_0_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_0_6_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_0_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_1_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_2_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_3_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_4_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_5_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_1_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_1_6_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_0_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_1_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_2_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_3_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_4_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_5_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_2_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_2_6_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_0_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_1_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_2_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_3_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_4_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_5_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_3_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_3_6_V_d0 = tmp_36_fu_1232_p1;

assign WEIGHT1_4_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_0_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_1_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_2_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_3_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_4_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_5_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_4_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_4_6_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_0_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_1_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_2_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_3_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_4_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_5_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_5_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_5_6_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_0_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_1_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_2_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_3_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_4_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_5_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_6_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_6_6_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_0_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_0_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_1_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_1_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_2_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_2_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_3_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_3_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_4_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_4_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_5_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_5_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign WEIGHT1_7_6_V_address0 = tmp_23_cast_fu_1306_p1;

assign WEIGHT1_7_6_V_d0 = {{input_dma_W_TDATA[63:32]}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state2 = ((exitcond_flatten4_fu_1053_p2 == 1'd0) & (input_dma_W_TVALID == 1'b0));
end

assign bound4_fu_1027_p0 = bound4_fu_1027_p00;

assign bound4_fu_1027_p00 = bound_fu_1017_p2;

assign bound4_fu_1027_p2 = (bound4_fu_1027_p0 * $signed('h7));

assign bound_fu_1017_p0 = cast_fu_1013_p1;

assign bound_fu_1017_p1 = cast_fu_1013_p1;

assign bound_fu_1017_p2 = (bound_fu_1017_p0 * bound_fu_1017_p1);

assign cast_fu_1013_p1 = custom_k;

assign exitcond_flatten1_fu_1115_p2 = ((indvar_flatten_reg_980 == bound_reg_1413) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_1053_p2 = ((indvar_flatten3_reg_936 == tmp_reg_1423) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1070_p2 = ((indvar_flatten4_reg_958 == bound4_reg_1418) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_2_fu_1120_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? exitcond_flatten_mid_reg_1434 : exitcond_flatten1_fu_1115_p2);

assign exitcond_flatten_mid_fu_1047_p2 = ((bound_fu_1017_p2 == 64'd0) ? 1'b1 : 1'b0);

assign exitcond_fu_1103_p2 = ((l_reg_1002 == custom_k) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_1108_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? exitcond_mid_reg_1428 : exitcond_fu_1103_p2);

assign exitcond_mid2_fu_1155_p3 = ((exitcond_flatten_mid_2_fu_1120_p3[0:0] === 1'b1) ? exitcond_mid_reg_1428 : exitcond_mid1_fu_1108_p3);

assign exitcond_mid_fu_1041_p2 = ((custom_k == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_1399_p0 = 8'd11;

assign grp_fu_1399_p1 = ((exitcond_mid2_fu_1155_p3[0:0] === 1'b1) ? tmp_32_fu_1196_p1 : tmp_34_fu_1204_p3);

assign grp_fu_1399_p2 = l_mid2_fu_1188_p3[7:0];

assign i_4_fu_1064_p2 = (3'd1 + i_reg_947);

assign i_mid2_fu_1127_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? i_4_fu_1064_p2 : i_reg_947);

assign indvar_flatten16_op_fu_1385_p2 = (indvar_flatten4_reg_958 + 67'd1);

assign indvar_flatten_next3_fu_1391_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? 67'd1 : indvar_flatten16_op_fu_1385_p2);

assign indvar_flatten_next4_fu_1058_p2 = (indvar_flatten3_reg_936 + 69'd1);

assign indvar_flatten_next_fu_1377_p3 = ((tmp_17_fu_1141_p2[0:0] === 1'b1) ? 64'd1 : indvar_flatten_op_fu_1371_p2);

assign indvar_flatten_op_fu_1371_p2 = (indvar_flatten_reg_980 + 64'd1);

assign j_3_fu_1135_p2 = (3'd1 + j_mid_fu_1075_p3);

assign j_mid2_fu_1162_p3 = ((exitcond_flatten_mid_2_fu_1120_p3[0:0] === 1'b1) ? j_3_fu_1135_p2 : j_mid_fu_1075_p3);

assign j_mid_fu_1075_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? 3'd0 : j_reg_969);

assign l_1_fu_1365_p2 = (l_mid2_fu_1188_p3 + 32'd1);

assign l_mid2_fu_1188_p3 = ((tmp_31_fu_1182_p2[0:0] === 1'b1) ? 32'd0 : l_reg_1002);

assign m_1_fu_1170_p2 = (31'd1 + m_mid_fu_1147_p3);

assign m_mid2_fu_1220_p3 = ((exitcond_mid2_fu_1155_p3[0:0] === 1'b1) ? m_1_fu_1170_p2 : m_mid_fu_1147_p3);

assign m_mid_fu_1147_p3 = ((tmp_17_fu_1141_p2[0:0] === 1'b1) ? 31'd0 : m_reg_991);

assign tmp_17_fu_1141_p2 = (exitcond_flatten_mid_2_fu_1120_p3 | exitcond_flatten_fu_1070_p2);

assign tmp_20_fu_1176_p2 = (exitcond_mid2_fu_1155_p3 | exitcond_flatten_mid_2_fu_1120_p3);

assign tmp_23_cast_fu_1306_p1 = grp_fu_1399_p3;

assign tmp_31_fu_1182_p2 = (tmp_20_fu_1176_p2 | exitcond_flatten_fu_1070_p2);

assign tmp_32_fu_1196_p1 = m_1_fu_1170_p2[7:0];

assign tmp_33_fu_1200_p1 = m_reg_991[7:0];

assign tmp_34_fu_1204_p3 = ((tmp_17_fu_1141_p2[0:0] === 1'b1) ? 8'd0 : tmp_33_fu_1200_p1);

assign tmp_36_fu_1232_p1 = input_dma_W_TDATA[31:0];

assign tmp_fu_1033_p3 = {{bound4_fu_1027_p2}, {2'd0}};

assign tmp_t_fu_1089_p2 = (i_reg_947 ^ 3'd4);

assign tmp_t_mid1_fu_1083_p2 = ($signed(3'd5) + $signed(i_reg_947));

assign tmp_t_mid2_fu_1095_p3 = ((exitcond_flatten_fu_1070_p2[0:0] === 1'b1) ? tmp_t_mid1_fu_1083_p2 : tmp_t_fu_1089_p2);

always @ (posedge ap_clk) begin
    tmp_reg_1423[1:0] <= 2'b00;
end

endmodule //LOAD_WEIGHT_DMA
